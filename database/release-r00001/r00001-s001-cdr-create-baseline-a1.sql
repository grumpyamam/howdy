-- -------------------------------------------------------------------------------------------------
-- Script   : r00001-s001-cdr-create-baseline-a1.sql
--
-- Purpose  : Create a baseline of CDR ODS tables
--
-- Database : FT ODS
-- Schema   : CDR
-- 
-- Version  Date          Author              Change Description
-- -------  -----------   -----------------   ------------------------------------------------------
-- 1.00     11-MAY-2017   Gary Huitson        Created
--
-- -------------------------------------------------------------------------------------------------

SET @script_name = "r00001-s001-cdr-create-baseline-a1.sql";

USE `CDR`;


/* Header line. Object: ACCOUNT_HIERARCHY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ACCOUNT_HIERARCHY` (
	`ACCOUNT_HIERARCHY_CODE` varchar(20) NOT NULL,
	`ACCOUNT_HIERARCHY_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ACCOUNT_HIERARCHY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ACCOUNT_HIERARCHY_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `ACCOUNT_HIERARCHY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ACTIVE_INGREDIENT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ACTIVE_INGREDIENT` (
	`ACTIVE_INGREDIENT_CODE` varchar(20) NOT NULL,
	`ACTIVE_INGREDIENT_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ACTIVE_INGREDIENT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `ACTIVE_INGREDIENT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ACTIVITY_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ACTIVITY_GROUP` (
	`ACTIVITY_GROUP_CODE` varchar(20) NOT NULL,
	`ACTIVITY_GROUP_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ACTIVITY_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `ACTIVITY_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ACTIVITY_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ACTIVITY_TYPE` (
	`ACTIVITY_TYPE_CODE` varchar(20) NOT NULL,
	`ACTIVITY_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ACTIVITY_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ACTIVITY_TYPE_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `ACTIVITY_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ALT_MANAGEMENT_HIER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ALT_MANAGEMENT_HIER` (
	`ALT_MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`ALT_HIER_CODE` varchar(20) NOT NULL,
	`ALT_MANAGEMENT_HIER_LEVEL` int(11) NOT NULL,
	`MANAGEMENT_UNIT_DESCRIPTION` varchar(100) NOT NULL,
	`ALT_HIER_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`PARENT_ALT_MANAGEMENT_UNIT_CODE` varchar(20) default NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ALT_MANAGEMENT_HIER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ALT_MANAGEMENT_HIER_TO_ALT_MANAGEMENT_HIER_FK_PARENT` ( `PARENT_ALT_MANAGEMENT_UNIT_CODE`, `ALT_HIER_CODE` ),
	PRIMARY KEY  ( `ALT_MANAGEMENT_UNIT_CODE`, `ALT_HIER_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ALT_PROD_IDENTIFIER_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ALT_PROD_IDENTIFIER_TYPE` (
	`ALT_PROD_IDENTIFIER_TYPE_CODE` varchar(20) NOT NULL,
	`ALT_PROD_IDENTIFIER_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ALT_PROD_IDENTIFIER_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `ALT_PROD_IDENTIFIER_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ALTERNATIVE_PRODUCT_IDENTIFICATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ALTERNATIVE_PRODUCT_IDENTIFICATION` (
	`ALTERNATIVE_PRODUCT_IDENTIFICATION_NO` varchar(100) NOT NULL,
	`ALT_PROD_IDENTIFIER_TYPE_CODE` varchar(20) NOT NULL,
	`GLOBAL_PACK_CODE` varchar(50) NOT NULL,
	`UNIT_OF_MEASURE_CODE` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ALTERNATIVE_PRODUCT_IDENT_TO_ALT_PROD_IDENTIFIER_TYPE_FK` ( `ALT_PROD_IDENTIFIER_TYPE_CODE` ),
	KEY `ALTERNATIVE_PRODUCT_IDENTIFICATION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ALTERNATIVE_PRODUCT_IDENTIFICATION_TO_GLOBAL_PACK_FK` ( `GLOBAL_PACK_CODE` ),
	KEY `ALTERNATIVE_PRODUCT_IDENTIFICATION_TO_UNIT_OF_MEASURE_FK` ( `UNIT_OF_MEASURE_CODE` ),
	PRIMARY KEY  ( `ALTERNATIVE_PRODUCT_IDENTIFICATION_NO`, `ALT_PROD_IDENTIFIER_TYPE_CODE`, `GLOBAL_PACK_CODE`, `UNIT_OF_MEASURE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;



/* Header line. Object: APO_LOCATION__LOCAL_PACK_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`APO_LOCATION__LOCAL_PACK_AE` (
	`APO_LOCATION_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `APO_LOCATION__LOCAL_PACK_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `APO_LOCATION__LOCAL_PACK_AE_TO_LOCAL_PACK_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ),
	PRIMARY KEY  ( `APO_LOCATION_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: APO_LOCATION__ORGANISATION_UNIT_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`APO_LOCATION__ORGANISATION_UNIT_AE` (
	`APO_LOCATION_CODE` varchar(20) NOT NULL,
	`ORGANISATION_UNIT_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `APO_LOCATION__ORGANISATION_UNIT_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `APO_LOCATION__ORGANISATION_UNIT_AE_TO_ORGANISATION_UNIT_FK` ( `ORGANISATION_UNIT_CODE` ),
	PRIMARY KEY  ( `APO_LOCATION_CODE`, `ORGANISATION_UNIT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ASSET. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ASSET` (
	`ASSET_CODE` varchar(20) NOT NULL,
	`ASSET_SUBNUMBER` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ACQUISITION_POSTING_LOCKED_FLAG` varchar(1) NOT NULL,
	`DEACTIVATION_DATE` date NOT NULL default '9999-01-01',
	`IS_DELETED_FLG` varchar(1) NOT NULL,
	`ASSET_CATEGORY_CODE` varchar(20) NOT NULL,
	`PROJECT_ACTIVITY_CODE` varchar(50) default NULL,
	`VENDOR_CODE` varchar(20) default NULL,
	`COST_CENTRE_CODE` varchar(20) default NULL,
	`ASSET_CLASS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	`ETL_RECORD_COMPLETE_MAP` varchar(50) NOT NULL,
	KEY `ASSET_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ASSET_TO_ASSET_CATEGORY_FK` ( `ASSET_CATEGORY_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `ASSET_TO_ASSET_CLASS_FK` ( `ASSET_CLASS_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `ASSET_TO_COST_CENTRE_FK` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `ASSET_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` ),
	KEY `ASSET_TO_PROJECT_ACTIVITY_FK` ( `PROJECT_ACTIVITY_CODE` ),
	KEY `ASSET_TO_VENDOR_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` ),
	PRIMARY KEY  ( `ASSET_CODE`, `LEGAL_ENTITY_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `ASSET_SUBNUMBER` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ASSET_CATEGORY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ASSET_CATEGORY` (
	`ASSET_CATEGORY_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ASSET_CATEGORY_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ASSET_CATEGORY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ASSET_CATEGORY_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` ),
	PRIMARY KEY  ( `ASSET_CATEGORY_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ASSET_CLASS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ASSET_CLASS` (
	`ASSET_CLASS_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ASSET_CLASS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ASSET_CLASS_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` ),
	PRIMARY KEY  ( `ASSET_CLASS_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ASSET_CLASS_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ASSET_CLASS_LANGUAGE` (
	`ASSET_CLASS_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`ASSET_CLASS_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ASSET_CLASS_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ASSET_CLASS_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	PRIMARY KEY  ( `ASSET_CLASS_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ASSET_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ASSET_LANGUAGE` (
	`ASSET_CODE` varchar(20) NOT NULL,
	`ASSET_SUBNUMBER` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ASSET_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ASSET_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ASSET_LANGUAGE_TO_ASSET_FK` ( `ASSET_CODE`, `LEGAL_ENTITY_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `ASSET_SUBNUMBER` ),
	KEY `ASSET_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	PRIMARY KEY  ( `ASSET_CODE`, `ASSET_SUBNUMBER`, `LEGAL_ENTITY_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ATC. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ATC` (
	`ATC_CODE` varchar(20) NOT NULL,
	`PARENT_ATC_CODE` varchar(20) default NULL,
	`ATC_DESCRIPTION` varchar(100) NOT NULL,
	`ATC_LEVEL` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ATC_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ATC_TO_ATC_FK_PARENT` ( `PARENT_ATC_CODE` ),
	PRIMARY KEY  ( `ATC_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: AZ_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`AZ_GROUP` (
	`AZ_GROUP_CODE` varchar(20) NOT NULL,
	`AZ_GROUP_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `AZ_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `AZ_GROUP_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `AZ_GROUP_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `AZ_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`THERAPY_AREA_CODE` varchar(20) NOT NULL,
	`BRAND_NAME` varchar(100) default NULL,
	`FIRST_LAUNCH_DATE` date default NULL,
	`FIRST_APPROVAL_DATE` date default NULL,
	`SUBMISSION_DATE` date default NULL,
	`WITHDRAWAL_DATE` date default NULL,
	`FIRST_LOSS_OF_EXCLUSIVITY_DATE` date default NULL,
	`OTC_FLG` varchar(20) NOT NULL,
	`AUTHORISED_GENERIC_FLG` varchar(20) NOT NULL,
	`COMBINATION_PRODUCT_FLG` varchar(20) NOT NULL,
	`PRIMARY_CARE_FLG` varchar(20) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`GLOBAL_LIFECYCLE_STATUS_CODE` varchar(100) default NULL,
	`BRAND_SOURCE_CODE` varchar(20) default NULL,
	`ATC_CODE` varchar(20) default NULL,
	`DISEASE_AREA_CODE` varchar(20) default NULL,
	`NFC123_CODE` varchar(20) default NULL,
	`GLOBAL_MARKET_STATUS_CODE` varchar(100) NOT NULL,
	`SCORECARD_CATEGORY_CODE` varchar(100) NOT NULL,
	`ROUTE_OF_ADMINISTRATION_CODE` varchar(20) default NULL,
	`MOLECULE_TYPE_CODE` varchar(100) NOT NULL,
	`EXT_DISEASE_AREA_CODE` varchar(20) default NULL,
	`PRIMARY_INDICATION_CODE` varchar(20) default NULL,
	`PRIMARY_TRADEMARK_CODE` varchar(100) default NULL,
	`PRIMARY_ACTIVE_INGREDIENT_CODE` varchar(20) default NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`EXT_PRIMARY_INDICATION_CODE` varchar(20) default NULL,
	`SCORECARD_CATEGORY_PY_CODE` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`THERAPY_AREA_HIERARCHY_CODE` varchar(100) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`GPPS_HIERARCHY_CODE` varchar(100) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `BRAND_AK` ( `BRAND_NAME` ),
	KEY `BRAND_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND_TO_ACTIVE_INGREDIENT_FK_PRIMARY` ( `PRIMARY_ACTIVE_INGREDIENT_CODE` ),
	KEY `BRAND_TO_ATC_FK` ( `ATC_CODE` ),
	KEY `BRAND_TO_BRAND_SOURCE_FK` ( `BRAND_SOURCE_CODE` ),
	KEY `BRAND_TO_DISEASE_AREA_FK` ( `DISEASE_AREA_CODE` ),
	KEY `BRAND_TO_EXT_DISEASE_AREA_FK` ( `EXT_DISEASE_AREA_CODE` ),
	KEY `BRAND_TO_EXT_INDICATION_FK_EXTPRIMARYINDICATIONCODE` ( `EXT_PRIMARY_INDICATION_CODE` ),
	KEY `BRAND_TO_GLOBAL_LIFECYCLE_STATUS_FK` ( `GLOBAL_LIFECYCLE_STATUS_CODE` ),
	KEY `BRAND_TO_GLOBAL_MARKET_STATUS_FK` ( `GLOBAL_MARKET_STATUS_CODE` ),
	KEY `BRAND_TO_INDICATION_FK_PRIMARY` ( `PRIMARY_INDICATION_CODE` ),
	KEY `BRAND_TO_MOLECULE_TYPE_FK` ( `MOLECULE_TYPE_CODE` ),
	KEY `BRAND_TO_NFC_FK` ( `NFC123_CODE` ),
	KEY `BRAND_TO_ROUTE_OF_ADMINISTRATION_FK` ( `ROUTE_OF_ADMINISTRATION_CODE` ),
	KEY `BRAND_TO_SCORECARD_CATEGORY_FK` ( `SCORECARD_CATEGORY_CODE` ),
	KEY `BRAND_TO_STATUS_FK` ( `STATUS_CODE` ),
	KEY `BRAND_TO_THERAPY_AREA_FK` ( `THERAPY_AREA_CODE` ),
	KEY `BRAND_TO_TRADEMARK_FK_PRIMARY` ( `PRIMARY_TRADEMARK_CODE` ),
	PRIMARY KEY  ( `BRAND_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__ACTIVE_INGREDIENT_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__ACTIVE_INGREDIENT_AE` (
	`ACTIVE_INGREDIENT_CODE` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`PRIMARY_ACTIVE_INGREDIENT_FLG` tinyint(4) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__ACTIVE_INGREDIENT_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__ACTIVE_INGREDIENT_AE_TO_BRAND_FK` ( `BRAND_CODE` ),
	PRIMARY KEY  ( `ACTIVE_INGREDIENT_CODE`, `BRAND_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__BRAND_GROUP_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__BRAND_GROUP_AE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`BRAND_GROUP_CODE` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__BRAND_GROUP_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__BRAND_GROUP_AE_TO_BRAND_GROUP_FK` ( `BRAND_GROUP_CODE` ),
	PRIMARY KEY  ( `BRAND_CODE`, `BRAND_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__COMPOUND_NUMBER_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__COMPOUND_NUMBER_AE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`COMPOUND_NUMBER` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__COMPOUND_NUMBER_AE_TO_COMPOUND_NUMBER_FK` ( `COMPOUND_NUMBER` ),
	KEY `BRAND__COMPOUND_NUMBER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `BRAND_CODE`, `COMPOUND_NUMBER` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__EXT_INDICATION_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__EXT_INDICATION_AE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`EXT_INDICATION_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__EXT_INDICATION_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__EXT_INDICATION_AE_TO_EXT_INDICATION_FK` ( `EXT_INDICATION_CODE` ),
	PRIMARY KEY  ( `BRAND_CODE`, `EXT_INDICATION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__EXT_PRODUCT_INTL_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__EXT_PRODUCT_INTL_AE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`EXT_PRODUCT_INTL_ID` decimal(30,0) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__EXT_PRODUCT_INTL_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__EXT_PRODUCT_INTL_AE_TO_EXT_PRODUCT_INTL_FK` ( `EXT_PRODUCT_INTL_ID` ),
	PRIMARY KEY  ( `BRAND_CODE`, `EXT_PRODUCT_INTL_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__GENERIC_NAME_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__GENERIC_NAME_AE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`GENERIC_NAME_CODE` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__GENERIC_NAME_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__GENERIC_NAME_AE_TO_GENERIC_NAME_FK` ( `GENERIC_NAME_CODE` ),
	PRIMARY KEY  ( `BRAND_CODE`, `GENERIC_NAME_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__INDICATION_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__INDICATION_AE` (
	`INDICATION_CODE` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`PRIMARY_INDICATION_FLG` tinyint(4) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__INDICATION_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__INDICATION_AE_TO_BRAND_FK` ( `BRAND_CODE` ),
	PRIMARY KEY  ( `INDICATION_CODE`, `BRAND_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__LEGAL_ENTITY_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__LEGAL_ENTITY_AE` (
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__LEGAL_ENTITY_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__LEGAL_ENTITY_AE_TO_BRAND_FK` ( `BRAND_CODE` ),
	PRIMARY KEY  ( `LEGAL_ENTITY_CODE`, `BRAND_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__PRODUCT_FORMULATION_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__PRODUCT_FORMULATION_AE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`PRODUCT_FORMULATION_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__PRODUCT_FORMULATION_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__PRODUCT_FORMULATION_AE_TO_PRODUCT_FORMULATION_FK` ( `PRODUCT_FORMULATION_CODE` ),
	PRIMARY KEY  ( `BRAND_CODE`, `PRODUCT_FORMULATION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND__TRADEMARK_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND__TRADEMARK_AE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`TRADEMARK_CODE` varchar(100) NOT NULL,
	`PRIMARY_TRADEMARK_FLG` tinyint(4) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND__TRADEMARK_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND__TRADEMARK_AE_TO_TRADEMARK_FK` ( `TRADEMARK_CODE` ),
	PRIMARY KEY  ( `BRAND_CODE`, `TRADEMARK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND_COMMERCIAL_PARTNER_REL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND_COMMERCIAL_PARTNER_REL` (
	`COMMERCIAL_PARTNER_CODE` varchar(20) NOT NULL,
	`COMMERCIAL_PARTNER_REL_CODE` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND_COMMERCIAL_PARTNER_REL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `BRAND_COMMERCIAL_PARTNER_REL_TO_BRAND_FK` ( `BRAND_CODE` ),
	KEY `BRAND_COMMERCIAL_PARTNER_REL_TO_COMMERCIAL_PARTNER_REL_FK` ( `COMMERCIAL_PARTNER_REL_CODE` ),
	PRIMARY KEY  ( `COMMERCIAL_PARTNER_CODE`, `COMMERCIAL_PARTNER_REL_CODE`, `BRAND_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND_GROUP` (
	`BRAND_GROUP_CODE` varchar(100) NOT NULL,
	`BRAND_GROUP_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `BRAND_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: BRAND_SOURCE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`BRAND_SOURCE` (
	`BRAND_SOURCE_CODE` varchar(20) NOT NULL,
	`BRAND_SOURCE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `BRAND_SOURCE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `BRAND_SOURCE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COMMERCIAL_PARTNER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COMMERCIAL_PARTNER` (
	`COMMERCIAL_PARTNER_CODE` varchar(20) NOT NULL,
	`COMMERCIAL_PARTNER_DESCRIPTION` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COMMERCIAL_PARTNER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COMMERCIAL_PARTNER_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `COMMERCIAL_PARTNER_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COMMERCIAL_PARTNER_REL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COMMERCIAL_PARTNER_REL` (
	`COMMERCIAL_PARTNER_REL_CODE` varchar(20) NOT NULL,
	`COMMERCIAL_PARTNER_REL_DESCRIPTION` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COMMERCIAL_PARTNER_REL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COMMERCIAL_PARTNER_REL_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `COMMERCIAL_PARTNER_REL_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COMPENSATION_GRADE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COMPENSATION_GRADE` (
	`COMPENSATION_GRADE_CODE` varchar(20) NOT NULL,
	`COMPENSATION_GRADE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COMPENSATION_GRADE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `COMPENSATION_GRADE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COMPOUND_NUMBER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COMPOUND_NUMBER` (
	`COMPOUND_NUMBER` varchar(20) NOT NULL,
	`COMPOUND_NUMBER_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COMPOUND_NUMBER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `COMPOUND_NUMBER` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: CONSOLIDATED_COSTS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`CONSOLIDATED_COSTS` (
	`YEAR_MONTH_ID` int(11) NOT NULL,
	`SELLING_ORG_UNIT_CODE` varchar(20) NOT NULL,
	`MAIN_LOCAL_CODE` varchar(20) NOT NULL,
	`BUYING_GEO_AREA_CODE` varchar(20) NOT NULL,
	`PRODUCT_ITEM_CODE` varchar(50) default NULL,
	`PERIOD_VOLUME` int(11) default NULL,
	`YTD_VOLUME` int(11) default NULL,
	`ACTUAL_PERIOD_SCC_USD_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_PERIOD_SCC_RC_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_SCC_USD_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_SCC_RC_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_PERIOD_SCC_USD_BUDROX` decimal(30,15) default NULL,
	`ACTUAL_PERIOD_SCC_RC_BUDROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_SCC_USD_BUDROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_SCC_RC_BUDROX` decimal(30,15) default NULL,
	`BUDGET_PERIOD_SCC_USD_ACTROX` decimal(30,15) default NULL,
	`BUDGET_PERIOD_SCC_RC_ACTROX` decimal(30,15) default NULL,
	`BUDGET_YTD_SCC_USD_ACTROX` decimal(30,15) default NULL,
	`BUDGET_YTD_SCC_RC_ACTROX` decimal(30,15) default NULL,
	`COUNTRY_CODE` varchar(20) default NULL,
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`SELLING_CURRENCY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `CONSOLIDATED_COSTS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `CONSOLIDATED_COSTS_TO_COUNTRY_FK` ( `COUNTRY_CODE` ),
	KEY `CONSOLIDATED_COSTS_TO_CURRENCY_FK_SELLING` ( `SELLING_CURRENCY_CODE` ),
	KEY `CONSOLIDATED_COSTS_TO_MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING_FK` ( `SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE`, `MAIN_LOCAL_CODE` ),
	KEY `CONSOLIDATED_COSTS_TO_POSTING_ACCOUNT_FK` ( `POSTING_ACCOUNT_CODE` ),
	PRIMARY KEY  ( `YEAR_MONTH_ID`, `SELLING_ORG_UNIT_CODE`, `MAIN_LOCAL_CODE`, `BUYING_GEO_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: CONSOLIDATED_ROYALTIES. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`CONSOLIDATED_ROYALTIES` (
	`CONSOLIDATED_ROYALTIES_ID` int(11) NOT NULL auto_increment,
	`YEAR_MONTH_ID` int(11) NOT NULL,
	`SELLING_ORG_UNIT_CODE` varchar(20) default NULL,
	`BUYING_GEO_AREA_CODE` varchar(20) NOT NULL,
	`MAIN_LOCAL_CODE` varchar(20) default NULL,
	`LICENSEE_ORG_UNIT_CODE` varchar(20) NOT NULL,
	`PRODUCT_ITEM_CODE` varchar(20) NOT NULL,
	`ACTUAL_PERIOD_ROYALTY_USD_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_PERIOD_ROYALTY_RC_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_ROYALTY_USD_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_ROYALTY_RC_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_PERIOD_ROYALTY_USD_BUDROX` decimal(30,15) default NULL,
	`ACTUAL_PERIOD_ROYALTY_RRC_BUDROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_ROYALTY_USD_BUDROX` decimal(30,15) default NULL,
	`ACTUAL_YTD_ROYALTY_RC_BUDROX` decimal(30,15) default NULL,
	`BUDGET_PERIOD_ROYALTY_USD_ACTROX` decimal(30,15) default NULL,
	`BUDGET_PERIOD_ROYALTY_RC_ACTROX` decimal(30,15) default NULL,
	`BUDGET_YTD_ROYALTY_USD_ACTROX` decimal(30,15) default NULL,
	`BUDGET_YTD_ROYALTY_RC_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_LICENSEE_COST_YTD_RC_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_CCR_ROYALTY_RC_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_CCR_ROYALTY_RC_BUDROX` decimal(30,15) default NULL,
	`ACTUAL_CCR_ROYALTY_USD_ACTROX` decimal(30,15) default NULL,
	`ACTUAL_CCR_ROYALTY_USD_BUDROX` decimal(30,15) default NULL,
	`CCR_SELLING_CURRENCY_CODE` varchar(20) default NULL,
	`CCR_SELLING_ORG_UNIT_CODE` varchar(20) default NULL,
	`COUNTRY_CODE` varchar(20) default NULL,
	`LICENSEE_CURRENCY_CODE` varchar(20) NOT NULL,
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`SELLING_CURRENCY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `CONSOLIDATED_ROYALTIES_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_COUNTRY_FK` ( `COUNTRY_CODE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_CURRENCY_FK_CCRSELLING` ( `CCR_SELLING_CURRENCY_CODE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_CURRENCY_FK_LICENSEE` ( `LICENSEE_CURRENCY_CODE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_CURRENCY_FK_SELLING` ( `SELLING_CURRENCY_CODE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_MAIN_LOCAL_CODE_LOCAL_PACK_MAP_FK_BUY` ( `SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE`, `MAIN_LOCAL_CODE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_ORG_UNIT_MANAGEMENT_UNIT_MAP_FK_CCR` ( `CCR_SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_ORG_UNIT_MANAGEMENT_UNIT_MAP_FK_LICENS` ( `LICENSEE_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE` ),
	KEY `CONSOLIDATED_ROYALTIES_TO_POSTING_ACCOUNT_FK` ( `POSTING_ACCOUNT_CODE` ),
	PRIMARY KEY  ( `CONSOLIDATED_ROYALTIES_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: CONTINENT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`CONTINENT` (
	`CONTINENT_CODE` varchar(20) NOT NULL,
	`CONTINENT_DESCRIPTION` varchar(100) NOT NULL,
	`CURRENCY_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `CONTINENT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `CONTINENT_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	PRIMARY KEY  ( `CONTINENT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE` (
	`COST_CENTRE_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`PERSON_RESPONSIBLE` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`DEPARTMENT_CODE` varchar(20) default NULL,
	`FUNCTION_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_CENTRE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_CENTRE_TO_DEPARTMENT_FK` ( `DEPARTMENT_CODE` ),
	KEY `COST_CENTRE_TO_FUNCTION_FK` ( `FUNCTION_CODE` ),
	KEY `COST_CENTRE_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` ),
	KEY `COST_CENTRE_TO_PROFIT_CENTRE_FK` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	PRIMARY KEY  ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE__COST_CENTRE_GROUP_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE__COST_CENTRE_GROUP_AE` (
	`COST_CENTRE_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_GROUP_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_CENTRE__COST_CENTRE_GROUP_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_CENTRE__COST_CENTRE_GROUP_AE_TO_COST_CENTRE_GROUP_FK` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` ),
	PRIMARY KEY  ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE`, `COST_CENTRE_GROUP_CODE`, `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE_GROUP` (
	`COST_CENTRE_GROUP_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_GROUP_LEVEL` int(11) NOT NULL,
	`COST_CENTRE_GROUP_SEQUENCE` int(11) NOT NULL,
	`PARENT_COST_CENTRE_GROUP_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_RECORD_COMPLETE_MAP` varchar(50) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_CENTRE_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_CENTRE_GROUP_TO_COST_CENTRE_GROUP_FK_PARENT` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `PARENT_COST_CENTRE_GROUP_CODE` ),
	PRIMARY KEY  ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE_GROUP_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE_GROUP_LANGUAGE` (
	`COST_CENTRE_GROUP_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_GROUP_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_CENTRE_GROUP_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_CENTRE_GROUP_LANGUAGE_TO_COST_CENTRE_GROUP_FK` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` ),
	KEY `COST_CENTRE_GROUP_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	PRIMARY KEY  ( `COST_CENTRE_GROUP_CODE`, `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `LANGUAGE_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE_HIERARCHY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE_HIERARCHY` (
	`COST_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`IS_STANDARD_HIERARCHY_FLG` tinyint(4) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_CENTRE_HIERARCHY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE_HIERARCHY_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE_HIERARCHY_LANGUAGE` (
	`COST_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_HIERARCHY_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_CENTRE_HIERARCHY_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_CENTRE_HIERARCHY_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	PRIMARY KEY  ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `LANGUAGE_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE_LANGUAGE` (
	`COST_CENTRE_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_CENTRE_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_CENTRE_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	PRIMARY KEY  ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE`, `LANGUAGE_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_CENTRE_TEST. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_CENTRE_TEST` (
	`COST_CENTRE_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`PERSON_RESPONSIBLE` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`DEPARTMENT_CODE` varchar(20) default NULL,
	`FUNCTION_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COST_OF_GOODS_SOLD. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COST_OF_GOODS_SOLD` (
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`SAP_RECORD_NUMBER` varchar(18) NOT NULL,
	`SAP_TX_VERSION_NUMBER` varchar(3) NOT NULL,
	`SAP_TX_RECORD_TYPE` varchar(1) NOT NULL,
	`SAP_TX_FI_DOCUMENT_TYPE` varchar(2) NOT NULL,
	`SAP_TX_FI_DOCUMENT_NUMBER` varchar(50) NOT NULL,
	`SAP_TX_SPL_DOCUMENT_NUMBER` varchar(50) NOT NULL,
	`SAP_TX_FI_DOCUMENT_LINE_ITEM` varchar(6) NOT NULL,
	`SAP_TX_SPL_DOCUMENT_LINE_ITEM` varchar(6) NOT NULL,
	`SAP_TX_DATETIME` varchar(20) NOT NULL,
	`TRANSACTION_AMOUNT` decimal(30,15) NOT NULL,
	`LOCAL_CURRENCY_AMOUNT` decimal(30,15) NOT NULL,
	`COGS_QUANTITY` decimal(30,15) default NULL,
	`COGS_ADDITIONAL_QUANTITY` decimal(30,15) default NULL,
	`PERIOD_CODE` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) default NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`FINANCIAL_SCENARIO_CODE` varchar(20) NOT NULL,
	`COST_CENTRE_CODE` varchar(20) default NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`YEAR_DAY_ID` int(11) NOT NULL,
	`INTERNAL_ORDER_CODE` varchar(20) default NULL,
	`LOCAL_PACK_CODE` varchar(20) default NULL,
	`ACTIVITY_TYPE_CODE` varchar(20) default NULL,
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`FUNCTION_CODE` varchar(20) default NULL,
	`UNIT_OF_MEASURE_CODE` varchar(100) default NULL,
	`ALTERNATIVE_UNIT_OF_MEASURE_CODE` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COST_OF_GOODS_SOLD_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_OF_GOODS_SOLD_IE2` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COST_OF_GOODS_SOLD_TO_ACTIVITY_TYPE_FK` ( `ACTIVITY_TYPE_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_BRAND_FK` ( `BRAND_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_COST_CENTRE_FK` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_FINANCIAL_SCENARIO_FK` ( `FINANCIAL_SCENARIO_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_FUNCTION_FK` ( `FUNCTION_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_INTERNAL_ORDER_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_LOCAL_PACK_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_POSTING_ACCOUNT_FK` ( `POSTING_ACCOUNT_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_PROFIT_CENTRE_FK` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_UNIT_OF_MEASURE_FK` ( `UNIT_OF_MEASURE_CODE` ),
	KEY `COST_OF_GOODS_SOLD_TO_UNIT_OF_MEASURE_FK_ALTERNATIVE` ( `ALTERNATIVE_UNIT_OF_MEASURE_CODE` ),
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE`, `SAP_RECORD_NUMBER` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COUNTRY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COUNTRY` (
	`COUNTRY_CODE` varchar(20) NOT NULL,
	`REGION_CODE` varchar(20) NOT NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`COUNTRY_DESCRIPTION` varchar(100) default NULL,
	`VALID_FROM_DATE` date default NULL,
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `COUNTRY_AK` ( `COUNTRY_DESCRIPTION`, `VALID_FROM_DATE` ),
	KEY `COUNTRY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COUNTRY_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `COUNTRY_TO_REGION_FK` ( `REGION_CODE` ),
	KEY `COUNTRY_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `COUNTRY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'Externally recognised independent nation (ISO 3166)



Examples ...

United Kingdom
Sweden
Spain'
;

/* Header line. Object: COUNTRY__EXT_COUNTRY_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COUNTRY__EXT_COUNTRY_AE` (
	`COUNTRY_CODE` varchar(20) NOT NULL,
	`EXT_COUNTRY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COUNTRY__EXT_COUNTRY_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COUNTRY__EXT_COUNTRY_AE_TO_EXT_COUNTRY_FK` ( `EXT_COUNTRY_CODE` ),
	PRIMARY KEY  ( `COUNTRY_CODE`, `EXT_COUNTRY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: COUNTRY_SUB_DIVISION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`COUNTRY_SUB_DIVISION` (
	`COUNTRY_SUB_DIVISION_CODE` varchar(20) NOT NULL,
	`COUNTRY_SUB_DIVISION_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`COUNTRY_CODE` varchar(20) NOT NULL,
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `COUNTRY_SUB_DIVISION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `COUNTRY_SUB_DIVISION_TO_COUNTRY_FK` ( `COUNTRY_CODE` ),
	KEY `COUNTRY_SUB_DIVISION_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `COUNTRY_SUB_DIVISION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: CURRENCY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`CURRENCY` (
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`CURRENCY_DESCRIPTION` varchar(100) NOT NULL,
	`SCALE_FACTOR` decimal(9,0) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `CURRENCY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `CURRENCY_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `CURRENCY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: DEPARTMENT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`DEPARTMENT` (
	`DEPARTMENT_CODE` varchar(20) NOT NULL,
	`DEPARTMENT_GROUP_CODE` varchar(20) NOT NULL,
	`DEPARTMENT_DESCRIPTION` varchar(100) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `DEPARTMENT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `DEPARTMENT_TO_DEPARTMENT_GROUP_FK` ( `DEPARTMENT_GROUP_CODE` ),
	KEY `DEPARTMENT_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `DEPARTMENT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: DEPARTMENT_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`DEPARTMENT_GROUP` (
	`DEPARTMENT_GROUP_CODE` varchar(20) NOT NULL,
	`DEPARTMENT_GROUP_DESCRIPTION` varchar(100) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `DEPARTMENT_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `DEPARTMENT_GROUP_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `DEPARTMENT_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: DISEASE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`DISEASE` (
	`DISEASE_CODE` varchar(20) NOT NULL,
	`DISEASE_AREA_CODE` varchar(20) NOT NULL,
	`DISEASE_NAME` varchar(100) default NULL,
	`DISEASE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `DISEASE_AK` ( `DISEASE_NAME` ),
	KEY `DISEASE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `DISEASE_TO_DISEASE_AREA_FK` ( `DISEASE_AREA_CODE` ),
	PRIMARY KEY  ( `DISEASE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: DISEASE_AREA. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`DISEASE_AREA` (
	`DISEASE_AREA_CODE` varchar(20) NOT NULL,
	`DISEASE_AREA_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `DISEASE_AREA_AK` ( `DISEASE_AREA_DESCRIPTION` ),
	KEY `DISEASE_AREA_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `DISEASE_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: DISTRIBUTION_CHANNEL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`DISTRIBUTION_CHANNEL` (
	`DISTRIBUTION_CHANNEL_CODE` varchar(20) NOT NULL,
	`DISTRIBUTION_CHANNEL_DESCRIPTION` varchar(100) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `DISTRIBUTION_CHANNEL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `DISTRIBUTION_CHANNEL_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` ),
	PRIMARY KEY  ( `DISTRIBUTION_CHANNEL_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: DIVISION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`DIVISION` (
	`DIVISION_CODE` varchar(20) NOT NULL,
	`DIVISION_DESCRIPTION` varchar(100) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `DIVISION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `DIVISION_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` ),
	PRIMARY KEY  ( `DIVISION_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EMPLOYEE_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EMPLOYEE_TYPE` (
	`EMPLOYEE_TYPE_CODE` varchar(100) NOT NULL,
	`EMPLOYEE_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EMPLOYEE_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EMPLOYEE_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXCHANGE_RATE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXCHANGE_RATE` (
	`BASE_CURRENCY_CODE` varchar(20) NOT NULL,
	`TARGET_CURRENCY_CODE` varchar(20) NOT NULL,
	`EXCHANGE_RATE_TYPE_CODE` varchar(20) NOT NULL,
	`YEAR_NUMBER` int(11) NOT NULL,
	`YEAR_MONTH_ID` int(11) NOT NULL,
	`RATE` decimal(9,0) NOT NULL,
	`INVERTED_RATE` decimal(9,0) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXCHANGE_RATE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXCHANGE_RATE_TO_CURRENCY_FK_TARGET` ( `TARGET_CURRENCY_CODE` ),
	KEY `EXCHANGE_RATE_TO_EXCHANGE_RATE_TYPE_FK` ( `EXCHANGE_RATE_TYPE_CODE` ),
	KEY `EXCHANGE_RATE_TO_YEAR_MNTH_FK` ( `YEAR_MONTH_ID` ),
	PRIMARY KEY  ( `BASE_CURRENCY_CODE`, `TARGET_CURRENCY_CODE`, `EXCHANGE_RATE_TYPE_CODE`, `YEAR_NUMBER`, `YEAR_MONTH_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXCHANGE_RATE_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXCHANGE_RATE_TYPE` (
	`EXCHANGE_RATE_TYPE_CODE` varchar(20) NOT NULL,
	`EXCHANGE_RATE_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXCHANGE_RATE_TYPE_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `EXCHANGE_RATE_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_ATC. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_ATC` (
	`EXT_ATC_CODE` varchar(20) NOT NULL,
	`EXT_ATC_DESCRIPTION` varchar(100) default NULL,
	`ATC_LEVEL` int(11) default NULL,
	`ATC_PARENT_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_ATC_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_ATC_TO_EXT_ATC_FK_ATCPARENTCODE` ( `ATC_PARENT_CODE` ),
	PRIMARY KEY  ( `EXT_ATC_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'The conformed table holding all levels of the Anatomical Therapeutic Class (ATC) Classification System

ATC CODE	Level	ATC PARENT CODE
C03CA01 	Level 5 	C03CA
C03CA 		Level 4 	C03C
C03C 		Level 3 	C03
C03 		Level 2 	C
C 		Level 1 	NULL'
;

/* Header line. Object: EXT_BRAND_LOOKUP_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_BRAND_LOOKUP_FILE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`BRAND_DESCRIPTION` varchar(200) NOT NULL,
	`BRAND_SHORTNAME` varchar(100) default NULL,
	`EXT_BRAND_LOOKUP_FILE_COLOUR` varchar(100) NOT NULL,
	`BRAND_LINK` varchar(500) NOT NULL,
	`EXT_BRAND_LOOKUP_FILE_TITLE` varchar(500) default NULL,
	`EXT_BRAND_LOOKUP_FILE_NOTES` varchar(500) default NULL,
	`BRAND_LOOKUP` varchar(100) NOT NULL,
	`IS_LAND_PAGE_FLG` tinyint(4) NOT NULL,
	`BRAND_MENU_SEQUENCE` int(11) default NULL,
	`BRAND_TABLE_SEQUENCE` int(11) default NULL,
	`REQ_FOR_EXEC` tinyint(4) NOT NULL,
	`GMD_DESCRIPTION` varchar(200) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_BRAND_LOOKUP_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_BRAND_MAP_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_BRAND_MAP_FILE` (
	`SOURCE_BRAND_NAME` varchar(100) NOT NULL,
	`TARGET_BRAND_NAME` varchar(100) NOT NULL,
	`TARGET_MARKET_NAME` varchar(100) NOT NULL,
	`EXT_BRAND_MAP_FILE_TYPE` varchar(20) NOT NULL,
	`SOURCE_NAME` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_BRAND_MAP_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_CLASS_TREE_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_CLASS_TREE_TYPE` (
	`EXT_CLASS_TREE_TYPE_CODE` varchar(20) NOT NULL,
	`EXT_CLASS_TREE_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_CLASS_TREE_TYPE_AK` ( `EXT_CLASS_TREE_TYPE_DESCRIPTION` ),
	KEY `EXT_CLASS_TREE_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_CLASS_TREE_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_COMPETITOR_FAMILY_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_COMPETITOR_FAMILY_FILE` (
	`COMPETITOR_FAMILY_NAME` varchar(100) NOT NULL,
	`MOLECULE_LIST_DESCRIPTION` varchar(100) NOT NULL,
	`INTPRD_DESCRIPTION` varchar(100) NOT NULL,
	`MARKET_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_COMPETITOR_FAMILY_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_CORPORATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_CORPORATION` (
	`EXT_CORPORATION_ID` decimal(30,0) NOT NULL,
	`EXT_CORPORATION_NAME` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_CORPORATION_AK` ( `EXT_CORPORATION_NAME` ),
	KEY `EXT_CORPORATION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_CORPORATION_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'A list of all corporations'
;

/* Header line. Object: EXT_CORPORATION_MANUFACTURER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_CORPORATION_MANUFACTURER` (
	`EXT_CORPORATION_MANUFACTURER_ID` int(11) NOT NULL auto_increment,
	`EXT_CORPORATION_ID` decimal(30,0) NOT NULL,
	`EXT_MANUFACTURER_ID` decimal(30,0) NOT NULL,
	`EXT_PANEL_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_CORPORATION_MANUFACTURER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_CORPORATION_MANUFACTURER_TO_EXT_CORPORATION_FK` ( `EXT_CORPORATION_ID` ),
	KEY `EXT_CORPORATION_MANUFACTURER_TO_EXT_MANUFACTURER_FK` ( `EXT_MANUFACTURER_ID` ),
	KEY `EXT_CORPORATION_MANUFACTURER_TO_EXT_PANEL_FK` ( `EXT_PANEL_CODE` ),
	PRIMARY KEY  ( `EXT_CORPORATION_MANUFACTURER_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_COUNTRY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_COUNTRY` (
	`EXT_COUNTRY_CODE` varchar(20) NOT NULL,
	`EXT_COUNTRY_NAME` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_COUNTRY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_COUNTRY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_COUNTRY_REPORT_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_COUNTRY_REPORT_FILE` (
	`COUNTRY_ISO_CODE` varchar(20) NOT NULL,
	`COUNTRY_DESCRIPTION` varchar(100) NOT NULL,
	`COUNTRY_SHORTNAME` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_COUNTRY_REPORT_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_CURRENCY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_CURRENCY` (
	`EXT_CURRENCY_ID` decimal(30,0) NOT NULL,
	`EXT_CURRENCY_CODE` varchar(20) NOT NULL,
	`EXT_CURRENCY_NAME` varchar(100) NOT NULL,
	`IS_CURRENCY_GROUP_FLG` tinyint(4) NOT NULL,
	`GROUP_EXT_CURRENCY_ID` decimal(30,0) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_CURRENCY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_CURRENCY_TO_EXT_CURRENCY_FK_GROUP` ( `GROUP_EXT_CURRENCY_ID` ),
	PRIMARY KEY  ( `EXT_CURRENCY_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_DISEASE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_DISEASE` (
	`EXT_DISEASE_CODE` varchar(20) NOT NULL,
	`EXT_DISEASE_NAME` varchar(210) default NULL,
	`EXT_DISEASE_AREA_CODE` varchar(20) NOT NULL,
	`END_DISEASE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_DISEASE_AK` ( `EXT_DISEASE_NAME` ),
	KEY `EXT_DISEASE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_DISEASE_TO_EXT_DISEASE_AREA_FK` ( `EXT_DISEASE_AREA_CODE` ),
	PRIMARY KEY  ( `EXT_DISEASE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Dynamic
;

/* Header line. Object: EXT_DISEASE_AREA. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_DISEASE_AREA` (
	`EXT_DISEASE_AREA_CODE` varchar(20) NOT NULL,
	`EXT_DISEASE_AREA_DESCRIPTION` varchar(110) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_DISEASE_AREA_AK` ( `EXT_DISEASE_AREA_DESCRIPTION` ),
	KEY `EXT_DISEASE_AREA_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_DISEASE_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_EXCHANGE_RATE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_EXCHANGE_RATE` (
	`EXT_PERIOD_TYPE_CODE` varchar(20) NOT NULL,
	`PERIOD_START_DATE` date NOT NULL default '9999-01-01',
	`EXT_CURRENCY_ID` decimal(30,0) NOT NULL,
	`PUBLISHED_DATE` date NOT NULL default '9999-01-01',
	`EXCHANGE_RATE_TYPE_CODE` varchar(20) NOT NULL,
	`EXT_EXCHANGE_RATE` decimal(30,15) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_EXCHANGE_RATE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_EXCHANGE_RATE_TO_EXCHANGE_RATE_TYPE_FK` ( `EXCHANGE_RATE_TYPE_CODE` ),
	KEY `EXT_EXCHANGE_RATE_TO_EXT_CURRENCY_FK` ( `EXT_CURRENCY_ID` ),
	PRIMARY KEY  ( `EXT_PERIOD_TYPE_CODE`, `PERIOD_START_DATE`, `EXT_CURRENCY_ID`, `PUBLISHED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'External exchange rates provided by third party data providers for use with their data.

Source for this data is IMS

This will be populated from IMS and will contain IMS Quarterly and IMS Monthly Rate of exchange for different panels.'
;

/* Header line. Object: EXT_FORM_DELIVERY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_FORM_DELIVERY` (
	`EXT_FORM_DELIVERY_ID` int(11) NOT NULL auto_increment,
	`EXT_FORM_DELIVERY_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_FORM_DELIVERY_AK` ( `EXT_FORM_DELIVERY_DESCRIPTION` ),
	KEY `EXT_FORM_DELIVERY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_FORM_DELIVERY_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
COMMENT = 'The form delivery of the product ie Capsule, Solution etc'
;

/* Header line. Object: EXT_GENERIC_NON_GENERIC. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_GENERIC_NON_GENERIC` (
	`EXT_GENERIC_NON_GENERIC_ID` int(11) NOT NULL auto_increment,
	`EXT_GENERIC_NON_GENERIC_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_GENERIC_NON_GENERIC_AK` ( `EXT_GENERIC_NON_GENERIC_DESCRIPTION` ),
	KEY `EXT_GENERIC_NON_GENERIC_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_GENERIC_NON_GENERIC_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_GENERIC_PRODUCT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_GENERIC_PRODUCT` (
	`EXT_GENERIC_PRODUCT_ID` int(11) NOT NULL auto_increment,
	`EXT_GENERIC_PRODUCT_DESCRIPTION` varchar(350) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_GENERIC_PRODUCT_AK` ( `EXT_GENERIC_PRODUCT_DESCRIPTION` ),
	KEY `EXT_GENERIC_PRODUCT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_GENERIC_PRODUCT_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Dynamic
COMMENT = 'Holds the definitions for brand segmentation, e.g. Generic_Products'
;

/* Header line. Object: EXT_GENERIC_PRODUCT_CLASS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_GENERIC_PRODUCT_CLASS` (
	`EXT_GENERIC_PRODUCT_CLASS_ID` int(11) NOT NULL auto_increment,
	`EXT_GENERIC_PRODUCT_CLASS_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_GENERIC_PRODUCT_CLASS_AK` ( `EXT_GENERIC_PRODUCT_CLASS_DESCRIPTION` ),
	KEY `EXT_GENERIC_PRODUCT_CLASS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_GENERIC_PRODUCT_CLASS_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_GLOBAL_MARKET_DEFINITION_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_GLOBAL_MARKET_DEFINITION_GROUP` (
	`EXT_GLOBAL_MARKET_DEFINITION_GROUP_ID` decimal(30,0) NOT NULL,
	`EXT_GLOBAL_MARKET_DEFINITION_GROUP_NAME` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_GLOBAL_MARKET_DEFINITION_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_GLOBAL_MARKET_DEFINITION_GROUP_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'Holds the distinct list of market definitions received from third party providers.'
;

/* Header line. Object: EXT_GLOBAL_MARKET_MAPPING. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_GLOBAL_MARKET_MAPPING` (
	`EXT_GLOBAL_MARKET_DEFINITION_GROUP_ID` decimal(30,0) NOT NULL,
	`EXT_PANEL_PRODUCT_PACK_ID` decimal(30,0) NOT NULL,
	`EXT_PERIOD_TYPE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_GLOBAL_MARKET_MAPPING_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_GLOBAL_MARKET_MAPPING_TO_EXT_PANEL_PRODUCT_PACK_FK` ( `EXT_PANEL_PRODUCT_PACK_ID` ),
	KEY `EXT_GLOBAL_MARKET_MAPPING_TO_EXT_PERIOD_TYPE_FK` ( `EXT_PERIOD_TYPE_CODE` ),
	PRIMARY KEY  ( `EXT_GLOBAL_MARKET_DEFINITION_GROUP_ID`, `EXT_PANEL_PRODUCT_PACK_ID`, `EXT_PERIOD_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_INDICATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_INDICATION` (
	`EXT_INDICATION_CODE` varchar(20) NOT NULL,
	`PARENT_EXT_INDICATION_CODE` varchar(20) default NULL,
	`EXT_INDICATION_NAME` varchar(255) default NULL,
	`EXT_INDICATION_LEVEL` int(11) NOT NULL,
	`EXT_DISEASE_CODE` varchar(20) NOT NULL,
	`EXT_CLASS_TREE_TYPE_CODE` varchar(20) default NULL,
	`EXT_TERMINAL_NODE_TYPE_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_INDICATION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_INDICATION_TO_EXT_CLASS_TREE_TYPE_FK` ( `EXT_CLASS_TREE_TYPE_CODE` ),
	KEY `EXT_INDICATION_TO_EXT_DISEASE_FK` ( `EXT_DISEASE_CODE` ),
	KEY `EXT_INDICATION_TO_EXT_INDICATION_FK_PARENT` ( `PARENT_EXT_INDICATION_CODE` ),
	KEY `EXT_INDICATION_TO_EXT_TERMINAL_NODE_TYPE_FK` ( `EXT_TERMINAL_NODE_TYPE_CODE` ),
	PRIMARY KEY  ( `EXT_INDICATION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Dynamic
;

/* Header line. Object: EXT_INTL_PRESCRIPTION_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_INTL_PRESCRIPTION_STATUS` (
	`EXT_INTL_PRESCRIPTION_STATUS_ID` int(11) NOT NULL auto_increment,
	`EXT_INTL_PRESCRIPTION_STATUS_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_INTL_PRESCRIPTION_STATUS_AK` ( `EXT_INTL_PRESCRIPTION_STATUS_DESCRIPTION` ),
	KEY `EXT_INTL_PRESCRIPTION_STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_INTL_PRESCRIPTION_STATUS_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_INTL_REIMBURSEMENT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_INTL_REIMBURSEMENT` (
	`EXT_INTL_REIMBURSEMENT_ID` int(11) NOT NULL auto_increment,
	`EXT_INTL_REIMBURSEMENT_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_INTL_REIMBURSEMENT_AK` ( `EXT_INTL_REIMBURSEMENT_DESCRIPTION` ),
	KEY `EXT_INTL_REIMBURSEMENT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_INTL_REIMBURSEMENT_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_LAUNCH_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_LAUNCH_STATUS` (
	`EXT_LAUNCH_STATUS_ID` int(11) NOT NULL auto_increment,
	`EXT_LAUNCH_STATUS_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_LAUNCH_STATUS_AK` ( `EXT_LAUNCH_STATUS_DESCRIPTION` ),
	KEY `EXT_LAUNCH_STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_LAUNCH_STATUS_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
COMMENT = 'Holds the definitions of the launch status of a brand, e.g. SUBSEQUENT LAUNCH'
;

/* Header line. Object: EXT_LAUNCH_TRACKING_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_LAUNCH_TRACKING_FILE` (
	`LAUNCH_DATE` date default NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`EXT_LAUNCH_TRACKING_FILE_TYPE` varchar(20) NOT NULL,
	`COUNTRY_ISO_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_LAUNCH_TRACKING_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_LOCAL_REIMBURSEMENT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_LOCAL_REIMBURSEMENT` (
	`EXT_LOCAL_REIMBURSEMENT_ID` int(11) NOT NULL auto_increment,
	`EXT_LOCAL_REIMBURSEMENT_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_LOCAL_REIMBURSEMENT_AK` ( `EXT_LOCAL_REIMBURSEMENT_DESCRIPTION` ),
	KEY `EXT_LOCAL_REIMBURSEMENT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_LOCAL_REIMBURSEMENT_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_MANUFACTURER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MANUFACTURER` (
	`EXT_MANUFACTURER_ID` decimal(30,0) NOT NULL,
	`EXT_MANUFACTURER_NAME` varchar(100) default NULL,
	`OWNERSHIP` decimal(30,15) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_MANUFACTURER_AK` ( `EXT_MANUFACTURER_NAME` ),
	KEY `EXT_MANUFACTURER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_MANUFACTURER_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'A list of all manufacturers'
;

/* Header line. Object: EXT_MARKET_BRAND_MOL_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MARKET_BRAND_MOL_FILE` (
	`MOLECULE_DESCRIPTION` varchar(100) NOT NULL,
	`MARKET_DESCRIPTION` varchar(100) NOT NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`EXT_MARKET_BRAND_MOL_FILE_TYPE` varchar(200) NOT NULL,
	`AZ_BRAND_FLG` tinyint(4) NOT NULL,
	`NFC_1` varchar(20) default NULL,
	`EXCLUDE_COMBI_MOL` tinyint(4) default NULL,
	`SOURCE_NAME` varchar(100) NOT NULL,
	`ATC_4` varchar(20) default NULL,
	`EXCLUDE_FROM_MAT` tinyint(4) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_MARKET_BRAND_MOL_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_MARKET_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MARKET_TYPE` (
	`EXT_MARKET_TYPE_ID` int(11) NOT NULL auto_increment,
	`EXT_MARKET_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_MARKET_TYPE_AK` ( `EXT_MARKET_TYPE_DESCRIPTION` ),
	KEY `EXT_MARKET_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_MARKET_TYPE_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_MOLECULE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MOLECULE` (
	`EXT_MOLECULE_ID` int(11) NOT NULL auto_increment,
	`EXT_MOLECULE_NAME` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_MOLECULE_AK` ( `EXT_MOLECULE_NAME` ),
	KEY `EXT_MOLECULE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_MOLECULE_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
COMMENT = 'A single molecule definition received from third party data providers.'
;

/* Header line. Object: EXT_MOLECULE__MOLECULE_LIST_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MOLECULE__MOLECULE_LIST_AE` (
	`EXT_MOLECULE_ID` int(11) NOT NULL,
	`EXT_MOLECULE_LIST_ID` decimal(30,0) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_MOLECULE__MOLECULE_LIST_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_MOLECULE__MOLECULE_LIST_AE_TO_EXT_MOLECULE_LIST_FK` ( `EXT_MOLECULE_LIST_ID` ),
	PRIMARY KEY  ( `EXT_MOLECULE_ID`, `EXT_MOLECULE_LIST_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_MOLECULE_LIST. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MOLECULE_LIST` (
	`EXT_MOLECULE_LIST_ID` decimal(30,0) NOT NULL,
	`EXT_MOLECULE_LIST_NAME` varchar(1000) NOT NULL,
	`MOLECULE_COUNT` int(11) NOT NULL,
	`EXT_MOLECULE_TYPE_ID` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_MOLECULE_LIST_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_MOLECULE_LIST_TO_EXT_MOLECULE_TYPE_FK` ( `EXT_MOLECULE_TYPE_ID` ),
	PRIMARY KEY  ( `EXT_MOLECULE_LIST_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'A list of all molecules (single or combi) where we recieve data'
;

/* Header line. Object: EXT_MOLECULE_REPORT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MOLECULE_REPORT` (
	`EXT_MOLECULE_REPORT_ID` int(11) NOT NULL auto_increment,
	`EXT_MOLECULE_REPORT_NAME` varchar(100) NOT NULL,
	`EXT_MOLECULE_REPORT_SHORT_NAME` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_MOLECULE_REPORT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_MOLECULE_REPORT_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_MOLECULE_REPORT_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MOLECULE_REPORT_FILE` (
	`MOLECULE_NAME` varchar(100) NOT NULL,
	`MOLECULE_SHORTNAME` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_MOLECULE_REPORT_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_MOLECULE_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_MOLECULE_TYPE` (
	`EXT_MOLECULE_TYPE_ID` int(11) NOT NULL auto_increment,
	`EXT_MOLECULE_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_MOLECULE_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_MOLECULE_TYPE_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_NAME_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_NAME_TYPE` (
	`EXT_NAME_TYPE_ID` int(11) NOT NULL auto_increment,
	`EXT_NAME_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_NAME_TYPE_AK` ( `EXT_NAME_TYPE_DESCRIPTION` ),
	KEY `EXT_NAME_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_NAME_TYPE_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
COMMENT = 'Holds the type of name used by a product, e.g. COMPANY BRANDED'
;

/* Header line. Object: EXT_NFC. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_NFC` (
	`EXT_NFC123_CODE` varchar(20) NOT NULL,
	`EXT_NFC123_DESCRIPTION` varchar(100) default NULL,
	`EXT_NFC1_CODE` varchar(20) default NULL,
	`EXT_NFC12_CODE` varchar(20) default NULL,
	`EXT_NFC2_CODE` varchar(20) default NULL,
	`EXT_NFC23_CODE` varchar(20) default NULL,
	`EXT_FORM_DELIVERY_ID` int(11) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_NFC_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_NFC_TO_EXT_FORM_DELIVERY_FK` ( `EXT_FORM_DELIVERY_ID` ),
	KEY `EXT_NFC_TO_EXT_NFC1_FK` ( `EXT_NFC1_CODE` ),
	KEY `EXT_NFC_TO_EXT_NFC12_FK` ( `EXT_NFC12_CODE` ),
	KEY `EXT_NFC_TO_EXT_NFC2_FK` ( `EXT_NFC2_CODE` ),
	KEY `EXT_NFC_TO_EXT_NFC23_FK` ( `EXT_NFC23_CODE` ),
	PRIMARY KEY  ( `EXT_NFC123_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'New Form Code - conforms the NFC x tables to a master NFC view'
;

/* Header line. Object: EXT_NFC1. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_NFC1` (
	`EXT_NFC1_CODE` varchar(20) NOT NULL,
	`EXT_NFC1_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_NFC1_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_NFC1_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_NFC12. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_NFC12` (
	`EXT_NFC12_CODE` varchar(20) NOT NULL,
	`EXT_NFC12_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_NFC12_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_NFC12_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_NFC2. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_NFC2` (
	`EXT_NFC2_CODE` varchar(20) NOT NULL,
	`EXT_NFC2_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_NFC2_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_NFC2_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_NFC23. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_NFC23` (
	`EXT_NFC23_CODE` varchar(20) NOT NULL,
	`EXT_NFC23_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_NFC23_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_NFC23_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PACK_INTL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PACK_INTL` (
	`EXT_PACK_INTL_ID` int(11) NOT NULL auto_increment,
	`EXT_PACK_INTL_DESCRIPTION` varchar(200) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PACK_INTL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PACK_INTL_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Dynamic
COMMENT = 'External international pack'
;

/* Header line. Object: EXT_PACK_LOCAL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PACK_LOCAL` (
	`EXT_PACK_LOCAL_ID` decimal(30,0) NOT NULL,
	`EXT_PACK_LOCAL_DESCRIPTION` varchar(100) NOT NULL,
	`STRENGTH` varchar(20) default NULL,
	`INNOVATION_INSIGHT` varchar(100) default NULL,
	`EXT_GENERIC_NON_GENERIC_ID` int(11) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PACK_LOCAL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PACK_LOCAL_TO_EXT_GENERIC_NON_GENERIC_FK` ( `EXT_GENERIC_NON_GENERIC_ID` ),
	PRIMARY KEY  ( `EXT_PACK_LOCAL_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'External local and international pack information'
;

/* Header line. Object: EXT_PACK_NFC_MOLECULE_LIST. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PACK_NFC_MOLECULE_LIST` (
	`EXT_PACK_NFC_MOLECULE_LIST_ID` int(11) NOT NULL auto_increment,
	`EXT_PACK_LOCAL_ID` decimal(30,0) NOT NULL,
	`EXT_PACK_INTL_ID` int(11) NOT NULL,
	`EXT_MOLECULE_LIST_ID` decimal(30,0) NOT NULL,
	`NFC123_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PACK_NFC_MOLECULE_LIST_AK` ( `EXT_PACK_LOCAL_ID`, `EXT_PACK_INTL_ID`, `EXT_MOLECULE_LIST_ID`, `NFC123_CODE` ),
	KEY `EXT_PACK_NFC_MOLECULE_LIST_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PACK_NFC_MOLECULE_LIST_TO_EXT_MOLECULE_LIST_FK` ( `EXT_MOLECULE_LIST_ID` ),
	KEY `EXT_PACK_NFC_MOLECULE_LIST_TO_EXT_PACK_INTL_FK` ( `EXT_PACK_INTL_ID` ),
	KEY `EXT_PACK_NFC_MOLECULE_LIST_TO_NFC_FK` ( `NFC123_CODE` ),
	PRIMARY KEY  ( `EXT_PACK_NFC_MOLECULE_LIST_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PACK_PRICE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PACK_PRICE` (
	`EXT_PACK_PRICE_ID` int(11) NOT NULL auto_increment,
	`PRICE_DATE` date default NULL,
	`CURRENCY_CODE` varchar(20) default NULL,
	`EXT_PACK_PRICE_SOURCE_CODE` varchar(20) default NULL,
	`EXT_PACK_LOCAL_ID` decimal(30,0) default NULL,
	`SALES_PRICE` decimal(30,15) default NULL,
	`COUNTING_UNIT_PRICE` decimal(30,15) default NULL,
	`STANDARD_UNIT_PRICE` decimal(30,15) default NULL,
	`EXT_PANEL_PRODUCT_PACK_ID` decimal(30,0) default NULL,
	`EXT_PERIOD_TYPE_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PACK_PRICE_AK` ( `EXT_PACK_PRICE_SOURCE_CODE`, `EXT_PANEL_PRODUCT_PACK_ID`, `EXT_PERIOD_TYPE_CODE` ),
	KEY `EXT_PACK_PRICE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PACK_PRICE_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `EXT_PACK_PRICE_TO_EXT_PACK_LOCAL_FK` ( `EXT_PACK_LOCAL_ID` ),
	KEY `EXT_PACK_PRICE_TO_EXT_PANEL_PRODUCT_PACK_FK` ( `EXT_PANEL_PRODUCT_PACK_ID` ),
	KEY `EXT_PACK_PRICE_TO_EXT_PERIOD_TYPE_FK` ( `EXT_PERIOD_TYPE_CODE` ),
	PRIMARY KEY  ( `EXT_PACK_PRICE_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PACK_PRICE_SOURCE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PACK_PRICE_SOURCE` (
	`EXT_PACK_PRICE_SOURCE_CODE` varchar(20) NOT NULL,
	`EXT_PACK_PRICE_SOURCE_NAME` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PACK_PRICE_SOURCE_AK` ( `EXT_PACK_PRICE_SOURCE_NAME` ),
	KEY `EXT_PACK_PRICE_SOURCE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PACK_PRICE_SOURCE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'The source of a pack price'
;

/* Header line. Object: EXT_PANEL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PANEL` (
	`EXT_PANEL_CODE` varchar(20) NOT NULL,
	`EXT_PANEL_NAME` varchar(100) default NULL,
	`EXT_CHANNEL_NAME` varchar(100) NOT NULL,
	`EXT_CURRENCY_ID` decimal(30,0) NOT NULL,
	`EXT_PANEL_STATUS_CODE` varchar(20) default NULL,
	`EXT_COUNTRY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PANEL_AK` ( `EXT_PANEL_NAME` ),
	KEY `EXT_PANEL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PANEL_TO_EXT_COUNTRY_FK` ( `EXT_COUNTRY_CODE` ),
	KEY `EXT_PANEL_TO_EXT_CURRENCY_FK` ( `EXT_CURRENCY_ID` ),
	KEY `FK_EXT_PANEL_TO_EXT_PANEL_STATUS` ( `EXT_PANEL_STATUS_CODE` ),
	PRIMARY KEY  ( `EXT_PANEL_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'A list of all panels, e.g. AUSTRALIA RETAIL'
;

/* Header line. Object: EXT_PANEL_PRODUCT_PACK. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` (
	`EXT_PANEL_PRODUCT_PACK_ID` decimal(30,0) NOT NULL,
	`PRODUCT_LOCAL_LAUNCH_DATE` date default NULL,
	`PRODUCT_INTL_LAUNCH_DATE` date default NULL,
	`PACK_LOCAL_LAUNCH_DATE` date default NULL,
	`INTERNATIONAL_PACK_STRENGTH` varchar(100) default NULL,
	`STANDARD_UNIT_QUANTITY` varchar(100) default NULL,
	`PACK_VOLUME` varchar(20) default NULL,
	`EXT_PANEL_CODE` varchar(20) default NULL,
	`EXT_PRODUCT_INTL_ID` decimal(30,0) default NULL,
	`EXT_PRODUCT_LOCAL_ATC_ID` int(11) default NULL,
	`EXT_PACK_NFC_MOLECULE_LIST_ID` int(11) default NULL,
	`EXT_CORPORATION_MANUFACTURER_ID` int(11) default NULL,
	`EXT_INTL_REIMBURSEMENT_ID` int(11) default NULL,
	`EXT_LOCAL_REIMBURSEMENT_ID` int(11) default NULL,
	`EXT_INTL_PRESCRIPTION_STATUS_ID` int(11) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PANEL_PRODUCT_PACK_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_CORPORATION_MANUFACTURER_FK` ( `EXT_CORPORATION_MANUFACTURER_ID` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_INTL_PRESCRIPTION_STATUS_FK` ( `EXT_INTL_PRESCRIPTION_STATUS_ID` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_INTL_REIMBURSEMENT_FK` ( `EXT_INTL_REIMBURSEMENT_ID` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_LOCAL_REIMBURSEMENT_FK` ( `EXT_LOCAL_REIMBURSEMENT_ID` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_PACK_NFC_MOLECULE_LIST_FK` ( `EXT_PACK_NFC_MOLECULE_LIST_ID` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_PANEL_FK` ( `EXT_PANEL_CODE` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_PRODUCT_INTL_FK` ( `EXT_PRODUCT_INTL_ID` ),
	KEY `EXT_PANEL_PRODUCT_PACK_TO_EXT_PRODUCT_LOCAL_ATC_FK` ( `EXT_PRODUCT_LOCAL_ATC_ID` ),
	PRIMARY KEY  ( `EXT_PANEL_PRODUCT_PACK_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PANEL_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PANEL_STATUS` (
	`EXT_PANEL_STATUS_CODE` varchar(20) NOT NULL,
	`EXT_PANEL_STATUS_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PANEL_STATUS_AK` ( `EXT_PANEL_STATUS_DESCRIPTION` ),
	KEY `EXT_PANEL_STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PANEL_STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PARTNER_PRODUCT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PARTNER_PRODUCT` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`PRODUCT_INTL_DESCRIPTION` varchar(100) NOT NULL,
	`COUNTRY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PARTNER_PRODUCT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `BRAND_CODE`, `PRODUCT_INTL_DESCRIPTION`, `COUNTRY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PARTNER_PRODUCTS_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PARTNER_PRODUCTS_FILE` (
	`BRAND_CODE` varchar(20) NOT NULL,
	`INTPROD_DESCRIPTION` varchar(100) NOT NULL,
	`MOLECULE_NAME` varchar(100) NOT NULL,
	`BRAND_MOL_FLG` varchar(20) NOT NULL,
	`COUNTRY_ISO_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PARTNER_PRODUCTS_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PERIOD_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PERIOD_TYPE` (
	`EXT_PERIOD_TYPE_CODE` varchar(20) NOT NULL,
	`EXT_PERIOD_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PERIOD_TYPE_AK` ( `EXT_PERIOD_TYPE_DESCRIPTION` ),
	KEY `EXT_PERIOD_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PERIOD_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'Identify the type of period - e.g. Monthly / Quarterly'
;

/* Header line. Object: EXT_PRE_POST_PROTECTION_EXPIRY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRE_POST_PROTECTION_EXPIRY` (
	`EXT_PRE_POST_PROTECTION_EXPIRY_ID` int(11) NOT NULL auto_increment,
	`EXT_PRE_POST_PROTECTION_EXPIRY_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PRE_POST_PROTECTION_EXPIRY_AK` ( `EXT_PRE_POST_PROTECTION_EXPIRY_DESCRIPTION` ),
	KEY `EXT_PRE_POST_PROTECTION_EXPIRY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PRE_POST_PROTECTION_EXPIRY_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRESCRIPTION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRESCRIPTION` (
	`EXT_PRESCRIPTION_ID` int(11) NOT NULL auto_increment,
	`PRESCRIPTION_DATE` date NOT NULL default '9999-01-01',
	`NEW_PRESCRIPTIONS_QTY` int(11) default NULL,
	`TOTAL_PRESCRIPTIONS_QTY` int(11) default NULL,
	`EXT_PERIOD_TYPE_CODE` varchar(20) default NULL,
	`COUNTRY_CODE` varchar(20) default NULL,
	`YEAR_MONTH_ID` int(11) default NULL,
	`EXT_PRESCRIPTION_MARKET_DEFINITION_ID` int(11) default NULL,
	`EXT_PRESCRIPTION_MOLECULE_LIST_ID` int(11) default NULL,
	`EXT_PRESCRIPTION_PRODUCT_INTL_ID` int(11) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRESCRIPTION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PRESCRIPTION_TO_COUNTRY_FK` ( `COUNTRY_CODE` ),
	KEY `EXT_PRESCRIPTION_TO_EXT_PERIOD_TYPE_FK` ( `EXT_PERIOD_TYPE_CODE` ),
	KEY `EXT_PRESCRIPTION_TO_EXT_PRESCRIPTION_MARKET_DEFINITION_FK` ( `EXT_PRESCRIPTION_MARKET_DEFINITION_ID` ),
	KEY `EXT_PRESCRIPTION_TO_EXT_PRESCRIPTION_MOLECULE_LIST_FK` ( `EXT_PRESCRIPTION_MOLECULE_LIST_ID` ),
	KEY `EXT_PRESCRIPTION_TO_EXT_PRESCRIPTION_PRODUCT_INTL_FK` ( `EXT_PRESCRIPTION_PRODUCT_INTL_ID` ),
	PRIMARY KEY  ( `EXT_PRESCRIPTION_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRESCRIPTION_BOUND. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRESCRIPTION_BOUND` (
	`EXT_PRESCRIPTION_BOUND_ID` int(11) NOT NULL auto_increment,
	`EXT_PRESCRIPTION_BOUND_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PRESCRIPTION_BOUND_AK` ( `EXT_PRESCRIPTION_BOUND_DESCRIPTION` ),
	KEY `EXT_PRESCRIPTION_BOUND_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PRESCRIPTION_BOUND_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRESCRIPTION_MARKET_DEFINITION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRESCRIPTION_MARKET_DEFINITION` (
	`EXT_PRESCRIPTION_MARKET_DEFINITION_ID` int(11) NOT NULL auto_increment,
	`EXT_PRESCRIPTION_MARKET_DEFINITION_NAME` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRESCRIPTION_MARKET_DEFINITION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PRESCRIPTION_MARKET_DEFINITION_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRESCRIPTION_MOLECULE_LIST. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRESCRIPTION_MOLECULE_LIST` (
	`EXT_PRESCRIPTION_MOLECULE_LIST_ID` int(11) NOT NULL auto_increment,
	`MOLECULE_COUNT` int(11) NOT NULL,
	`EXT_PRESCRIPTION_MOLECULE_LIST_NAME` varchar(2000) default NULL,
	`EXT_MOLECULE_TYPE_ID` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRESCRIPTION_MOLECULE_LIST_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PRESCRIPTION_MOLECULE_LIST_TO_EXT_MOLECULE_TYPE_FK` ( `EXT_MOLECULE_TYPE_ID` ),
	PRIMARY KEY  ( `EXT_PRESCRIPTION_MOLECULE_LIST_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
COMMENT = 'A list of all molecules (single or combi) where we recieve data'
;

/* Header line. Object: EXT_PRESCRIPTION_MOLECULE_LIST__EXT_MOLECULE_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRESCRIPTION_MOLECULE_LIST__EXT_MOLECULE_AE` (
	`EXT_MOLECULE_ID` int(11) NOT NULL,
	`EXT_PRESCRIPTION_MOLECULE_LIST_ID` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRESC_MOL_LIST__EXT_MOL_AE_TO_EXT_PRESC_MOL_LIST_FK` ( `EXT_PRESCRIPTION_MOLECULE_LIST_ID` ),
	KEY `EXT_PRESCRIPTION_MOLECULE_LIST__EXT_MOLECULE_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_MOLECULE_ID`, `EXT_PRESCRIPTION_MOLECULE_LIST_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRESCRIPTION_PRODUCT_INTL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRESCRIPTION_PRODUCT_INTL` (
	`EXT_PRESCRIPTION_PRODUCT_INTL_ID` int(11) NOT NULL auto_increment,
	`EXT_PRESCRIPTION_PRODUCT_INTL_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRESCRIPTION_PRODUCT_INTL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PRESCRIPTION_PRODUCT_INTL_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRODUCT_FAMILY_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRODUCT_FAMILY_FILE` (
	`PRODUCT_FAMILY_CODE` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`MARKET_SHORTNAME` varchar(100) NOT NULL,
	`BRAND_LOOKUP` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRODUCT_FAMILY_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRODUCT_INTL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRODUCT_INTL` (
	`EXT_PRODUCT_INTL_ID` decimal(30,0) NOT NULL,
	`EXT_PRODUCT_INTL_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRODUCT_INTL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PRODUCT_INTL_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRODUCT_LOCAL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRODUCT_LOCAL` (
	`EXT_PRODUCT_LOCAL_ID` decimal(30,0) NOT NULL,
	`EXT_PRODUCT_LOCAL_DESCRIPTION` varchar(100) default NULL,
	`LICENSING` varchar(100) default NULL,
	`ESTIMATED_PROTECTION_EXPIRY` varchar(100) default NULL,
	`RELATIVE_ESTIMATED_PROTECTION_EXPIRY` varchar(100) default NULL,
	`EXT_PROTECTION_STATUS_ID` int(11) default NULL,
	`EXT_NAME_TYPE_ID` int(11) default NULL,
	`EXT_LAUNCH_STATUS_ID` int(11) default NULL,
	`EXT_MARKET_TYPE_ID` int(11) default NULL,
	`EXT_GENERIC_PRODUCT_CLASS_ID` int(11) default NULL,
	`EXT_PRESCRIPTION_BOUND_ID` int(11) default NULL,
	`EXT_PRE_POST_PROTECTION_EXPIRY_ID` int(11) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PRODUCT_LOCAL_AK` ( `EXT_PRODUCT_LOCAL_DESCRIPTION` ),
	KEY `EXT_PRODUCT_LOCAL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PRODUCT_LOCAL_TO_EXT_GENERIC_PRODUCT_CLASS_FK` ( `EXT_GENERIC_PRODUCT_CLASS_ID` ),
	KEY `EXT_PRODUCT_LOCAL_TO_EXT_LAUNCH_STATUS_FK` ( `EXT_LAUNCH_STATUS_ID` ),
	KEY `EXT_PRODUCT_LOCAL_TO_EXT_MARKET_TYPE_FK` ( `EXT_MARKET_TYPE_ID` ),
	KEY `EXT_PRODUCT_LOCAL_TO_EXT_NAME_TYPE_FK` ( `EXT_NAME_TYPE_ID` ),
	KEY `EXT_PRODUCT_LOCAL_TO_EXT_PRE_POST_PROTECTION_EXPIRY_FK` ( `EXT_PRE_POST_PROTECTION_EXPIRY_ID` ),
	KEY `EXT_PRODUCT_LOCAL_TO_EXT_PRESCRIPTION_BOUND_FK` ( `EXT_PRESCRIPTION_BOUND_ID` ),
	KEY `EXT_PRODUCT_LOCAL_TO_EXT_PROTECTION_STATUS_FK` ( `EXT_PROTECTION_STATUS_ID` ),
	PRIMARY KEY  ( `EXT_PRODUCT_LOCAL_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
COMMENT = 'External local and international product information (source IMS)'
;

/* Header line. Object: EXT_PRODUCT_LOCAL__EXT_ATC_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRODUCT_LOCAL__EXT_ATC_AE` (
	`EXT_PRODUCT_LOCAL__EXT_ATC_AE_ID` int(11) NOT NULL auto_increment,
	`EXT_PRODUCT_LOCAL_ID` decimal(30,0) default NULL,
	`EXT_ATC_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PRODUCT_LOCAL__EXT_ATC_AE_AK` ( `EXT_PRODUCT_LOCAL_ID`, `EXT_ATC_CODE` ),
	KEY `EXT_PRODUCT_LOCAL__EXT_ATC_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PRODUCT_LOCAL__EXT_ATC_AE_TO_EXT_ATC_FK` ( `EXT_ATC_CODE` ),
	PRIMARY KEY  ( `EXT_PRODUCT_LOCAL__EXT_ATC_AE_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PRODUCT_LOCAL_ATC. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PRODUCT_LOCAL_ATC` (
	`EXT_PRODUCT_LOCAL_ATC_ID` int(11) NOT NULL auto_increment,
	`ATC_CODE` varchar(20) NOT NULL,
	`EXT_PRODUCT_LOCAL_ID` decimal(30,0) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_PRODUCT_LOCAL_ATC_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PRODUCT_LOCAL_ATC_IE2` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_PRODUCT_LOCAL_ATC_TO_ATC_FK` ( `ATC_CODE` ),
	KEY `EXT_PRODUCT_LOCAL_ATC_TO_EXT_PRODUCT_LOCAL_FK` ( `EXT_PRODUCT_LOCAL_ID` ),
	PRIMARY KEY  ( `EXT_PRODUCT_LOCAL_ATC_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_PROTECTION_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_PROTECTION_STATUS` (
	`EXT_PROTECTION_STATUS_ID` int(11) NOT NULL auto_increment,
	`EXT_PROTECTION_STATUS_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_PROTECTION_STATUS_AK` ( `EXT_PROTECTION_STATUS_DESCRIPTION` ),
	KEY `EXT_PROTECTION_STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_PROTECTION_STATUS_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
COMMENT = 'The protection status of a brand, e.g. PROTECTED'
;

/* Header line. Object: EXT_REGION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_REGION` (
	`REGION_NAME` varchar(100) NOT NULL,
	`EXT_PERIOD_TYPE_CODE` varchar(20) NOT NULL,
	`EXT_REGION_SHORT_NAME` varchar(20) default NULL,
	`EXT_REGION_LEVEL` int(11) NOT NULL,
	`PARENT_EXT_REGION_NAME` varchar(100) default NULL,
	`PARENT_EXT_PERIOD_TYPE_CODE` varchar(20) default NULL,
	`EXT_COUNTRY_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_COUNTRY_TO_EXT_REGION_FK` ( `EXT_COUNTRY_CODE` ),
	KEY `EXT_PERIOD_TYPE_EXT_REGION_FK` ( `EXT_PERIOD_TYPE_CODE` ),
	KEY `EXT_REGION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_REGION_TO_EXT_REGION_FK` ( `PARENT_EXT_REGION_NAME`, `PARENT_EXT_PERIOD_TYPE_CODE` ),
	PRIMARY KEY  ( `REGION_NAME`, `EXT_PERIOD_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_REGION_COUNTRY_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_REGION_COUNTRY_FILE` (
	`REGION_DESCRIPTION` varchar(100) NOT NULL,
	`SUB_REGION_DESCRIPTION_1` varchar(100) default NULL,
	`SUB_REGION_DESCRIPTION_2` varchar(100) default NULL,
	`SUB_REGION_DESCRIPTION_3` varchar(100) default NULL,
	`SUB_REGION_DESCRIPTION_4` varchar(100) NOT NULL,
	`SUB_REGION_DESCRIPTION_5` varchar(100) NOT NULL,
	`REGION_CODE` varchar(20) default NULL,
	`COUNTRY_DESCRIPTION` varchar(100) NOT NULL,
	`COUNTRY_ISO_CODE` varchar(20) NOT NULL,
	`PERIOD_TYPE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_REGION_COUNTRY_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_REGION_REPORT_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_REGION_REPORT_FILE` (
	`REGION_DESCRIPTION` varchar(100) NOT NULL,
	`REGION_SHORTNAME` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_REGION_REPORT_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_SALES. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_SALES` (
	`SALES_DATE` date NOT NULL default '9999-01-01',
	`EXT_PERIOD_TYPE_CODE` varchar(20) NOT NULL,
	`EXT_PANEL_PRODUCT_PACK_ID` decimal(30,0) NOT NULL,
	`CURRENCY_CODE` varchar(20) default NULL,
	`DAYS_OF_THERAPY` decimal(30,15) default NULL,
	`UNITS_QTY` decimal(30,15) default NULL,
	`STANDARD_UNITS_QTY` decimal(30,15) default NULL,
	`COUNTING_UNITS_QTY` decimal(30,15) default NULL,
	`SALES_VALUE` decimal(30,15) default NULL,
	`HISTORICAL_PROTECTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_SALES_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `EXT_SALES_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `EXT_SALES_TO_EXT_PANEL_PRODUCT_PACK_FK` ( `EXT_PANEL_PRODUCT_PACK_ID` ),
	KEY `EXT_SALES_TO_EXT_PERIOD_TYPE_FK` ( `EXT_PERIOD_TYPE_CODE` ),
	PRIMARY KEY  ( `SALES_DATE`, `EXT_PERIOD_TYPE_CODE`, `EXT_PANEL_PRODUCT_PACK_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_SALES_MARKET. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_SALES_MARKET` (
	`EXT_SALES_MARKET_ID` int(11) NOT NULL auto_increment,
	`EXT_SALES_MARKET_NAME` varchar(100) NOT NULL,
	`EXT_SALES_MARKET_SHORT_NAME` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_SALES_MARKET_AK` ( `EXT_SALES_MARKET_NAME` ),
	KEY `EXT_SALES_MARKET_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_SALES_MARKET_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
AUTO_INCREMENT = 1
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_SALES_MARKET_FILE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_SALES_MARKET_FILE` (
	`MARKET_SHORTNAME` varchar(100) default NULL,
	`MARKET_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `EXT_SALES_MARKET_FILE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: EXT_TERMINAL_NODE_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`EXT_TERMINAL_NODE_TYPE` (
	`EXT_TERMINAL_NODE_TYPE_CODE` varchar(20) NOT NULL,
	`EXT_TERMINAL_NODE_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `EXT_TERMINAL_NODE_TYPE_AK` ( `EXT_TERMINAL_NODE_TYPE_DESCRIPTION` ),
	KEY `EXT_TERMINAL_NODE_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `EXT_TERMINAL_NODE_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_CUSTOMER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_CUSTOMER` (
	`FINANCIAL_CUSTOMER_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_NAME1` varchar(100) NOT NULL,
	`FINANCIAL_CUSTOMER_NAME2` varchar(100) default NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FINANCIAL_CUSTOMER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `FINANCIAL_CUSTOMER_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` ),
	PRIMARY KEY  ( `FINANCIAL_CUSTOMER_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_CUSTOMER_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP` (
	`FINANCIAL_CUSTOMER_GROUP_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_GROUP_DESCRIPTION` varchar(100) NOT NULL,
	`FINANCIAL_CUSTOMER_TYPE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`SALES_CHANNEL_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FINANCIAL_CUSTOMER_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `FINANCIAL_CUSTOMER_GROUP_TO_FINANCIAL_CUSTOMER_TYPE_FK` ( `FINANCIAL_CUSTOMER_TYPE_CODE` ),
	KEY `FINANCIAL_CUSTOMER_GROUP_TO_SALES_CHANNEL_FK` ( `SALES_CHANNEL_CODE` ),
	KEY `FINANCIAL_CUSTOMER_GROUP_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` ),
	PRIMARY KEY  ( `FINANCIAL_CUSTOMER_GROUP_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_CUSTOMER_GROUP__FINANCIAL_CUSTOMER_GROUP_REPORTING_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP__FINANCIAL_CUSTOMER_GROUP_REPORTING_AE` (
	`FINANCIAL_CUSTOMER_GROUP_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_GROUP_REPORTING_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FIN_CUST_GROUP__FIN_CUST_GROUP_REP_AE_TO_FIN_CUST_GROUP_REP_FK` ( `FINANCIAL_CUSTOMER_GROUP_REPORTING_CODE` ),
	KEY `FIN_CUST_GROUP__FIN_CUST_GROUP_REPORTING_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `FINANCIAL_CUSTOMER_GROUP_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `FINANCIAL_CUSTOMER_GROUP_REPORTING_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_CUSTOMER_GROUP_REPORTING. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP_REPORTING` (
	`FINANCIAL_CUSTOMER_GROUP_REPORTING_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_GROUP_REPORTING_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FINANCIAL_CUSTOMER_GROUP_REPORTING_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `FINANCIAL_CUSTOMER_GROUP_REPORTING_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_CUSTOMER_MASTER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER` (
	`SALES_ORGANISATION_CODE` varchar(20) NOT NULL,
	`DISTRIBUTION_CHANNEL_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`DIVISION_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`FINANCIAL_CUSTOMER_GROUP_CODE` varchar(20) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FINANCIAL_CUSTOMER_MASTER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `FINANCIAL_CUSTOMER_MASTER_TO_DISTRIBUTION_CHANNEL_FK` ( `DISTRIBUTION_CHANNEL_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `FINANCIAL_CUSTOMER_MASTER_TO_DIVISION_FK` ( `DIVISION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `FINANCIAL_CUSTOMER_MASTER_TO_FINANCIAL_CUSTOMER_FK` ( `FINANCIAL_CUSTOMER_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `FINANCIAL_CUSTOMER_MASTER_TO_FINANCIAL_CUSTOMER_GROUP_FK` ( `FINANCIAL_CUSTOMER_GROUP_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `FINANCIAL_CUSTOMER_MASTER_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` ),
	PRIMARY KEY  ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `FINANCIAL_CUSTOMER_CODE`, `DIVISION_CODE`, `DISTRIBUTION_CHANNEL_CODE`, `FINANCIAL_CUSTOMER_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE` (
	`SALES_ORGANISATION_CODE` varchar(20) NOT NULL,
	`DISTRIBUTION_CHANNEL_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`DIVISION_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_GROUP_CODE` varchar(20) NOT NULL,
	`SALES_CHANNEL_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FIN_CUST_MASTER__SALES_CHANNEL_AE_TO_FIN_CUST_MASTER_FK` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `FINANCIAL_CUSTOMER_CODE`, `DIVISION_CODE`, `DISTRIBUTION_CHANNEL_CODE`, `FINANCIAL_CUSTOMER_GROUP_CODE` ),
	KEY `FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE_TO_SALES_CHANNEL_FK` ( `SALES_CHANNEL_CODE` ),
	PRIMARY KEY  ( `SALES_ORGANISATION_CODE`, `DISTRIBUTION_CHANNEL_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `DIVISION_CODE`, `FINANCIAL_CUSTOMER_CODE`, `FINANCIAL_CUSTOMER_GROUP_CODE`, `SALES_CHANNEL_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_CUSTOMER_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_CUSTOMER_TYPE` (
	`FINANCIAL_CUSTOMER_TYPE_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FINANCIAL_CUSTOMER_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `FINANCIAL_CUSTOMER_TYPE_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `FINANCIAL_CUSTOMER_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FINANCIAL_SCENARIO. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FINANCIAL_SCENARIO` (
	`FINANCIAL_SCENARIO_CODE` varchar(20) NOT NULL,
	`FINANCIAL_SCENARIO_DESCRIPTION` varchar(100) NOT NULL,
	`REPORTING_SCENARIO_FLG` tinyint(4) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FINANCIAL_SCENARIO_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `FINANCIAL_SCENARIO_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `FINANCIAL_SCENARIO_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: FUNCTION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`FUNCTION` (
	`FUNCTION_CODE` varchar(20) NOT NULL,
	`FUNCTION_DESCRIPTION` varchar(100) NOT NULL,
	`FUNCTION_GROUP` varchar(100) default NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `FUNCTION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `FUNCTION_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `FUNCTION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: GENERIC_NAME. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`GENERIC_NAME` (
	`GENERIC_NAME_CODE` varchar(100) NOT NULL,
	`GENERIC_NAME_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `GENERIC_NAME_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `GENERIC_NAME_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: GLOBAL_LIFECYCLE_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`GLOBAL_LIFECYCLE_STATUS` (
	`GLOBAL_LIFECYCLE_STATUS_CODE` varchar(100) NOT NULL,
	`GLOBAL_LIFECYCLE_STATUS_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `GLOBAL_LIFECYCLE_STATUS_AK` ( `GLOBAL_LIFECYCLE_STATUS_DESCRIPTION` ),
	KEY `GLOBAL_LIFECYCLE_STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `GLOBAL_LIFECYCLE_STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: GLOBAL_MARKET_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`GLOBAL_MARKET_STATUS` (
	`GLOBAL_MARKET_STATUS_CODE` varchar(100) NOT NULL,
	`GLOBAL_MARKET_STATUS_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `GLOBAL_MARKET_STATUS_AK` ( `GLOBAL_MARKET_STATUS_DESCRIPTION` ),
	KEY `GLOBAL_MARKET_STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `GLOBAL_MARKET_STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: GLOBAL_PACK. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`GLOBAL_PACK` (
	`GLOBAL_PACK_CODE` varchar(50) NOT NULL,
	`GLOBAL_PACK_SHORT_DESCRIPTION` varchar(100) NOT NULL,
	`GLOBAL_PACK_LONG_DESCRIPTION` varchar(200) default NULL,
	`PACK_TYPE_CODE` varchar(20) default NULL,
	`PRIMARY_PACK_SIZE_CODE` varchar(20) default NULL,
	`SECONDARY_PACK_SIZE_CODE` varchar(20) default NULL,
	`MATERIAL_TYPE_CODE` varchar(20) default NULL,
	`PACK_STATUS_CODE` varchar(20) default NULL,
	`GLOBAL_DELETION_FLG` tinyint(4) default NULL,
	`PRODUCT_HIERARCHY` varchar(100) default NULL,
	`BASE_UNIT_OF_MEASURE_CODE` varchar(100) default NULL,
	`PHARMACEUTICAL_PRODUCT_CODE` varchar(20) default NULL,
	`STRENGTH_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `GLOBAL_PACK_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `GLOBAL_PACK_TO_MATERIAL_TYPE_FK` ( `MATERIAL_TYPE_CODE` ),
	KEY `GLOBAL_PACK_TO_PACK_SIZE_FK_PRIMARY` ( `PRIMARY_PACK_SIZE_CODE` ),
	KEY `GLOBAL_PACK_TO_PACK_SIZE_FK_SECONDARY` ( `SECONDARY_PACK_SIZE_CODE` ),
	KEY `GLOBAL_PACK_TO_PACK_STATUS_FK` ( `PACK_STATUS_CODE` ),
	KEY `GLOBAL_PACK_TO_PACK_TYPE_FK` ( `PACK_TYPE_CODE` ),
	KEY `GLOBAL_PACK_TO_PHARMACEUTICAL_PRODUCT_FK` ( `PHARMACEUTICAL_PRODUCT_CODE` ),
	KEY `GLOBAL_PACK_TO_STRENGTH_FK` ( `STRENGTH_CODE` ),
	KEY `GLOBAL_PACK_TO_UNIT_OF_MEASURE_FK_BASE` ( `BASE_UNIT_OF_MEASURE_CODE` ),
	PRIMARY KEY  ( `GLOBAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: GLOBAL_PACK__COUNTRY_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`GLOBAL_PACK__COUNTRY_AE` (
	`COUNTRY_CODE` varchar(20) NOT NULL,
	`GLOBAL_PACK_CODE` varchar(50) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `GLOBAL_PACK__COUNTRY_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `COUNTRY_CODE`, `GLOBAL_PACK_CODE` ),
	KEY `RefGLOBAL_PACK1210` ( `GLOBAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE` (
	`UNIT_OF_MEASURE_CODE` varchar(100) NOT NULL,
	`GLOBAL_PACK_CODE` varchar(50) NOT NULL,
	`NUMERATOR` int(11) NOT NULL,
	`DENOMINATOR` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_TO_GLOBAL_PACK_FK` ( `GLOBAL_PACK_CODE` ),
	PRIMARY KEY  ( `UNIT_OF_MEASURE_CODE`, `GLOBAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: IMED. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`IMED` (
	`IMED_CODE` varchar(100) NOT NULL,
	`IMED_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `IMED_AK` ( `IMED_DESCRIPTION` ),
	KEY `IMED_IE01` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `IMED_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: INDICATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`INDICATION` (
	`INDICATION_CODE` varchar(20) NOT NULL,
	`INDICATION_NAME` varchar(100) default NULL,
	`INDICATION_DESCRIPTION` varchar(100) NOT NULL,
	`DISEASE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `INDICATION_AK` ( `INDICATION_NAME` ),
	KEY `INDICATION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `INDICATION_TO_DISEASE_FK` ( `DISEASE_CODE` ),
	PRIMARY KEY  ( `INDICATION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: INTERNAL_ORDER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`INTERNAL_ORDER` (
	`INTERNAL_ORDER_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ACTIVITY_TYPE_CODE` varchar(20) NOT NULL,
	`INTERNAL_ORDER_DESCRIPTION` varchar(100) NOT NULL,
	`ORDER_TYPE` varchar(100) default NULL,
	`EXTERNAL_ORDER_CODE` varchar(20) default NULL,
	`LEGAL_ENTITY_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `INTERNAL_ORDER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `INTERNAL_ORDER_TO_ACTIVITY_TYPE_FK` ( `ACTIVITY_TYPE_CODE` ),
	KEY `INTERNAL_ORDER_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` ),
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: JOB_FAMILY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`JOB_FAMILY` (
	`JOB_FAMILY_ID` int(11) NOT NULL,
	`JOB_FAMILY_DESCRIPTION` varchar(100) NOT NULL,
	`JOB_FAMILY_GROUP_ID` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `JOB_FAMILY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `JOB_FAMILY_TO_JOB_FAMILY_GROUP_FK` ( `JOB_FAMILY_GROUP_ID` ),
	PRIMARY KEY  ( `JOB_FAMILY_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: JOB_FAMILY_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`JOB_FAMILY_GROUP` (
	`JOB_FAMILY_GROUP_ID` int(11) NOT NULL,
	`JOB_FAMILY_GROUP_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `JOB_FAMILY_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `JOB_FAMILY_GROUP_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: JOB_ROLE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`JOB_ROLE` (
	`JOB_ROLE_CODE` varchar(20) NOT NULL,
	`JOB_FAMILY_ID` int(11) NOT NULL,
	`JOB_ROLE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `JOB_ROLE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `JOB_ROLE_TO_JOB_FAMILY_FK` ( `JOB_FAMILY_ID` ),
	PRIMARY KEY  ( `JOB_ROLE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`LANGUAGE` (
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	`ETL_RECORD_COMPLETE_MAP` varchar(50) NOT NULL,
	KEY `LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: LEGAL_ENTITY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`LEGAL_ENTITY` (
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`AZ_GROUP_CODE` varchar(20) NOT NULL,
	`COMPANY_REG_NUMBER` varchar(20) NOT NULL,
	`IS_SAP_FLG` tinyint(4) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`LEGAL_ENTITY_DESCRIPTION` varchar(100) default NULL,
	`COUNTRY_CODE` varchar(20) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `LEGAL_ENTITY_AK` ( `LEGAL_ENTITY_DESCRIPTION` ),
	KEY `LEGAL_ENTITY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `LEGAL_ENTITY_TO_AZ_GROUP_FK` ( `AZ_GROUP_CODE` ),
	KEY `LEGAL_ENTITY_TO_COUNTRY_FK` ( `COUNTRY_CODE` ),
	KEY `LEGAL_ENTITY_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `LEGAL_ENTITY_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `LEGAL_ENTITY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: LOCAL_PACK. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`LOCAL_PACK` (
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_CODE` varchar(20) NOT NULL,
	`MATERIAL_TYPE_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_SHORT_DESCRIPTION` varchar(100) NOT NULL,
	`BASE_UNIT_OF_MEASURE_CODE` varchar(100) default NULL,
	`GLOBAL_PACK_CODE` varchar(50) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `LOCAL_PACK_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `LOCAL_PACK_TO_GLOBAL_PACK_FK` ( `GLOBAL_PACK_CODE` ),
	KEY `LOCAL_PACK_TO_MATERIAL_TYPE_FK` ( `MATERIAL_TYPE_CODE` ),
	KEY `LOCAL_PACK_TO_UNIT_OF_MEASURE_FK_BASE` ( `BASE_UNIT_OF_MEASURE_CODE` ),
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: LOCAL_PACK__SALES_ORGANISATION_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`LOCAL_PACK__SALES_ORGANISATION_AE` (
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_CODE` varchar(20) NOT NULL,
	`SALES_ORGANISATION_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `LOCAL_PACK__SALES_ORGANISATION_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `LOCAL_PACK__SALES_ORGANISATION_AE_TO_LOCAL_PACK_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ),
	PRIMARY KEY  ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE` (
	`UNIT_OF_MEASURE_CODE` varchar(100) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_CODE` varchar(20) NOT NULL,
	`DENOMINATOR` int(11) NOT NULL,
	`NUMERATOR` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_TO_LOCAL_PACK_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ),
	PRIMARY KEY  ( `UNIT_OF_MEASURE_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: LOCAL_PACK_APO_LOCATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`LOCAL_PACK_APO_LOCATION` (
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_CODE` varchar(20) NOT NULL,
	`APO_LOCATION_CODE` varchar(20) NOT NULL,
	`PIC_CODE` varchar(20) default NULL,
	`PACK_STATUS_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `LOCAL_PACK_APO_LOCATION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `LOCAL_PACK_APO_LOCATION_TO_LOCAL_PACK_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ),
	KEY `LOCAL_PACK_APO_LOCATION_TO_PACK_STATUS_FK` ( `PACK_STATUS_CODE` ),
	PRIMARY KEY  ( `APO_LOCATION_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING` (
	`ORG_UNIT_CODE` varchar(20) NOT NULL,
	`GEO_AREA_CODE` varchar(20) NOT NULL,
	`MAIN_LOCAL_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING_TO_LOCAL_PACK_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ),
	PRIMARY KEY  ( `ORG_UNIT_CODE`, `GEO_AREA_CODE`, `MAIN_LOCAL_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MANAGEMENT_UNIT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MANAGEMENT_UNIT` (
	`MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`MANAGEMENT_UNIT_DESCRIPTION` varchar(100) NOT NULL,
	`EMERGING_MARKET_FLG` tinyint(4) NOT NULL,
	`MANAGEMENT_UNIT_LEVEL` int(11) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`ONCOLOGY_TASK_FORCE_FLG` tinyint(4) NOT NULL,
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`PARENT_MANAGEMENT_UNIT_CODE` varchar(20) default NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MANAGEMENT_UNIT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MANAGEMENT_UNIT_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `MANAGEMENT_UNIT_TO_MANAGEMENT_UNIT_FK_PARENT` ( `PARENT_MANAGEMENT_UNIT_CODE` ),
	KEY `MANAGEMENT_UNIT_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `MANAGEMENT_UNIT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE` (
	`ALT_MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`ALT_HIER_CODE` varchar(20) NOT NULL,
	`MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE_TO_ALT_MANAGEMENT_HI_FK` ( `ALT_MANAGEMENT_UNIT_CODE`, `ALT_HIER_CODE` ),
	KEY `MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE_TO_MANAGEMENT_UNIT_FK` ( `MANAGEMENT_UNIT_CODE` ),
	PRIMARY KEY  ( `ALT_HIER_CODE`, `ALT_MANAGEMENT_UNIT_CODE`, `MANAGEMENT_UNIT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE` (
	`MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`MANAGEMENT_UNIT_TYPE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE_TO_MANAGEMENT_UNIT_T_FK` ( `MANAGEMENT_UNIT_TYPE_CODE` ),
	PRIMARY KEY  ( `MANAGEMENT_UNIT_CODE`, `MANAGEMENT_UNIT_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MANAGEMENT_UNIT_CALENDAR. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MANAGEMENT_UNIT_CALENDAR` (
	`YEAR_DAY_ID` int(11) NOT NULL,
	`MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`WEEK_DAY_FLG` tinyint(4) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MANAGEMENT_UNIT_CALENDAR_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MANAGEMENT_UNIT_CALENDAR_TO_MANAGEMENT_UNIT_FK` ( `MANAGEMENT_UNIT_CODE` ),
	PRIMARY KEY  ( `YEAR_DAY_ID`, `MANAGEMENT_UNIT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MANAGEMENT_UNIT_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MANAGEMENT_UNIT_TYPE` (
	`MANAGEMENT_UNIT_TYPE_CODE` varchar(20) NOT NULL,
	`MANAGEMENT_UNIT_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MANAGEMENT_UNIT_TYPE_IE` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MANAGEMENT_UNIT_TYPE_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `MANAGEMENT_UNIT_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MARKET. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MARKET` (
	`MARKET_ID` int(11) NOT NULL,
	`COUNTRY_CODE` varchar(20) default NULL,
	`DISEASE_AREA_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MARKET_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MARKET_TO_COUNTRY_FK` ( `COUNTRY_CODE` ),
	KEY `MARKET_TO_DISEASE_AREA_FK` ( `DISEASE_AREA_CODE` ),
	PRIMARY KEY  ( `MARKET_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MATERIAL_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MATERIAL_TYPE` (
	`MATERIAL_TYPE_CODE` varchar(20) NOT NULL,
	`MATERIAL_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `MATERIAL_TYPE_AK` ( `MATERIAL_TYPE_DESCRIPTION` ),
	PRIMARY KEY  ( `MATERIAL_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MOLECULE_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MOLECULE_TYPE` (
	`MOLECULE_TYPE_CODE` varchar(100) NOT NULL,
	`MOLECULE_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `MOLECULE_TYPE_AK` ( `MOLECULE_TYPE_DESCRIPTION` ),
	KEY `MOLECULE_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `MOLECULE_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: MOVEMENT_OVER_TIME. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`MOVEMENT_OVER_TIME` (
	`MOT_CODE` varchar(20) NOT NULL,
	`MOVEMENT_OVER_TIME_DESCRIPTION` varchar(100) NOT NULL,
	`MOVEMENT_OVER_TIME_LEVEL` int(11) NOT NULL,
	`PARENT_MOT_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `MOVEMENT_OVER_TIME_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `MOVEMENT_OVER_TIME_TO_MOVEMENT_OVER_TIME_FK_PARENT` ( `PARENT_MOT_CODE` ),
	PRIMARY KEY  ( `MOT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;


/* Header line. Object: NFC. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`NFC` (
	`NFC123_CODE` varchar(20) NOT NULL,
	`NFC_DESCRIPTION` varchar(100) NOT NULL,
	`EXT_FORM_DELIVERY_ID` int(11) default NULL,
	`NFC1_CODE` varchar(20) NOT NULL,
	`NFC12_CODE` varchar(20) NOT NULL,
	`NFC2_CODE` varchar(20) NOT NULL,
	`NFC23_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `NFC_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `NFC_TO_EXT_FORM_DELIVERY_FK` ( `EXT_FORM_DELIVERY_ID` ),
	KEY `NFC_TO_NFC1_FK` ( `NFC1_CODE` ),
	KEY `NFC_TO_NFC12_FK` ( `NFC12_CODE` ),
	KEY `NFC_TO_NFC2_FK` ( `NFC2_CODE` ),
	KEY `NFC_TO_NFC23_FK` ( `NFC23_CODE` ),
	PRIMARY KEY  ( `NFC123_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: NFC1. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`NFC1` (
	`NFC1_CODE` varchar(20) NOT NULL,
	`NFC1_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `NFC1_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `NFC1_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: NFC12. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`NFC12` (
	`NFC12_CODE` varchar(20) NOT NULL,
	`NFC12_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `NFC12_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `NFC12_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: NFC2. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`NFC2` (
	`NFC2_CODE` varchar(20) NOT NULL,
	`NFC2_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `NFC2_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `NFC2_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: NFC23. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`NFC23` (
	`NFC23_CODE` varchar(20) NOT NULL,
	`NFC23_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `NFC23_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `NFC23_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: OPAL_PROJECT_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`OPAL_PROJECT_TYPE` (
	`OPAL_PROJECT_TYPE_CODE` varchar(20) NOT NULL,
	`OPAL_PROJECT_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `OPAL_PROJECT_TYPE_AK` ( `OPAL_PROJECT_TYPE_DESCRIPTION` ),
	KEY `OPAL_PROJECT_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `OPAL_PROJECT_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: OPERATING_COSTS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`OPERATING_COSTS` (
	`SAP_RECORD_NUMBER` varchar(18) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LOCAL_CURRENCY_AMOUNT` decimal(30,15) default NULL,
	`TRANSACTION_AMOUNT` decimal(30,15) NOT NULL,
	`SAP_TX_VERSION_NUMBER` varchar(3) NOT NULL,
	`SAP_TX_RECORD_TYPE` varchar(1) NOT NULL,
	`SAP_TX_FI_DOCUMENT_TYPE` varchar(2) NOT NULL,
	`SAP_TX_FI_DOCUMENT_NUMBER` varchar(50) NOT NULL,
	`SAP_TX_SPL_DOCUMENT_NUMBER` varchar(50) NOT NULL,
	`SAP_TX_FI_DOCUMENT_LINE_ITEM` varchar(6) NOT NULL,
	`SAP_TX_SPL_DOCUMENT_LINE_ITEM` varchar(6) NOT NULL,
	`SAP_TX_DATETIME` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) default NULL,
	`COST_CENTRE_CODE` varchar(20) NOT NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`FINANCIAL_SCENARIO_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`PERIOD_CODE` varchar(20) NOT NULL,
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`PROJECT_ACTIVITY_CODE` varchar(50) default NULL,
	`PURCHASE_ORDER_CODE` varchar(20) default NULL,
	`VENDOR_CODE` varchar(20) default NULL,
	`YEAR_DAY_ID` int(11) NOT NULL,
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`INTERNAL_ORDER_CODE` varchar(20) default NULL,
	`FUNCTION_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ACTIVITY_TYPE_CODE` varchar(20) default NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `OPERATING_COSTS_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `OPERATING_COSTS_TO_ACTIVITY_TYPE_FK` ( `ACTIVITY_TYPE_CODE` ),
	KEY `OPERATING_COSTS_TO_BRAND_FK` ( `BRAND_CODE` ),
	KEY `OPERATING_COSTS_TO_COST_CENTRE_FK` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `OPERATING_COSTS_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `OPERATING_COSTS_TO_FINANCIAL_SCENARIO_FK` ( `FINANCIAL_SCENARIO_CODE` ),
	KEY `OPERATING_COSTS_TO_FUNCTION_FK` ( `FUNCTION_CODE` ),
	KEY `OPERATING_COSTS_TO_INTERNAL_ORDER_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` ),
	KEY `OPERATING_COSTS_TO_POSTING_ACCOUNT_FK` ( `POSTING_ACCOUNT_CODE` ),
	KEY `OPERATING_COSTS_TO_PROFIT_CENTRE_FK` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `OPERATING_COSTS_TO_PROJECT_ACTIVITY_FK` ( `PROJECT_ACTIVITY_CODE` ),
	KEY `OPERATING_COSTS_TO_PURCHASE_ORDER_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `PURCHASE_ORDER_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `OPERATING_COSTS_TO_VENDOR_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` ),
	PRIMARY KEY  ( `SAP_RECORD_NUMBER`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ORG_UNIT_MANAGEMENT_UNIT_MAPPING. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ORG_UNIT_MANAGEMENT_UNIT_MAPPING` (
	`ORG_UNIT_CODE` varchar(20) NOT NULL,
	`GEO_AREA_CODE` varchar(20) NOT NULL,
	`MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ORG_UNIT_MANAGEMENT_UNIT_MAPPING_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `ORG_UNIT_MANAGEMENT_UNIT_MAPPING_TO_MANAGEMENT_UNIT_FK` ( `MANAGEMENT_UNIT_CODE` ),
	PRIMARY KEY  ( `ORG_UNIT_CODE`, `GEO_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ORGANISATION_UNIT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ORGANISATION_UNIT` (
	`ORGANISATION_UNIT_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `ORGANISATION_UNIT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `ORGANISATION_UNIT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: OTHER_P_AND_L. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`OTHER_P_AND_L` (
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`SAP_RECORD_NUMBER` varchar(18) NOT NULL,
	`SAP_TX_VERSION_NUMBER` varchar(3) NOT NULL,
	`SAP_TX_RECORD_TYPE` varchar(1) NOT NULL,
	`SAP_TX_FI_DOCUMENT_TYPE` varchar(2) NOT NULL,
	`SAP_TX_FI_DOCUMENT_NUMBER` varchar(50) default NULL,
	`SAP_TX_SPL_DOCUMENT_LINE_ITEM` varchar(50) default NULL,
	`SAP_TX_FI_DOCUMENT_LINE_ITEM` varchar(6) NOT NULL,
	`SAP_TX_SPL_DOCUMENT_NUMBER` varchar(50) NOT NULL,
	`SAP_TX_DATETIME` varchar(20) default NULL,
	`TRANSACTION_AMOUNT` decimal(30,15) NOT NULL,
	`LOCAL_CURRENCY_AMOUNT` decimal(30,15) default NULL,
	`P_AND_L_QTY` decimal(30,15) default NULL,
	`ADDITIONAL_P_AND_L_QTY` decimal(30,15) default NULL,
	`COST_CENTRE_CODE` varchar(20) default NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`BRAND_CODE` varchar(20) default NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`PERIOD_CODE` varchar(20) NOT NULL,
	`YEAR_DAY_ID` int(11) NOT NULL,
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`FINANCIAL_SCENARIO_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`PURCHASE_ORDER_CODE` varchar(20) default NULL,
	`INTERNAL_ORDER_CODE` varchar(20) default NULL,
	`FUNCTION_CODE` varchar(20) default NULL,
	`UNIT_OF_MEASURE_CODE` varchar(100) default NULL,
	`ALTERNATIVE_UNIT_OF_MEASURE_CODE` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `OTHER_P_AND_L_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `OTHER_P_AND_L_TO_BRAND_FK` ( `BRAND_CODE` ),
	KEY `OTHER_P_AND_L_TO_COST_CENTRE_FK` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `OTHER_P_AND_L_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `OTHER_P_AND_L_TO_FINANCIAL_SCENARIO_FK` ( `FINANCIAL_SCENARIO_CODE` ),
	KEY `OTHER_P_AND_L_TO_FUNCTION_FK` ( `FUNCTION_CODE` ),
	KEY `OTHER_P_AND_L_TO_INTERNAL_ORDER_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` ),
	KEY `OTHER_P_AND_L_TO_POSTING_ACCOUNT_FK` ( `POSTING_ACCOUNT_CODE` ),
	KEY `OTHER_P_AND_L_TO_PROFIT_CENTRE_FK` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `OTHER_P_AND_L_TO_PURCHASE_ORDER_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `PURCHASE_ORDER_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `OTHER_P_AND_L_TO_UNIT_OF_MEASURE_FK` ( `UNIT_OF_MEASURE_CODE` ),
	KEY `OTHER_P_AND_L_TO_UNIT_OF_MEASURE_FK_ALTERNATIVE` ( `ALTERNATIVE_UNIT_OF_MEASURE_CODE` ),
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE`, `SAP_RECORD_NUMBER` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PACK__EXT_PACK_LOCAL_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PACK__EXT_PACK_LOCAL_AE` (
	`EXT_PACK_LOCAL_ID` decimal(30,0) NOT NULL,
	`GLOBAL_PACK_CODE` varchar(50) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `PACK__EXT_PACK_LOCAL_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PACK__EXT_PACK_LOCAL_AE_TO_GLOBAL_PACK_FK` ( `GLOBAL_PACK_CODE` ),
	PRIMARY KEY  ( `EXT_PACK_LOCAL_ID`, `GLOBAL_PACK_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PACK_SIZE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PACK_SIZE` (
	`PACK_SIZE_CODE` varchar(20) NOT NULL,
	`PACK_SIZE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `PACK_SIZE_AK` ( `PACK_SIZE_DESCRIPTION` ),
	KEY `PACK_SIZE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `PACK_SIZE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PACK_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PACK_STATUS` (
	`PACK_STATUS_CODE` varchar(20) NOT NULL,
	`PACK_STATUS_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `PACK_STATUS_AK` ( `PACK_STATUS_DESCRIPTION` ),
	PRIMARY KEY  ( `PACK_STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PACK_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PACK_TYPE` (
	`PACK_TYPE_CODE` varchar(20) NOT NULL,
	`PACK_TYPE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `PACK_TYPE_AK` ( `PACK_TYPE_DESCRIPTION` ),
	KEY `PACK_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `PACK_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PERIOD. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PERIOD` (
	`PERIOD_CODE` varchar(20) NOT NULL,
	`PERIOD_DESCRIPTION` varchar(100) NOT NULL,
	`PERIOD_NUMBER` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `PERIOD_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `PERIOD_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PERIOD__YEAR_MONTH_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PERIOD__YEAR_MONTH_AE` (
	`PERIOD_CODE` varchar(20) NOT NULL,
	`YEAR_MONTH_ID` int(11) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `PERIOD__YEAR_MONTH_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	PRIMARY KEY  ( `PERIOD_CODE`, `YEAR_MONTH_ID` ),
	KEY `RefYEAR_MNTH1078` ( `YEAR_MONTH_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PHARMACEUTICAL_PRODUCT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PHARMACEUTICAL_PRODUCT` (
	`PHARMACEUTICAL_PRODUCT_CODE` varchar(20) NOT NULL,
	`SUB_BRAND_CODE` varchar(20) NOT NULL,
	`PHARMACEUTICAL_PRODUCT_NAME` varchar(100) default NULL,
	`PHARMACEUTICAL_PRODUCT_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `PHARMACEUTICAL_PRODUCT_AK` ( `PHARMACEUTICAL_PRODUCT_NAME` ),
	KEY `PHARMACEUTICAL_PRODUCT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PHARMACEUTICAL_PRODUCT_TO_SUB_BRAND_FK` ( `SUB_BRAND_CODE` ),
	PRIMARY KEY  ( `PHARMACEUTICAL_PRODUCT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PHASE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PHASE` (
	`PHASE_CODE` varchar(20) NOT NULL,
	`PHASE_DESCRIPTION` varchar(100) default NULL,
	`USER_STATUS_CODE` varchar(20) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	UNIQUE INDEX `PHASE_AK` ( `PHASE_DESCRIPTION` ),
	KEY `PHASE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PHASE_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `PHASE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: POSTING_ACCOUNT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`POSTING_ACCOUNT` (
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`IS_SCOA_ACCOUNT` tinyint(4) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`SECTION` varchar(20) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `POSTING_ACCOUNT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `POSTING_ACCOUNT_TO_STATUS_FK` ( `STATUS_CODE` ),
	PRIMARY KEY  ( `POSTING_ACCOUNT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: POSTING_ACCOUNT__WRAP_ACCOUNT_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`POSTING_ACCOUNT__WRAP_ACCOUNT_AE` (
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`WRAP_LEVEL_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `POSTING_ACCOUNT__WRAP_ACCOUNT_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `POSTING_ACCOUNT__WRAP_ACCOUNT_AE_TO_POSTING_ACCOUNT_FK` ( `POSTING_ACCOUNT_CODE` ),
	PRIMARY KEY  ( `WRAP_LEVEL_CODE`, `POSTING_ACCOUNT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: POSTING_ACCOUNT_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`POSTING_ACCOUNT_LANGUAGE` (
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`POSTING_ACCOUNT_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	KEY `POSTING_ACCOUNT_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `POSTING_ACCOUNT_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	PRIMARY KEY  ( `POSTING_ACCOUNT_CODE`, `LANGUAGE_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PRODUCT_FORMULATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PRODUCT_FORMULATION` (
	`PRODUCT_FORMULATION_CODE` varchar(20) NOT NULL,
	`PRODUCT_FORMULATION_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PRODUCT_FORMULATION_CODE` ),
	UNIQUE INDEX `PRODUCT_FORMULATION_AK` ( `PRODUCT_FORMULATION_DESCRIPTION` ),
	KEY `PRODUCT_FORMULATION_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROFIT_CENTRE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROFIT_CENTRE` (
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`PERSON_RESPONSIBLE` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`MANAGEMENT_UNIT_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	`ETL_RECORD_COMPLETE_MAP` varchar(50) NOT NULL,
	PRIMARY KEY  ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `PROFIT_CENTRE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROFIT_CENTRE_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` ),
	KEY `PROFIT_CENTRE_TO_MANAGEMENT_UNIT_FK` ( `MANAGEMENT_UNIT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE` (
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_GROUP_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE`, `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ),
	KEY `PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE_TO_PROFIT_CENTRE_GROUP_FK` ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROFIT_CENTRE_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROFIT_CENTRE_GROUP` (
	`PROFIT_CENTRE_GROUP_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_GROUP_LEVEL` int(11) NOT NULL,
	`PROFIT_CENTRE_GROUP_SEQUENCE` int(11) NOT NULL,
	`PARENT_PROFIT_CENTRE_GROUP_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	`ETL_RECORD_COMPLETE_MAP` varchar(50) NOT NULL,
	PRIMARY KEY  ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ),
	KEY `PROFIT_CENTRE_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROFIT_CENTRE_GROUP_TO_PROFIT_CENTRE_GROUP_FK` ( `PARENT_PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ),
	KEY `PROFIT_CENTRE_GROUP_TO_PROFIT_CENTRE_HIERARCHY_FK` ( `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROFIT_CENTRE_GROUP_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROFIT_CENTRE_GROUP_LANGUAGE` (
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_GROUP_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_GROUP_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `LANGUAGE_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ),
	KEY `PROFIT_CENTRE_GROUP_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROFIT_CENTRE_GROUP_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	KEY `PROFIT_CENTRE_GROUP_LANGUAGE_TO_PROFIT_CENTRE_GROUP_FK` ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROFIT_CENTRE_HIERARCHY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROFIT_CENTRE_HIERARCHY` (
	`PROFIT_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`IS_STANDARD_HIERARCHY_FLG` tinyint(4) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ),
	KEY `PROFIT_CENTRE_HIERARCHY_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROFIT_CENTRE_HIERARCHY_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROFIT_CENTRE_HIERARCHY_LANGUAGE` (
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_HIERARCHY_CODE` varchar(20) NOT NULL,
	`CONTROLLING_AREA_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_HIERARCHY_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `LANGUAGE_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ),
	KEY `PROFIT_CENTRE_HIERARCHY_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROFIT_CENTRE_HIERARCHY_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	KEY `PROFIT_CENTRE_HIERARCHY_LANGUAGE_TO_PROFIT_CENTRE_HIERARCHY_FK` ( `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROFIT_CENTRE_LANGUAGE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROFIT_CENTRE_LANGUAGE` (
	`LANGUAGE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_LANGUAGE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `LANGUAGE_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `PROFIT_CENTRE_LANGUAGE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROFIT_CENTRE_LANGUAGE_TO_LANGUAGE_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ),
	KEY `PROFIT_CENTRE_LANGUAGE_TO_PROFIT_CENTRE_FK` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT` (
	`PROJECT_CODE` varchar(20) NOT NULL,
	`PROJECT_DESCRIPTION` varchar(100) NOT NULL,
	`PROJECT_MANAGER` varchar(100) default NULL,
	`PROJECT_NAME` varchar(100) default NULL,
	`PROJECT_SPONSOR` varchar(100) default NULL,
	`PROJECT_COMMENTS` varchar(200) default NULL,
	`RDF_ID_CODE` varchar(20) default NULL,
	`PROJECT_TYPE_CODE` varchar(20) NOT NULL,
	`OPAL_PROJECT_TYPE_CODE` varchar(20) default NULL,
	`PROJECT_SOURCE_CODE` varchar(20) default NULL,
	`R_AND_D_FUNDING_OWNER_CODE` varchar(20) default NULL,
	`PROJECT_PLANNING_STATUS_CODE` varchar(20) default NULL,
	`PROJECT_PRIORITY_CODE` varchar(20) default NULL,
	`CURRENT_PHASE_CODE` varchar(20) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`COST_CENTRE_CODE` varchar(20) default NULL,
	`LEGAL_ENTITY_CODE` varchar(20) default NULL,
	`BRAND_CODE` varchar(20) default NULL,
	`PRIMARY_INDICATION_CODE` varchar(20) default NULL,
	`DISEASE_CODE` varchar(20) default NULL,
	`DISEASE_AREA_CODE` varchar(20) default NULL,
	`EXT_PRIMARY_INDICATION_CODE` varchar(20) default NULL,
	`EXT_DISEASE_CODE` varchar(20) default NULL,
	`EXT_DISEASE_AREA_CODE` varchar(20) default NULL,
	`PIVOT_PROJECT_LABEL` varchar(100) default NULL,
	`IMED_CODE` varchar(100) default NULL,
	`LATEST_OPAL_REFERENCE_LINE` varchar(200) default NULL,
	`PROJECT_ALIAS` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_CODE` ),
	KEY `PROJECT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROJECT_TO_BRAND_FK` ( `BRAND_CODE` ),
	KEY `PROJECT_TO_COST_CENTRE_FK` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `PROJECT_TO_DISEASE_AREA_FK` ( `DISEASE_AREA_CODE` ),
	KEY `PROJECT_TO_DISEASE_FK` ( `DISEASE_CODE` ),
	KEY `PROJECT_TO_EXT_DISEASE_AREA_FK` ( `EXT_DISEASE_AREA_CODE` ),
	KEY `PROJECT_TO_EXT_DISEASE_FK` ( `EXT_DISEASE_CODE` ),
	KEY `PROJECT_TO_EXT_INDICATION_FK_EXTPRIMARYINDICATIONCODE` ( `EXT_PRIMARY_INDICATION_CODE` ),
	KEY `PROJECT_TO_IMED_FK` ( `IMED_CODE` ),
	KEY `PROJECT_TO_INDICATION_FK_PRIMARY` ( `PRIMARY_INDICATION_CODE` ),
	KEY `PROJECT_TO_OPAL_PROJECT_TYPE_FK` ( `OPAL_PROJECT_TYPE_CODE` ),
	KEY `PROJECT_TO_PHASE_FK_CURRENT` ( `CURRENT_PHASE_CODE` ),
	KEY `PROJECT_TO_PROJECT_PLANNING_STATUS_FK` ( `PROJECT_PLANNING_STATUS_CODE` ),
	KEY `PROJECT_TO_PROJECT_PRIORITY_FK` ( `PROJECT_PRIORITY_CODE` ),
	KEY `PROJECT_TO_PROJECT_SOURCE_FK` ( `PROJECT_SOURCE_CODE` ),
	KEY `PROJECT_TO_PROJECT_TYPE_FK` ( `PROJECT_TYPE_CODE` ),
	KEY `PROJECT_TO_R_AND_D_FUNDING_OWNER_FK` ( `R_AND_D_FUNDING_OWNER_CODE` ),
	KEY `PROJECT_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT__EXT_INDICATION_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT__EXT_INDICATION_AE` (
	`PROJECT_CODE` varchar(20) NOT NULL,
	`EXT_INDICATION_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_CODE`, `EXT_INDICATION_CODE` ),
	KEY `PROJECT__EXT_INDICATION_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROJECT__EXT_INDICATION_AE_TO_EXT_INDICATION_FK` ( `EXT_INDICATION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT__INDICATION_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT__INDICATION_AE` (
	`PROJECT_CODE` varchar(20) NOT NULL,
	`INDICATION_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_CODE`, `INDICATION_CODE` ),
	KEY `PROJECT__INDICATION_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROJECT__INDICATION_AE_TO_INDICATION_FK` ( `INDICATION_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT__PROJECT_GROUP_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT__PROJECT_GROUP_AE` (
	`PROJECT_CODE` varchar(20) NOT NULL,
	`PROJECT_GROUP_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_CODE`, `PROJECT_GROUP_CODE` ),
	KEY `PROJECT__PROJECT_GROUP_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROJECT__PROJECT_GROUP_AE_TO_PROJECT_GROUP_FK` ( `PROJECT_GROUP_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT_ACTIVITY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT_ACTIVITY` (
	`PROJECT_ACTIVITY_CODE` varchar(50) NOT NULL,
	`PARENT_PROJECT_ACTIVITY_CODE` varchar(50) default NULL,
	`PROJECT_CODE` varchar(20) NOT NULL,
	`PROJECT_ACTIVITY_NAME` varchar(100) default NULL,
	`PROJECT_ACTIVITY_DESCRIPTION` varchar(100) NOT NULL,
	`PROJECT_PLANNING_STATUS_CODE` varchar(20) default NULL,
	`LOCAL_FUNDING_FLG` tinyint(4) default NULL,
	`PROJECT_ACTIVITY_TYPE` varchar(100) default NULL,
	`COST_CENTRE_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) default NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`SCIENCE_FUNDING_UNIT` varchar(20) default NULL,
	`PROJECT_TYPE_CODE` varchar(20) default NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_ACTIVITY_CODE` ),
	KEY `PROJECT_ACTIVITY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROJECT_ACTIVITY_TO_COST_CENTRE_FK` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `PROJECT_ACTIVITY_TO_PROJECT_ACTIVITY_FK_PARENT` ( `PARENT_PROJECT_ACTIVITY_CODE` ),
	KEY `PROJECT_ACTIVITY_TO_PROJECT_FK` ( `PROJECT_CODE` ),
	KEY `PROJECT_ACTIVITY_TO_PROJECT_PLANNING_STATUS_FK` ( `PROJECT_PLANNING_STATUS_CODE` ),
	KEY `PROJECT_ACTIVITY_TO_PROJECT_TYPE_FK` ( `PROJECT_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT_GROUP` (
	`PROJECT_GROUP_CODE` varchar(20) NOT NULL,
	`PROJECT_GROUP_DESCRIPTION` varchar(100) default NULL,
	`PROJECT_GROUP_TYPE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_GROUP_CODE` ),
	UNIQUE INDEX `PROJECT_GROUP_AK` ( `PROJECT_GROUP_DESCRIPTION` ),
	KEY `PROJECT_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT_PLANNING_STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT_PLANNING_STATUS` (
	`PROJECT_PLANNING_STATUS_CODE` varchar(20) NOT NULL,
	`PROJECT_PLANNING_STATUS_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_PLANNING_STATUS_CODE` ),
	UNIQUE INDEX `PROJECT_PLANNING_STATUS_AK` ( `PROJECT_PLANNING_STATUS_DESCRIPTION` ),
	KEY `PROJECT_PLANNING_STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT_PRIORITY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT_PRIORITY` (
	`PROJECT_PRIORITY_CODE` varchar(20) NOT NULL,
	`PROJECT_PRIORITY_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_PRIORITY_CODE` ),
	UNIQUE INDEX `PROJECT_PRIORITY_AK` ( `PROJECT_PRIORITY_DESCRIPTION` ),
	KEY `PROJECT_PRIORITY_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT_SOURCE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT_SOURCE` (
	`PROJECT_SOURCE_CODE` varchar(20) NOT NULL,
	`PROJECT_SOURCE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_SOURCE_CODE` ),
	UNIQUE INDEX `PROJECT_SOURCE_AK` ( `PROJECT_SOURCE_DESCRIPTION` ),
	KEY `PROJECT_SOURCE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT_TYPE` (
	`PROJECT_TYPE_CODE` varchar(20) NOT NULL,
	`PROJECT_TYPE_DESCRIPTION` varchar(100) default NULL,
	`PROJECT_TYPE_GROUP_CODE` varchar(20) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_TYPE_CODE` ),
	UNIQUE INDEX `PROJECT_TYPE_AK` ( `PROJECT_TYPE_DESCRIPTION` ),
	KEY `PROJECT_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROJECT_TYPE_TO_PROJECT_TYPE_GROUP_FK` ( `PROJECT_TYPE_GROUP_CODE` ),
	KEY `PROJECT_TYPE_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PROJECT_TYPE_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PROJECT_TYPE_GROUP` (
	`PROJECT_TYPE_GROUP_CODE` varchar(20) NOT NULL,
	`PROJECT_TYPE_GROUP_DESCRIPTION` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `PROJECT_TYPE_GROUP_CODE` ),
	UNIQUE INDEX `PROJECT_TYPE_GROUP_AK` ( `PROJECT_TYPE_GROUP_DESCRIPTION` ),
	KEY `PROJECT_TYPE_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PROJECT_TYPE_GROUP_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: PURCHASE_ORDER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`PURCHASE_ORDER` (
	`PURCHASE_ORDER_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`PURCHASE_ORDER_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE`, `PURCHASE_ORDER_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `PURCHASE_ORDER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `PURCHASE_ORDER_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: R_AND_D_FUNDING_OWNER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`R_AND_D_FUNDING_OWNER` (
	`R_AND_D_FUNDING_OWNER_CODE` varchar(20) NOT NULL,
	`R_AND_D_FUNDING_OWNER_DESCRIPTION` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `R_AND_D_FUNDING_OWNER_CODE` ),
	UNIQUE INDEX `R_AND_D_FUNDING_OWNER_AK` ( `R_AND_D_FUNDING_OWNER_DESCRIPTION` ),
	KEY `R_AND_D_FUNDING_OWNER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `R_AND_D_FUNDING_OWNER_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: REGION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`REGION` (
	`REGION_CODE` varchar(20) NOT NULL,
	`REGION_DESCRIPTION` varchar(100) default NULL,
	`CURRENCY_CODE` varchar(20) default NULL,
	`VALID_FROM_DATE` date default NULL,
	`CONTINENT_CODE` varchar(20) NOT NULL,
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `REGION_CODE` ),
	UNIQUE INDEX `REGION_AK` ( `REGION_DESCRIPTION`, `VALID_FROM_DATE` ),
	KEY `REGION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `REGION_TO_CONTINENT_FK` ( `CONTINENT_CODE` ),
	KEY `REGION_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `REGION_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: REPORTING_ACCOUNT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`REPORTING_ACCOUNT` (
	`REPORTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`IS_SAP_ACCOUNT_FLG` tinyint(4) NOT NULL,
	`REPORTING_ACCOUNT_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`WRAP_LEVEL_CODE` varchar(20) NOT NULL,
	`STATUS_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `REPORTING_ACCOUNT_CODE` ),
	KEY `REPORTING_ACCOUNT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `REPORTING_ACCOUNT_TO_STATUS_FK` ( `STATUS_CODE` ),
	KEY `REPORTING_ACCOUNT_TO_WRAP_ACCOUNT_FK` ( `WRAP_LEVEL_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: ROUTE_OF_ADMINISTRATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`ROUTE_OF_ADMINISTRATION` (
	`ROUTE_OF_ADMINISTRATION_CODE` varchar(20) NOT NULL,
	`ROUTE_OF_ADMINISTRATION_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `ROUTE_OF_ADMINISTRATION_CODE` ),
	KEY `ROUTE_OF_ADMINISTRATION_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SALES. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SALES` (
	`SAP_RECORD_NUMBER` varchar(50) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ADDITIONAL_QTY` decimal(30,15) default NULL,
	`SALES_QTY` decimal(30,15) default NULL,
	`LOCAL_CURRENCY_AMOUNT` decimal(30,15) NOT NULL,
	`TRANSACTION_AMOUNT` decimal(30,15) default NULL,
	`SAP_TX_VERSION_NUMBER` varchar(3) default NULL,
	`SAP_TX_RECORD_TYPE` varchar(1) default NULL,
	`SAP_TX_FI_DOCUMENT_TYPE` varchar(2) NOT NULL,
	`SAP_TX_FI_DOCUMENT_NUMBER` varchar(50) NOT NULL,
	`SAP_TX_SPL_DOCUMENT_NUMBER` varchar(50) default NULL,
	`SAP_TX_FI_DOCUMENT_LINE_ITEM` varchar(6) NOT NULL,
	`SAP_TX_SPL_DOCUMENT_LINE_ITEM` varchar(6) default NULL,
	`SAP_TX_DATETIME` varchar(20) NOT NULL,
	`CURRENCY_CODE` varchar(20) NOT NULL,
	`FINANCIAL_CUSTOMER_CODE` varchar(20) default NULL,
	`FINANCIAL_SCENARIO_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`LOCAL_PACK_CODE` varchar(20) default NULL,
	`PERIOD_CODE` varchar(20) NOT NULL,
	`POSTING_ACCOUNT_CODE` varchar(20) NOT NULL,
	`PROFIT_CENTRE_CODE` varchar(20) default NULL,
	`SALES_ORGANISATION_CODE` varchar(20) default NULL,
	`UNIT_OF_MEASURE_CODE` varchar(100) default NULL,
	`YEAR_DAY_ID` int(11) NOT NULL,
	`BRAND_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SAP_RECORD_NUMBER`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `SALES_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SALES_TO_BRAND_FK` ( `BRAND_CODE` ),
	KEY `SALES_TO_CURRENCY_FK` ( `CURRENCY_CODE` ),
	KEY `SALES_TO_FINANCIAL_CUSTOMER_FK` ( `FINANCIAL_CUSTOMER_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `SALES_TO_FINANCIAL_SCENARIO_FK` ( `FINANCIAL_SCENARIO_CODE` ),
	KEY `SALES_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` ),
	KEY `SALES_TO_LOCAL_PACK_FK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ),
	KEY `SALES_TO_POSTING_ACCOUNT_FK` ( `POSTING_ACCOUNT_CODE` ),
	KEY `SALES_TO_PROFIT_CENTRE_FK` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ),
	KEY `SALES_TO_SALES_ORGANISATION_FK` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `SALES_TO_UNIT_OF_MEASURE_FK` ( `UNIT_OF_MEASURE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SALES_CHANNEL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SALES_CHANNEL` (
	`SALES_CHANNEL_CODE` varchar(20) NOT NULL,
	`SALES_CHANNEL_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`SALES_CHANNEL_GROUP_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SALES_CHANNEL_CODE` ),
	KEY `SALES_CHANNEL_GROUP_CODE_TO_SALES_CHANNEL_GROUP_FK` ( `SALES_CHANNEL_GROUP_CODE` ),
	KEY `SALES_CHANNEL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SALES_CHANNEL_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SALES_CHANNEL_GROUP. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SALES_CHANNEL_GROUP` (
	`SALES_CHANNEL_GROUP_CODE` varchar(20) NOT NULL,
	`SALES_CHANNEL_GROUP_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`SALES_CHANNEL_WRAP_LEVEL_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SALES_CHANNEL_GROUP_CODE` ),
	KEY `SALES_CHANNEL_GROUP_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SALES_CHANNEL_GROUP_TO_SALES_CHANNEL_WRAP_LEVEL_FK` ( `SALES_CHANNEL_WRAP_LEVEL_CODE` ),
	KEY `SALES_CHANNEL_GROUP_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SALES_CHANNEL_WRAP_LEVEL. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SALES_CHANNEL_WRAP_LEVEL` (
	`SALES_CHANNEL_WRAP_LEVEL_CODE` varchar(20) NOT NULL,
	`SALES_CHANNEL_WRAP_DESC` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SALES_CHANNEL_WRAP_LEVEL_CODE` ),
	KEY `SALES_CHANNEL_WRAP_LEVEL_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SALES_CHANNEL_WRAP_LEVEL_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SALES_ORGANISATION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SALES_ORGANISATION` (
	`SALES_ORGANISATION_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`SALES_ORGANISATION_DESCRIPTION` varchar(100) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	`ETL_RECORD_COMPLETE_MAP` varchar(50) NOT NULL,
	PRIMARY KEY  ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `SALES_ORGANISATION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SALES_ORGANISATION_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` ),
	KEY `SALES_ORGANISATION_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SALES_ORGANISATION_LEGAL_ENTITY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SALES_ORGANISATION_LEGAL_ENTITY` (
	`SALES_ORGANISATION_CODE` varchar(20) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	PRIMARY KEY  ( `SALES_ORGANISATION_CODE`, `LEGAL_ENTITY_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `SALES_ORGANISATION_LEGAL_ENTITY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SALES_ORGANISATION_LEGAL_ENTITY_TO_SALES_ORGANISATION_FK` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SAP_COMPANY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SAP_COMPANY` (
	`SAP_COMPANY_CODE` varchar(20) NOT NULL,
	`SAP_COMPANY_DESCRIPTION` varchar(100) NOT NULL,
	`LEGAL_ENTITY_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SAP_COMPANY_CODE` ),
	KEY `SAP_COMPANY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SAP_COMPANY_TO_LEGAL_ENTITY_FK` ( `LEGAL_ENTITY_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SAP_SOURCE_SYSTEM. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SAP_SOURCE_SYSTEM` (
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`SYSTEM_CODE` varchar(20) NOT NULL,
	`CLIENT_CODE` varchar(20) default NULL,
	`SAP_SOURCE_SYSTEM_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SCHEMA_VERSION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SCHEMA_VERSION` (
	`MASTER` char(1) NOT NULL default 'L',
	`SCHEMA_NAME` varchar(64) NOT NULL,
	`VERSION` varchar(30) NOT NULL,
	`DESCRIPTION` varchar(800) NOT NULL,
	`SCRIPT` varchar(1000) NOT NULL,
	`SET_BY` varchar(100) NOT NULL,
	`SET_ON` timestamp NOT NULL,
	`SCHEMA_COUNT` int(11) default NULL,
	`SCHEMA_CHECKSUM` varchar(40) default NULL,
	`TABLE_COUNT` int(11) default NULL,
	`TABLE_CHECKSUM` varchar(40) default NULL,
	`COLUMN_COUNT` int(11) default NULL,
	`COLUMN_CHECKSUM` varchar(40) default NULL,
	`INDEX_COUNT` int(11) default NULL,
	`INDEX_CHECKSUM` varchar(40) default NULL,
	`INDEX_COLUMN_COUNT` int(11) default NULL,
	`INDEX_COLUMN_CHECKSUM` varchar(40) default NULL,
	`FK_COUNT` int(11) default NULL,
	`FK_CHECKSUM` varchar(40) default NULL,
	`FK_COLUMN_COUNT` int(11) default NULL,
	`FK_COLUMN_CHECKSUM` varchar(40) default NULL,
	`TRIGGER_COUNT` int(11) default NULL,
	`TRIGGER_CHECKSUM` varchar(40) default NULL,
	`VIEW_COUNT` int(11) default NULL,
	`VIEW_CHECKSUM` varchar(40) default NULL,
	`ROUTINE_COUNT` int(11) default NULL,
	`ROUTINE_CHECKSUM` varchar(40) default NULL,
	PRIMARY KEY  ( `MASTER`, `SCHEMA_NAME`, `VERSION` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SCORECARD_CATEGORY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SCORECARD_CATEGORY` (
	`SCORECARD_CATEGORY_CODE` varchar(100) NOT NULL,
	`SCORECARD_CATEGORY_LEVEL` int(11) NOT NULL,
	`SCORECARD_CATEGORY_DESCRIPTION` varchar(100) default NULL,
	`PARENT_SCORECARD_CATEGORY_CODE` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SCORECARD_CATEGORY_CODE` ),
	UNIQUE INDEX `SCORECARD_CATEGORY_AK` ( `SCORECARD_CATEGORY_DESCRIPTION` ),
	KEY `SCORECARD_CATEGORY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SCORECARD_CATEGORY_TO_SCORECARD_CATEGORY_FK_PARENT` ( `PARENT_SCORECARD_CATEGORY_CODE` ),
	KEY `SCORECARD_CATEGORY_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SECTION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SECTION` (
	`SECTION_CODE` varchar(20) NOT NULL,
	`SECTION_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SECTION_CODE` ),
	KEY `SECTION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SECTION_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SITE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SITE` (
	`SITE_CODE` varchar(20) NOT NULL,
	`SITE_DESCRIPTION` varchar(100) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`COUNTRY_SUB_DIVISION_CODE` varchar(20) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SITE_CODE` ),
	KEY `SITE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SITE_TO_COUNTRY_SUB_DIVISION_FK` ( `COUNTRY_SUB_DIVISION_CODE` ),
	KEY `SITE_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SITE__SITE_TYPE_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SITE__SITE_TYPE_AE` (
	`SITE_CODE` varchar(20) NOT NULL,
	`SITE_TYPE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SITE_CODE`, `SITE_TYPE_CODE` ),
	KEY `SITE__SITE_TYPE_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SITE__SITE_TYPE_AE_TO_SITE_TYPE_FK` ( `SITE_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SITE_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SITE_TYPE` (
	`SITE_TYPE_CODE` varchar(20) NOT NULL,
	`SITE_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SITE_TYPE_CODE` ),
	KEY `SITE_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: STATUS. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`STATUS` (
	`STATUS_CODE` varchar(20) NOT NULL,
	`STATUS_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `STATUS_CODE` ),
	KEY `STATUS_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: STRENGTH. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`STRENGTH` (
	`STRENGTH_CODE` varchar(20) NOT NULL,
	`STRENGTH_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `STRENGTH_CODE` ),
	KEY `STRENGTH_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SUB_ACTIVITY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SUB_ACTIVITY` (
	`SUB_ACTIVITY_CODE` varchar(20) NOT NULL,
	`ACTIVITY_TYPE_CODE` varchar(20) NOT NULL,
	`SUB_ACTIVITY_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SUB_ACTIVITY_CODE` ),
	KEY `SUB_ACTIVITY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SUB_ACTIVITY_TO_ACTIVITY_TYPE_FK` ( `ACTIVITY_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: SUB_BRAND. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`SUB_BRAND` (
	`SUB_BRAND_CODE` varchar(20) NOT NULL,
	`SUB_BRAND_DESCRIPTION` varchar(100) NOT NULL,
	`BRAND_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SUB_BRAND_CODE` ),
	KEY `SUB_BRAND_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `SUB_BRAND_TO_BRAND_FK` ( `BRAND_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: THERAPY_AREA. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`THERAPY_AREA` (
	`THERAPY_AREA_CODE` varchar(20) NOT NULL,
	`THERAPY_AREA_DESCRIPTION` varchar(100) default NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `THERAPY_AREA_CODE` ),
	UNIQUE INDEX `THERAPY_AREA_AK` ( `THERAPY_AREA_DESCRIPTION` ),
	KEY `THERAPY_AREA_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `THERAPY_AREA_TO_STATUS_FK` ( `STATUS_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: TRADEMARK. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`TRADEMARK` (
	`TRADEMARK_CODE` varchar(100) NOT NULL,
	`TRADEMARK_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `TRADEMARK_CODE` ),
	KEY `TRADEMARK_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: UNIT_OF_MEASURE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`UNIT_OF_MEASURE` (
	`UNIT_OF_MEASURE_CODE` varchar(100) NOT NULL,
	`UNIT_OF_MEASURE_DESCRIPTION` varchar(100) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `UNIT_OF_MEASURE_CODE` ),
	KEY `UNIT_OF_MEASURE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: VENDOR. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`VENDOR` (
	`VENDOR_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`ALTERNATIVE_PAYEE_FLG` tinyint(4) NOT NULL,
	`VENDOR_DESCRIPTION` varchar(100) NOT NULL,
	`ONE_TIME_ACCOUNT_FLG` tinyint(4) NOT NULL,
	`ALTERNATIVE_PAYEE_CODE` varchar(20) default NULL,
	`MASTER_VENDOR_CODE` varchar(20) default NULL,
	`REFERENCE_VENDOR_TYPE_CODE` varchar(20) default NULL,
	`VENDOR_TYPE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` ),
	KEY `VENDOR_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `VENDOR_TO_VENDOR_FK_ALTERNATIVEPAYEECODE` ( `SAP_SOURCE_SYSTEM_CODE`, `ALTERNATIVE_PAYEE_CODE` ),
	KEY `VENDOR_TO_VENDOR_FK_MASTER` ( `SAP_SOURCE_SYSTEM_CODE`, `MASTER_VENDOR_CODE` ),
	KEY `VENDOR_TO_VENDOR_TYPE_FK` ( `VENDOR_TYPE_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `VENDOR_TO_VENDOR_TYPE_FK_REFERENCE` ( `REFERENCE_VENDOR_TYPE_CODE`, `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: VENDOR_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`VENDOR_TYPE` (
	`VENDOR_TYPE_CODE` varchar(20) NOT NULL,
	`SAP_SOURCE_SYSTEM_CODE` varchar(20) NOT NULL,
	`VENDOR_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `VENDOR_TYPE_CODE`, `SAP_SOURCE_SYSTEM_CODE` ),
	KEY `VENDOR_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `VENDOR_TYPE_TO_SAP_SOURCE_SYSTEM_FK` ( `SAP_SOURCE_SYSTEM_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: VERSION. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`VERSION` (
	`VERSION_CODE` varchar(20) NOT NULL,
	`VERSION_DESCRIPTION` varchar(100) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`VERSION_TYPE_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `VERSION_CODE` ),
	KEY `VERSION_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `VERSION_TO_STATUS_FK` ( `STATUS_CODE` ),
	KEY `VERSION_TO_VERSION_TYPE_FK` ( `VERSION_TYPE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: VERSION_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`VERSION_TYPE` (
	`VERSION_TYPE_CODE` varchar(20) NOT NULL,
	`VERSION_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `VERSION_TYPE_CODE` ),
	KEY `VERSION_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: WORKFORCE_MEMBER. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`WORKFORCE_MEMBER` (
	`EMPLOYEE_PRID` varchar(20) NOT NULL,
	`FIRST_NAME` varchar(100) default NULL,
	`MIDDLE_NAME` varchar(100) default NULL,
	`LAST_NAME` varchar(100) default NULL,
	`JOB_ROLE_CODE` varchar(20) NOT NULL,
	`SITE_CODE` varchar(20) NOT NULL,
	`COMPENSATION_GRADE_CODE` varchar(20) default NULL,
	`PART_TIME_FLG` tinyint(4) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`PRODUCTIVE_FLG` tinyint(4) NOT NULL,
	`CONTINGENT_WORKER_TYPE_CODE` varchar(100) default NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`VARCHAR100` varchar(100) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	`EMPLOYEE_TYPE_CODE` varchar(100) default NULL,
	PRIMARY KEY  ( `EMPLOYEE_PRID` ),
	KEY `WORKFORCE_MEMBER_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `WORKFORCE_MEMBER_TO_COMPENSATION_GRADE_FK` ( `COMPENSATION_GRADE_CODE` ),
	KEY `WORKFORCE_MEMBER_TO_EMPLOYEE_TYPE_FK` ( `EMPLOYEE_TYPE_CODE` ),
	KEY `WORKFORCE_MEMBER_TO_JOB_ROLE_FK` ( `JOB_ROLE_CODE` ),
	KEY `WORKFORCE_MEMBER_TO_SITE_FK` ( `SITE_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: WRAP_ACCOUNT. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`WRAP_ACCOUNT` (
	`WRAP_LEVEL_CODE` varchar(20) NOT NULL,
	`WRAP_ACCOUNT_DESCRIPTION` varchar(100) NOT NULL,
	`WRAP_ACCOUNT_LEVEL` int(11) NOT NULL,
	`VALID_FROM_DATE` date NOT NULL default '9999-01-01',
	`VALID_TO_DATE` date NOT NULL default '9999-01-01',
	`PARENT_WRAP_LEVEL_CODE` varchar(20) default NULL,
	`ACCOUNT_HIERARCHY_CODE` varchar(20) NOT NULL,
	`STATUS_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `WRAP_LEVEL_CODE` ),
	KEY `WRAP_ACCOUNT_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `WRAP_ACCOUNT_TO_ACCOUNT_HIERARCHY_FK` ( `ACCOUNT_HIERARCHY_CODE` ),
	KEY `WRAP_ACCOUNT_TO_STATUS_FK` ( `STATUS_CODE` ),
	KEY `WRAP_ACCOUNT_TO_WRAP_ACCOUNT_FK_PARENT` ( `PARENT_WRAP_LEVEL_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE` (
	`WRAP_LEVEL_CODE` varchar(20) NOT NULL,
	`MOT_CODE` varchar(20) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `WRAP_LEVEL_CODE`, `MOT_CODE` ),
	KEY `WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE_TO_MOVEMENT_OVER_TIME_FK` ( `MOT_CODE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: WRAP_TYPE. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`WRAP_TYPE` (
	`WRAP_TYPE_CODE` varchar(20) NOT NULL,
	`WRAP_TYPE_DESCRIPTION` varchar(100) NOT NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `WRAP_TYPE_CODE` ),
	KEY `WRAP_TYPE_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: YEAR_DAY. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`YEAR_DAY` (
	`YEAR_DAY_ID` int(11) NOT NULL,
	`WORKING_DAY_CODE` varchar(20) default NULL,
	`YEAR_MONTH_ID` int(11) default NULL,
	`YEAR_WEEK_ID` int(11) default NULL,
	`DAY_CODE` varchar(20) default NULL,
	`BEGIN_DATE` date default NULL,
	`END_DATE` date default NULL,
	`TIMESPAN` int(11) default NULL,
	`DAY_OF_WEEK` int(11) default NULL,
	`DAY_OF_MONTH` int(11) default NULL,
	`DAY_OF_QTR` int(11) default NULL,
	`DAY_OF_YEAR` int(11) default NULL,
	`EPOCH` int(11) default NULL,
	`MONTH_END_FLG` tinyint(4) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `YEAR_DAY_ID` ),
	KEY `YEAR_DAY_IE1` ( `ETL_LAST_UPDATED_DATE` ),
	KEY `YEAR_DAY_TO_YEAR_MNTH_FK` ( `YEAR_MONTH_ID` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

/* Header line. Object: YEAR_MNTH. Script date: 11/05/2017 09:08:10. */
CREATE TABLE `CDR`.`YEAR_MNTH` (
	`YEAR_MONTH_ID` int(11) NOT NULL,
	`YEAR_QUARTER_ID` int(11) NOT NULL,
	`MONTH_CODE` varchar(20) NOT NULL,
	`BEGIN_DATE` date default NULL,
	`END_DATE` date default NULL,
	`TIMESPAN` int(11) default NULL,
	`EPOCH` int(11) default NULL,
	`ETL_IS_DELETED_FLG` tinyint(4) NOT NULL,
	`ETL_IS_SKELETON_FLG` tinyint(4) NOT NULL,
	`ETL_DATA_SOURCE_CODE` varchar(255) NOT NULL,
	`ETL_MD5_CHECKSUM` varchar(32) NOT NULL,
	`ETL_LAST_UPDATED_DATE` timestamp NOT NULL,
	PRIMARY KEY  ( `YEAR_MONTH_ID` ),
	UNIQUE INDEX `YEAR_MNTH_AK` ( `YEAR_QUARTER_ID`, `MONTH_CODE` ),
	KEY `YEAR_MNTH_IE1` ( `ETL_LAST_UPDATED_DATE` )
)
ENGINE = InnoDB
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin
ROW_FORMAT = Compact
;

-- Update foreign keys of ACCOUNT_HIERARCHY
ALTER TABLE `CDR`.`ACCOUNT_HIERARCHY` ADD CONSTRAINT `ACCOUNT_HIERARCHY_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of ACTIVITY_TYPE
ALTER TABLE `CDR`.`ACTIVITY_TYPE` ADD CONSTRAINT `ACTIVITY_TYPE_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of ALT_MANAGEMENT_HIER
ALTER TABLE `CDR`.`ALT_MANAGEMENT_HIER` ADD CONSTRAINT `ALT_MANAGEMENT_HIER_TO_ALT_MANAGEMENT_HIER_FK_PARENT`
	FOREIGN KEY ( `PARENT_ALT_MANAGEMENT_UNIT_CODE`, `ALT_HIER_CODE` ) REFERENCES `ALT_MANAGEMENT_HIER` ( `ALT_MANAGEMENT_UNIT_CODE`, `ALT_HIER_CODE` );

-- Update foreign keys of ALTERNATIVE_PRODUCT_IDENTIFICATION
ALTER TABLE `CDR`.`ALTERNATIVE_PRODUCT_IDENTIFICATION` ADD CONSTRAINT `ALTERNATIVE_PRODUCT_IDENT_TO_ALT_PROD_IDENTIFIER_TYPE_FK`
	FOREIGN KEY ( `ALT_PROD_IDENTIFIER_TYPE_CODE` ) REFERENCES `ALT_PROD_IDENTIFIER_TYPE` ( `ALT_PROD_IDENTIFIER_TYPE_CODE` );

ALTER TABLE `CDR`.`ALTERNATIVE_PRODUCT_IDENTIFICATION` ADD CONSTRAINT `ALTERNATIVE_PRODUCT_IDENTIFICATION_TO_GLOBAL_PACK_FK`
	FOREIGN KEY ( `GLOBAL_PACK_CODE` ) REFERENCES `GLOBAL_PACK` ( `GLOBAL_PACK_CODE` );

ALTER TABLE `CDR`.`ALTERNATIVE_PRODUCT_IDENTIFICATION` ADD CONSTRAINT `ALTERNATIVE_PRODUCT_IDENTIFICATION_TO_UNIT_OF_MEASURE_FK`
	FOREIGN KEY ( `UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of APO_LOCATION__LOCAL_PACK_AE
ALTER TABLE `CDR`.`APO_LOCATION__LOCAL_PACK_AE` ADD CONSTRAINT `APO_LOCATION__LOCAL_PACK_AE_TO_APO_LOCATION_FK`
	FOREIGN KEY ( `APO_LOCATION_CODE` ) REFERENCES `APO_LOCATION` ( `APO_LOCATION_CODE` );

-- Update foreign keys of APO_LOCATION__ORGANISATION_UNIT_AE
ALTER TABLE `CDR`.`APO_LOCATION__ORGANISATION_UNIT_AE` ADD CONSTRAINT `APO_LOCATION__ORGANISATION_UNIT_AE_TO_APO_LOCATION_FK`
	FOREIGN KEY ( `APO_LOCATION_CODE` ) REFERENCES `APO_LOCATION` ( `APO_LOCATION_CODE` );

ALTER TABLE `CDR`.`APO_LOCATION__ORGANISATION_UNIT_AE` ADD CONSTRAINT `APO_LOCATION__ORGANISATION_UNIT_AE_TO_ORGANISATION_UNIT_FK`
	FOREIGN KEY ( `ORGANISATION_UNIT_CODE` ) REFERENCES `ORGANISATION_UNIT` ( `ORGANISATION_UNIT_CODE` );

-- Update foreign keys of ASSET
ALTER TABLE `CDR`.`ASSET` ADD CONSTRAINT `ASSET_TO_ASSET_CATEGORY_FK`
	FOREIGN KEY ( `ASSET_CATEGORY_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `ASSET_CATEGORY` ( `ASSET_CATEGORY_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`ASSET` ADD CONSTRAINT `ASSET_TO_ASSET_CLASS_FK`
	FOREIGN KEY ( `ASSET_CLASS_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `ASSET_CLASS` ( `ASSET_CLASS_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`ASSET` ADD CONSTRAINT `ASSET_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`ASSET` ADD CONSTRAINT `ASSET_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`ASSET` ADD CONSTRAINT `ASSET_TO_PROJECT_ACTIVITY_FK`
	FOREIGN KEY ( `PROJECT_ACTIVITY_CODE` ) REFERENCES `PROJECT_ACTIVITY` ( `PROJECT_ACTIVITY_CODE` );

ALTER TABLE `CDR`.`ASSET` ADD CONSTRAINT `ASSET_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`ASSET` ADD CONSTRAINT `ASSET_TO_VENDOR_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` ) REFERENCES `VENDOR` ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` );

-- Update foreign keys of ASSET_CATEGORY
ALTER TABLE `CDR`.`ASSET_CATEGORY` ADD CONSTRAINT `ASSET_CATEGORY_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of ASSET_CLASS
ALTER TABLE `CDR`.`ASSET_CLASS` ADD CONSTRAINT `ASSET_CLASS_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of ASSET_CLASS_LANGUAGE
ALTER TABLE `CDR`.`ASSET_CLASS_LANGUAGE` ADD CONSTRAINT `ASSET_CLASS_LANGUAGE_TO_ASSET_CLASS_FK`
	FOREIGN KEY ( `ASSET_CLASS_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `ASSET_CLASS` ( `ASSET_CLASS_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`ASSET_CLASS_LANGUAGE` ADD CONSTRAINT `ASSET_CLASS_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

-- Update foreign keys of ASSET_LANGUAGE
ALTER TABLE `CDR`.`ASSET_LANGUAGE` ADD CONSTRAINT `ASSET_LANGUAGE_TO_ASSET_FK`
	FOREIGN KEY ( `ASSET_CODE`, `LEGAL_ENTITY_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `ASSET_SUBNUMBER` ) REFERENCES `ASSET` ( `ASSET_CODE`, `LEGAL_ENTITY_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `ASSET_SUBNUMBER` );

ALTER TABLE `CDR`.`ASSET_LANGUAGE` ADD CONSTRAINT `ASSET_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

-- Update foreign keys of ATC
ALTER TABLE `CDR`.`ATC` ADD CONSTRAINT `ATC_TO_ATC_FK_PARENT`
	FOREIGN KEY ( `PARENT_ATC_CODE` ) REFERENCES `ATC` ( `ATC_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of AZ_GROUP
ALTER TABLE `CDR`.`AZ_GROUP` ADD CONSTRAINT `AZ_GROUP_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`AZ_GROUP` ADD CONSTRAINT `AZ_GROUP_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of BRAND
ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_ACTIVE_INGREDIENT_FK_PRIMARY`
	FOREIGN KEY ( `PRIMARY_ACTIVE_INGREDIENT_CODE` ) REFERENCES `ACTIVE_INGREDIENT` ( `ACTIVE_INGREDIENT_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_ATC_FK`
	FOREIGN KEY ( `ATC_CODE` ) REFERENCES `ATC` ( `ATC_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_BRAND_SOURCE_FK`
	FOREIGN KEY ( `BRAND_SOURCE_CODE` ) REFERENCES `BRAND_SOURCE` ( `BRAND_SOURCE_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_DISEASE_AREA_FK`
	FOREIGN KEY ( `DISEASE_AREA_CODE` ) REFERENCES `DISEASE_AREA` ( `DISEASE_AREA_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_EXT_DISEASE_AREA_FK`
	FOREIGN KEY ( `EXT_DISEASE_AREA_CODE` ) REFERENCES `EXT_DISEASE_AREA` ( `EXT_DISEASE_AREA_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_EXT_INDICATION_FK_EXTPRIMARYINDICATIONCODE`
	FOREIGN KEY ( `EXT_PRIMARY_INDICATION_CODE` ) REFERENCES `EXT_INDICATION` ( `EXT_INDICATION_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_GLOBAL_LIFECYCLE_STATUS_FK`
	FOREIGN KEY ( `GLOBAL_LIFECYCLE_STATUS_CODE` ) REFERENCES `GLOBAL_LIFECYCLE_STATUS` ( `GLOBAL_LIFECYCLE_STATUS_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_GLOBAL_MARKET_STATUS_FK`
	FOREIGN KEY ( `GLOBAL_MARKET_STATUS_CODE` ) REFERENCES `GLOBAL_MARKET_STATUS` ( `GLOBAL_MARKET_STATUS_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_INDICATION_FK_PRIMARY`
	FOREIGN KEY ( `PRIMARY_INDICATION_CODE` ) REFERENCES `INDICATION` ( `INDICATION_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_MOLECULE_TYPE_FK`
	FOREIGN KEY ( `MOLECULE_TYPE_CODE` ) REFERENCES `MOLECULE_TYPE` ( `MOLECULE_TYPE_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_NFC_FK`
	FOREIGN KEY ( `NFC123_CODE` ) REFERENCES `NFC` ( `NFC123_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_ROUTE_OF_ADMINISTRATION_FK`
	FOREIGN KEY ( `ROUTE_OF_ADMINISTRATION_CODE` ) REFERENCES `ROUTE_OF_ADMINISTRATION` ( `ROUTE_OF_ADMINISTRATION_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_SCORECARD_CATEGORY_FK`
	FOREIGN KEY ( `SCORECARD_CATEGORY_CODE` ) REFERENCES `SCORECARD_CATEGORY` ( `SCORECARD_CATEGORY_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_THERAPY_AREA_FK`
	FOREIGN KEY ( `THERAPY_AREA_CODE` ) REFERENCES `THERAPY_AREA` ( `THERAPY_AREA_CODE` );

ALTER TABLE `CDR`.`BRAND` ADD CONSTRAINT `BRAND_TO_TRADEMARK_FK_PRIMARY`
	FOREIGN KEY ( `PRIMARY_TRADEMARK_CODE` ) REFERENCES `TRADEMARK` ( `TRADEMARK_CODE` );

-- Update foreign keys of BRAND__ACTIVE_INGREDIENT_AE
ALTER TABLE `CDR`.`BRAND__ACTIVE_INGREDIENT_AE` ADD CONSTRAINT `BRAND__ACTIVE_INGREDIENT_AE_TO_ACTIVE_INGREDIENT_FK`
	FOREIGN KEY ( `ACTIVE_INGREDIENT_CODE` ) REFERENCES `ACTIVE_INGREDIENT` ( `ACTIVE_INGREDIENT_CODE` );

ALTER TABLE `CDR`.`BRAND__ACTIVE_INGREDIENT_AE` ADD CONSTRAINT `BRAND__ACTIVE_INGREDIENT_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

-- Update foreign keys of BRAND__BRAND_GROUP_AE
ALTER TABLE `CDR`.`BRAND__BRAND_GROUP_AE` ADD CONSTRAINT `BRAND__BRAND_GROUP_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__BRAND_GROUP_AE` ADD CONSTRAINT `BRAND__BRAND_GROUP_AE_TO_BRAND_GROUP_FK`
	FOREIGN KEY ( `BRAND_GROUP_CODE` ) REFERENCES `BRAND_GROUP` ( `BRAND_GROUP_CODE` );

-- Update foreign keys of BRAND__COMPOUND_NUMBER_AE
ALTER TABLE `CDR`.`BRAND__COMPOUND_NUMBER_AE` ADD CONSTRAINT `BRAND__COMPOUND_NUMBER_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__COMPOUND_NUMBER_AE` ADD CONSTRAINT `BRAND__COMPOUND_NUMBER_AE_TO_COMPOUND_NUMBER_FK`
	FOREIGN KEY ( `COMPOUND_NUMBER` ) REFERENCES `COMPOUND_NUMBER` ( `COMPOUND_NUMBER` );

-- Update foreign keys of BRAND__EXT_INDICATION_AE
ALTER TABLE `CDR`.`BRAND__EXT_INDICATION_AE` ADD CONSTRAINT `BRAND__EXT_INDICATION_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__EXT_INDICATION_AE` ADD CONSTRAINT `BRAND__EXT_INDICATION_AE_TO_EXT_INDICATION_FK`
	FOREIGN KEY ( `EXT_INDICATION_CODE` ) REFERENCES `EXT_INDICATION` ( `EXT_INDICATION_CODE` );

-- Update foreign keys of BRAND__EXT_PRODUCT_INTL_AE
ALTER TABLE `CDR`.`BRAND__EXT_PRODUCT_INTL_AE` ADD CONSTRAINT `BRAND__EXT_PRODUCT_INTL_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__EXT_PRODUCT_INTL_AE` ADD CONSTRAINT `BRAND__EXT_PRODUCT_INTL_AE_TO_EXT_PRODUCT_INTL_FK`
	FOREIGN KEY ( `EXT_PRODUCT_INTL_ID` ) REFERENCES `EXT_PRODUCT_INTL` ( `EXT_PRODUCT_INTL_ID` );

-- Update foreign keys of BRAND__GENERIC_NAME_AE
ALTER TABLE `CDR`.`BRAND__GENERIC_NAME_AE` ADD CONSTRAINT `BRAND__GENERIC_NAME_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__GENERIC_NAME_AE` ADD CONSTRAINT `BRAND__GENERIC_NAME_AE_TO_GENERIC_NAME_FK`
	FOREIGN KEY ( `GENERIC_NAME_CODE` ) REFERENCES `GENERIC_NAME` ( `GENERIC_NAME_CODE` );

-- Update foreign keys of BRAND__INDICATION_AE
ALTER TABLE `CDR`.`BRAND__INDICATION_AE` ADD CONSTRAINT `BRAND__INDICATION_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__INDICATION_AE` ADD CONSTRAINT `BRAND__INDICATION_AE_TO_INDICATION_FK`
	FOREIGN KEY ( `INDICATION_CODE` ) REFERENCES `INDICATION` ( `INDICATION_CODE` );

-- Update foreign keys of BRAND__LEGAL_ENTITY_AE
ALTER TABLE `CDR`.`BRAND__LEGAL_ENTITY_AE` ADD CONSTRAINT `BRAND__LEGAL_ENTITY_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__LEGAL_ENTITY_AE` ADD CONSTRAINT `BRAND__LEGAL_ENTITY_AE_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` );

-- Update foreign keys of BRAND__PRODUCT_FORMULATION_AE
ALTER TABLE `CDR`.`BRAND__PRODUCT_FORMULATION_AE` ADD CONSTRAINT `BRAND__PRODUCT_FORMULATION_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__PRODUCT_FORMULATION_AE` ADD CONSTRAINT `BRAND__PRODUCT_FORMULATION_AE_TO_PRODUCT_FORMULATION_FK`
	FOREIGN KEY ( `PRODUCT_FORMULATION_CODE` ) REFERENCES `PRODUCT_FORMULATION` ( `PRODUCT_FORMULATION_CODE` );

-- Update foreign keys of BRAND__TRADEMARK_AE
ALTER TABLE `CDR`.`BRAND__TRADEMARK_AE` ADD CONSTRAINT `BRAND__TRADEMARK_AE_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND__TRADEMARK_AE` ADD CONSTRAINT `BRAND__TRADEMARK_AE_TO_TRADEMARK_FK`
	FOREIGN KEY ( `TRADEMARK_CODE` ) REFERENCES `TRADEMARK` ( `TRADEMARK_CODE` );

-- Update foreign keys of BRAND_COMMERCIAL_PARTNER_REL
ALTER TABLE `CDR`.`BRAND_COMMERCIAL_PARTNER_REL` ADD CONSTRAINT `BRAND_COMMERCIAL_PARTNER_REL_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`BRAND_COMMERCIAL_PARTNER_REL` ADD CONSTRAINT `BRAND_COMMERCIAL_PARTNER_REL_TO_COMMERCIAL_PARTNER_FK`
	FOREIGN KEY ( `COMMERCIAL_PARTNER_CODE` ) REFERENCES `COMMERCIAL_PARTNER` ( `COMMERCIAL_PARTNER_CODE` );

ALTER TABLE `CDR`.`BRAND_COMMERCIAL_PARTNER_REL` ADD CONSTRAINT `BRAND_COMMERCIAL_PARTNER_REL_TO_COMMERCIAL_PARTNER_REL_FK`
	FOREIGN KEY ( `COMMERCIAL_PARTNER_REL_CODE` ) REFERENCES `COMMERCIAL_PARTNER_REL` ( `COMMERCIAL_PARTNER_REL_CODE` );

-- Update foreign keys of COMMERCIAL_PARTNER
ALTER TABLE `CDR`.`COMMERCIAL_PARTNER` ADD CONSTRAINT `COMMERCIAL_PARTNER_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of COMMERCIAL_PARTNER_REL
ALTER TABLE `CDR`.`COMMERCIAL_PARTNER_REL` ADD CONSTRAINT `COMMERCIAL_PARTNER_REL_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of CONSOLIDATED_COSTS
ALTER TABLE `CDR`.`CONSOLIDATED_COSTS` ADD CONSTRAINT `CONSOLIDATED_COSTS_TO_COUNTRY_FK`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_COSTS` ADD CONSTRAINT `CONSOLIDATED_COSTS_TO_CURRENCY_FK_SELLING`
	FOREIGN KEY ( `SELLING_CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_COSTS` ADD CONSTRAINT `CONSOLIDATED_COSTS_TO_MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING_FK`
	FOREIGN KEY ( `SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE`, `MAIN_LOCAL_CODE` ) REFERENCES `MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING` ( `ORG_UNIT_CODE`, `GEO_AREA_CODE`, `MAIN_LOCAL_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_COSTS` ADD CONSTRAINT `CONSOLIDATED_COSTS_TO_ORG_UNIT_MANAGEMENT_UNIT_MAPPING_FK_SELL`
	FOREIGN KEY ( `SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE` ) REFERENCES `ORG_UNIT_MANAGEMENT_UNIT_MAPPING` ( `ORG_UNIT_CODE`, `GEO_AREA_CODE` );

-- Update foreign keys of CONSOLIDATED_ROYALTIES
ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_COUNTRY_FK`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_CURRENCY_FK_CCRSELLING`
	FOREIGN KEY ( `CCR_SELLING_CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_CURRENCY_FK_LICENSEE`
	FOREIGN KEY ( `LICENSEE_CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_CURRENCY_FK_SELLING`
	FOREIGN KEY ( `SELLING_CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_MAIN_LOCAL_CODE_LOCAL_PACK_MAP_FK_BUY`
	FOREIGN KEY ( `SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE`, `MAIN_LOCAL_CODE` ) REFERENCES `MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING` ( `ORG_UNIT_CODE`, `GEO_AREA_CODE`, `MAIN_LOCAL_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_ORG_UNIT_MANAGEMENT_UNIT_MAP_FK_BUY`
	FOREIGN KEY ( `SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE` ) REFERENCES `ORG_UNIT_MANAGEMENT_UNIT_MAPPING` ( `ORG_UNIT_CODE`, `GEO_AREA_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_ORG_UNIT_MANAGEMENT_UNIT_MAP_FK_CCR`
	FOREIGN KEY ( `CCR_SELLING_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE` ) REFERENCES `ORG_UNIT_MANAGEMENT_UNIT_MAPPING` ( `ORG_UNIT_CODE`, `GEO_AREA_CODE` );

ALTER TABLE `CDR`.`CONSOLIDATED_ROYALTIES` ADD CONSTRAINT `CONSOLIDATED_ROYALTIES_TO_ORG_UNIT_MANAGEMENT_UNIT_MAP_FK_LICENS`
	FOREIGN KEY ( `LICENSEE_ORG_UNIT_CODE`, `BUYING_GEO_AREA_CODE` ) REFERENCES `ORG_UNIT_MANAGEMENT_UNIT_MAPPING` ( `ORG_UNIT_CODE`, `GEO_AREA_CODE` );

-- Update foreign keys of CONTINENT
ALTER TABLE `CDR`.`CONTINENT` ADD CONSTRAINT `CONTINENT_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of COST_CENTRE
ALTER TABLE `CDR`.`COST_CENTRE` ADD CONSTRAINT `COST_CENTRE_TO_DEPARTMENT_FK`
	FOREIGN KEY ( `DEPARTMENT_CODE` ) REFERENCES `DEPARTMENT` ( `DEPARTMENT_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE` ADD CONSTRAINT `COST_CENTRE_TO_FUNCTION_FK`
	FOREIGN KEY ( `FUNCTION_CODE` ) REFERENCES `FUNCTION` ( `FUNCTION_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE` ADD CONSTRAINT `COST_CENTRE_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE` ADD CONSTRAINT `COST_CENTRE_TO_PROFIT_CENTRE_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PROFIT_CENTRE` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

-- Update foreign keys of COST_CENTRE__COST_CENTRE_GROUP_AE
ALTER TABLE `CDR`.`COST_CENTRE__COST_CENTRE_GROUP_AE` ADD CONSTRAINT `COST_CENTRE__COST_CENTRE_GROUP_AE_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE__COST_CENTRE_GROUP_AE` ADD CONSTRAINT `COST_CENTRE__COST_CENTRE_GROUP_AE_TO_COST_CENTRE_GROUP_FK`
	FOREIGN KEY ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` ) REFERENCES `COST_CENTRE_GROUP` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` );

-- Update foreign keys of COST_CENTRE_GROUP
ALTER TABLE `CDR`.`COST_CENTRE_GROUP` ADD CONSTRAINT `COST_CENTRE_GROUP_TO_COST_CENTRE_GROUP_FK_PARENT`
	FOREIGN KEY ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `PARENT_COST_CENTRE_GROUP_CODE` ) REFERENCES `COST_CENTRE_GROUP` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE_GROUP` ADD CONSTRAINT `COST_CENTRE_GROUP_TO_COST_CENTRE_HIERARCHY_FK`
	FOREIGN KEY ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ) REFERENCES `COST_CENTRE_HIERARCHY` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` );

-- Update foreign keys of COST_CENTRE_GROUP_LANGUAGE
ALTER TABLE `CDR`.`COST_CENTRE_GROUP_LANGUAGE` ADD CONSTRAINT `COST_CENTRE_GROUP_LANGUAGE_TO_COST_CENTRE_GROUP_FK`
	FOREIGN KEY ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` ) REFERENCES `COST_CENTRE_GROUP` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE`, `COST_CENTRE_GROUP_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE_GROUP_LANGUAGE` ADD CONSTRAINT `COST_CENTRE_GROUP_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

-- Update foreign keys of COST_CENTRE_HIERARCHY_LANGUAGE
ALTER TABLE `CDR`.`COST_CENTRE_HIERARCHY_LANGUAGE` ADD CONSTRAINT `COST_CENTRE_HIERARCHY_LANGUAGE_TO_COST_CENTRE_HIERARCHY_FK`
	FOREIGN KEY ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ) REFERENCES `COST_CENTRE_HIERARCHY` ( `COST_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE_HIERARCHY_LANGUAGE` ADD CONSTRAINT `COST_CENTRE_HIERARCHY_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

-- Update foreign keys of COST_CENTRE_LANGUAGE
ALTER TABLE `CDR`.`COST_CENTRE_LANGUAGE` ADD CONSTRAINT `COST_CENTRE_LANGUAGE_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`COST_CENTRE_LANGUAGE` ADD CONSTRAINT `COST_CENTRE_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

-- Update foreign keys of COST_OF_GOODS_SOLD
ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_ACTIVITY_TYPE_FK`
	FOREIGN KEY ( `ACTIVITY_TYPE_CODE` ) REFERENCES `ACTIVITY_TYPE` ( `ACTIVITY_TYPE_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_FINANCIAL_SCENARIO_FK`
	FOREIGN KEY ( `FINANCIAL_SCENARIO_CODE` ) REFERENCES `FINANCIAL_SCENARIO` ( `FINANCIAL_SCENARIO_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_FUNCTION_FK`
	FOREIGN KEY ( `FUNCTION_CODE` ) REFERENCES `FUNCTION` ( `FUNCTION_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_INTERNAL_ORDER_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` ) REFERENCES `INTERNAL_ORDER` ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_LOCAL_PACK_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ) REFERENCES `LOCAL_PACK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_PROFIT_CENTRE_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PROFIT_CENTRE` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_UNIT_OF_MEASURE_FK`
	FOREIGN KEY ( `UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

ALTER TABLE `CDR`.`COST_OF_GOODS_SOLD` ADD CONSTRAINT `COST_OF_GOODS_SOLD_TO_UNIT_OF_MEASURE_FK_ALTERNATIVE`
	FOREIGN KEY ( `ALTERNATIVE_UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of COUNTRY
ALTER TABLE `CDR`.`COUNTRY` ADD CONSTRAINT `COUNTRY_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`COUNTRY` ADD CONSTRAINT `COUNTRY_TO_REGION_FK`
	FOREIGN KEY ( `REGION_CODE` ) REFERENCES `REGION` ( `REGION_CODE` );

ALTER TABLE `CDR`.`COUNTRY` ADD CONSTRAINT `COUNTRY_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of COUNTRY__EXT_COUNTRY_AE
ALTER TABLE `CDR`.`COUNTRY__EXT_COUNTRY_AE` ADD CONSTRAINT `COUNTRY__EXT_COUNTRY_AE_TO_COUNTRY_FK`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` );

ALTER TABLE `CDR`.`COUNTRY__EXT_COUNTRY_AE` ADD CONSTRAINT `COUNTRY__EXT_COUNTRY_AE_TO_EXT_COUNTRY_FK`
	FOREIGN KEY ( `EXT_COUNTRY_CODE` ) REFERENCES `EXT_COUNTRY` ( `EXT_COUNTRY_CODE` );

-- Update foreign keys of COUNTRY_SUB_DIVISION
ALTER TABLE `CDR`.`COUNTRY_SUB_DIVISION` ADD CONSTRAINT `COUNTRY_SUB_DIVISION_TO_COUNTRY_FK`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` );

ALTER TABLE `CDR`.`COUNTRY_SUB_DIVISION` ADD CONSTRAINT `COUNTRY_SUB_DIVISION_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of CURRENCY
ALTER TABLE `CDR`.`CURRENCY` ADD CONSTRAINT `CURRENCY_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of DEPARTMENT
ALTER TABLE `CDR`.`DEPARTMENT` ADD CONSTRAINT `DEPARTMENT_TO_DEPARTMENT_GROUP_FK`
	FOREIGN KEY ( `DEPARTMENT_GROUP_CODE` ) REFERENCES `DEPARTMENT_GROUP` ( `DEPARTMENT_GROUP_CODE` );

ALTER TABLE `CDR`.`DEPARTMENT` ADD CONSTRAINT `DEPARTMENT_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of DEPARTMENT_GROUP
ALTER TABLE `CDR`.`DEPARTMENT_GROUP` ADD CONSTRAINT `DEPARTMENT_GROUP_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of DISEASE
ALTER TABLE `CDR`.`DISEASE` ADD CONSTRAINT `DISEASE_TO_DISEASE_AREA_FK`
	FOREIGN KEY ( `DISEASE_AREA_CODE` ) REFERENCES `DISEASE_AREA` ( `DISEASE_AREA_CODE` );

-- Update foreign keys of DISTRIBUTION_CHANNEL
ALTER TABLE `CDR`.`DISTRIBUTION_CHANNEL` ADD CONSTRAINT `DISTRIBUTION_CHANNEL_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of DIVISION
ALTER TABLE `CDR`.`DIVISION` ADD CONSTRAINT `DIVISION_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of EXCHANGE_RATE
ALTER TABLE `CDR`.`EXCHANGE_RATE` ADD CONSTRAINT `EXCHANGE_RATE_TO_CURRENCY_FK_BASE`
	FOREIGN KEY ( `BASE_CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`EXCHANGE_RATE` ADD CONSTRAINT `EXCHANGE_RATE_TO_CURRENCY_FK_TARGET`
	FOREIGN KEY ( `TARGET_CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`EXCHANGE_RATE` ADD CONSTRAINT `EXCHANGE_RATE_TO_EXCHANGE_RATE_TYPE_FK`
	FOREIGN KEY ( `EXCHANGE_RATE_TYPE_CODE` ) REFERENCES `EXCHANGE_RATE_TYPE` ( `EXCHANGE_RATE_TYPE_CODE` );

ALTER TABLE `CDR`.`EXCHANGE_RATE` ADD CONSTRAINT `EXCHANGE_RATE_TO_YEAR_MNTH_FK`
	FOREIGN KEY ( `YEAR_MONTH_ID` ) REFERENCES `YEAR_MNTH` ( `YEAR_MONTH_ID` );

-- Update foreign keys of EXCHANGE_RATE_TYPE
ALTER TABLE `CDR`.`EXCHANGE_RATE_TYPE` ADD CONSTRAINT `EXCHANGE_RATE_TYPE_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of EXT_ATC
ALTER TABLE `CDR`.`EXT_ATC` ADD CONSTRAINT `EXT_ATC_TO_EXT_ATC_FK_ATCPARENTCODE`
	FOREIGN KEY ( `ATC_PARENT_CODE` ) REFERENCES `EXT_ATC` ( `EXT_ATC_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of EXT_CORPORATION_MANUFACTURER
ALTER TABLE `CDR`.`EXT_CORPORATION_MANUFACTURER` ADD CONSTRAINT `EXT_CORPORATION_MANUFACTURER_TO_EXT_CORPORATION_FK`
	FOREIGN KEY ( `EXT_CORPORATION_ID` ) REFERENCES `EXT_CORPORATION` ( `EXT_CORPORATION_ID` );

ALTER TABLE `CDR`.`EXT_CORPORATION_MANUFACTURER` ADD CONSTRAINT `EXT_CORPORATION_MANUFACTURER_TO_EXT_MANUFACTURER_FK`
	FOREIGN KEY ( `EXT_MANUFACTURER_ID` ) REFERENCES `EXT_MANUFACTURER` ( `EXT_MANUFACTURER_ID` );

ALTER TABLE `CDR`.`EXT_CORPORATION_MANUFACTURER` ADD CONSTRAINT `EXT_CORPORATION_MANUFACTURER_TO_EXT_PANEL_FK`
	FOREIGN KEY ( `EXT_PANEL_CODE` ) REFERENCES `EXT_PANEL` ( `EXT_PANEL_CODE` );

-- Update foreign keys of EXT_CURRENCY
ALTER TABLE `CDR`.`EXT_CURRENCY` ADD CONSTRAINT `EXT_CURRENCY_TO_EXT_CURRENCY_FK_GROUP`
	FOREIGN KEY ( `GROUP_EXT_CURRENCY_ID` ) REFERENCES `EXT_CURRENCY` ( `EXT_CURRENCY_ID` );

-- Update foreign keys of EXT_DISEASE
ALTER TABLE `CDR`.`EXT_DISEASE` ADD CONSTRAINT `EXT_DISEASE_TO_EXT_DISEASE_AREA_FK`
	FOREIGN KEY ( `EXT_DISEASE_AREA_CODE` ) REFERENCES `EXT_DISEASE_AREA` ( `EXT_DISEASE_AREA_CODE` );

-- Update foreign keys of EXT_EXCHANGE_RATE
ALTER TABLE `CDR`.`EXT_EXCHANGE_RATE` ADD CONSTRAINT `EXT_EXCHANGE_RATE_TO_EXT_CURRENCY_FK`
	FOREIGN KEY ( `EXT_CURRENCY_ID` ) REFERENCES `EXT_CURRENCY` ( `EXT_CURRENCY_ID` );

ALTER TABLE `CDR`.`EXT_EXCHANGE_RATE` ADD CONSTRAINT `EXT_EXCHANGE_RATE_TO_EXT_PERIOD_TYPE_FK`
	FOREIGN KEY ( `EXT_PERIOD_TYPE_CODE` ) REFERENCES `EXT_PERIOD_TYPE` ( `EXT_PERIOD_TYPE_CODE` );

-- Update foreign keys of EXT_GLOBAL_MARKET_MAPPING
ALTER TABLE `CDR`.`EXT_GLOBAL_MARKET_MAPPING` ADD CONSTRAINT `EXT_GLOBAL_MARKET_MAPPING_TO_EXT_GLOBAL_MARKET_DEFINITION_GRP_FK`
	FOREIGN KEY ( `EXT_GLOBAL_MARKET_DEFINITION_GROUP_ID` ) REFERENCES `EXT_GLOBAL_MARKET_DEFINITION_GROUP` ( `EXT_GLOBAL_MARKET_DEFINITION_GROUP_ID` );

ALTER TABLE `CDR`.`EXT_GLOBAL_MARKET_MAPPING` ADD CONSTRAINT `EXT_GLOBAL_MARKET_MAPPING_TO_EXT_PANEL_PRODUCT_PACK_FK`
	FOREIGN KEY ( `EXT_PANEL_PRODUCT_PACK_ID` ) REFERENCES `EXT_PANEL_PRODUCT_PACK` ( `EXT_PANEL_PRODUCT_PACK_ID` );

ALTER TABLE `CDR`.`EXT_GLOBAL_MARKET_MAPPING` ADD CONSTRAINT `EXT_GLOBAL_MARKET_MAPPING_TO_EXT_PERIOD_TYPE_FK`
	FOREIGN KEY ( `EXT_PERIOD_TYPE_CODE` ) REFERENCES `EXT_PERIOD_TYPE` ( `EXT_PERIOD_TYPE_CODE` );

-- Update foreign keys of EXT_INDICATION
ALTER TABLE `CDR`.`EXT_INDICATION` ADD CONSTRAINT `EXT_INDICATION_TO_EXT_CLASS_TREE_TYPE_FK`
	FOREIGN KEY ( `EXT_CLASS_TREE_TYPE_CODE` ) REFERENCES `EXT_CLASS_TREE_TYPE` ( `EXT_CLASS_TREE_TYPE_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_INDICATION` ADD CONSTRAINT `EXT_INDICATION_TO_EXT_DISEASE_FK`
	FOREIGN KEY ( `EXT_DISEASE_CODE` ) REFERENCES `EXT_DISEASE` ( `EXT_DISEASE_CODE` );

ALTER TABLE `CDR`.`EXT_INDICATION` ADD CONSTRAINT `EXT_INDICATION_TO_EXT_INDICATION_FK_PARENT`
	FOREIGN KEY ( `PARENT_EXT_INDICATION_CODE` ) REFERENCES `EXT_INDICATION` ( `EXT_INDICATION_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_INDICATION` ADD CONSTRAINT `EXT_INDICATION_TO_EXT_TERMINAL_NODE_TYPE_FK`
	FOREIGN KEY ( `EXT_TERMINAL_NODE_TYPE_CODE` ) REFERENCES `EXT_TERMINAL_NODE_TYPE` ( `EXT_TERMINAL_NODE_TYPE_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of EXT_MOLECULE__MOLECULE_LIST_AE
ALTER TABLE `CDR`.`EXT_MOLECULE__MOLECULE_LIST_AE` ADD CONSTRAINT `EXT_MOLECULE__MOLECULE_LIST_AE_TO_EXT_MOLECULE_FK`
	FOREIGN KEY ( `EXT_MOLECULE_ID` ) REFERENCES `EXT_MOLECULE` ( `EXT_MOLECULE_ID` );

ALTER TABLE `CDR`.`EXT_MOLECULE__MOLECULE_LIST_AE` ADD CONSTRAINT `EXT_MOLECULE__MOLECULE_LIST_AE_TO_EXT_MOLECULE_LIST_FK`
	FOREIGN KEY ( `EXT_MOLECULE_LIST_ID` ) REFERENCES `EXT_MOLECULE_LIST` ( `EXT_MOLECULE_LIST_ID` );

-- Update foreign keys of EXT_MOLECULE_LIST
ALTER TABLE `CDR`.`EXT_MOLECULE_LIST` ADD CONSTRAINT `EXT_MOLECULE_LIST_TO_EXT_MOLECULE_TYPE_FK`
	FOREIGN KEY ( `EXT_MOLECULE_TYPE_ID` ) REFERENCES `EXT_MOLECULE_TYPE` ( `EXT_MOLECULE_TYPE_ID` );

-- Update foreign keys of EXT_NFC
ALTER TABLE `CDR`.`EXT_NFC` ADD CONSTRAINT `EXT_NFC_TO_EXT_NFC1_FK`
	FOREIGN KEY ( `EXT_NFC1_CODE` ) REFERENCES `EXT_NFC1` ( `EXT_NFC1_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_NFC` ADD CONSTRAINT `EXT_NFC_TO_EXT_NFC12_FK`
	FOREIGN KEY ( `EXT_NFC12_CODE` ) REFERENCES `EXT_NFC12` ( `EXT_NFC12_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_NFC` ADD CONSTRAINT `EXT_NFC_TO_EXT_NFC2_FK`
	FOREIGN KEY ( `EXT_NFC2_CODE` ) REFERENCES `EXT_NFC2` ( `EXT_NFC2_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_NFC` ADD CONSTRAINT `EXT_NFC_TO_EXT_NFC23_FK`
	FOREIGN KEY ( `EXT_NFC23_CODE` ) REFERENCES `EXT_NFC23` ( `EXT_NFC23_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of EXT_PACK_LOCAL
ALTER TABLE `CDR`.`EXT_PACK_LOCAL` ADD CONSTRAINT `EXT_PACK_LOCAL_TO_EXT_GENERIC_NON_GENERIC_FK`
	FOREIGN KEY ( `EXT_GENERIC_NON_GENERIC_ID` ) REFERENCES `EXT_GENERIC_NON_GENERIC` ( `EXT_GENERIC_NON_GENERIC_ID` );

-- Update foreign keys of EXT_PACK_NFC_MOLECULE_LIST
ALTER TABLE `CDR`.`EXT_PACK_NFC_MOLECULE_LIST` ADD CONSTRAINT `EXT_PACK_NFC_MOLECULE_LIST_TO_EXT_MOLECULE_LIST_FK`
	FOREIGN KEY ( `EXT_MOLECULE_LIST_ID` ) REFERENCES `EXT_MOLECULE_LIST` ( `EXT_MOLECULE_LIST_ID` );

ALTER TABLE `CDR`.`EXT_PACK_NFC_MOLECULE_LIST` ADD CONSTRAINT `EXT_PACK_NFC_MOLECULE_LIST_TO_EXT_PACK_INTL_FK`
	FOREIGN KEY ( `EXT_PACK_INTL_ID` ) REFERENCES `EXT_PACK_INTL` ( `EXT_PACK_INTL_ID` );

ALTER TABLE `CDR`.`EXT_PACK_NFC_MOLECULE_LIST` ADD CONSTRAINT `EXT_PACK_NFC_MOLECULE_LIST_TO_EXT_PACK_LOCAL_FK`
	FOREIGN KEY ( `EXT_PACK_LOCAL_ID` ) REFERENCES `EXT_PACK_LOCAL` ( `EXT_PACK_LOCAL_ID` );

ALTER TABLE `CDR`.`EXT_PACK_NFC_MOLECULE_LIST` ADD CONSTRAINT `EXT_PACK_NFC_MOLECULE_LIST_TO_NFC_FK`
	FOREIGN KEY ( `NFC123_CODE` ) REFERENCES `NFC` ( `NFC123_CODE` );

-- Update foreign keys of EXT_PACK_PRICE
ALTER TABLE `CDR`.`EXT_PACK_PRICE` ADD CONSTRAINT `EXT_PACK_PRICE_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`EXT_PACK_PRICE` ADD CONSTRAINT `EXT_PACK_PRICE_TO_EXT_PACK_LOCAL_FK`
	FOREIGN KEY ( `EXT_PACK_LOCAL_ID` ) REFERENCES `EXT_PACK_LOCAL` ( `EXT_PACK_LOCAL_ID` );

ALTER TABLE `CDR`.`EXT_PACK_PRICE` ADD CONSTRAINT `EXT_PACK_PRICE_TO_EXT_PACK_PRICE_SOURCE_FK`
	FOREIGN KEY ( `EXT_PACK_PRICE_SOURCE_CODE` ) REFERENCES `EXT_PACK_PRICE_SOURCE` ( `EXT_PACK_PRICE_SOURCE_CODE` );

ALTER TABLE `CDR`.`EXT_PACK_PRICE` ADD CONSTRAINT `EXT_PACK_PRICE_TO_EXT_PANEL_PRODUCT_PACK_FK`
	FOREIGN KEY ( `EXT_PANEL_PRODUCT_PACK_ID` ) REFERENCES `EXT_PANEL_PRODUCT_PACK` ( `EXT_PANEL_PRODUCT_PACK_ID` );

ALTER TABLE `CDR`.`EXT_PACK_PRICE` ADD CONSTRAINT `EXT_PACK_PRICE_TO_EXT_PERIOD_TYPE_FK`
	FOREIGN KEY ( `EXT_PERIOD_TYPE_CODE` ) REFERENCES `EXT_PERIOD_TYPE` ( `EXT_PERIOD_TYPE_CODE` );

-- Update foreign keys of EXT_PANEL
ALTER TABLE `CDR`.`EXT_PANEL` ADD CONSTRAINT `EXT_PANEL_TO_EXT_COUNTRY_FK`
	FOREIGN KEY ( `EXT_COUNTRY_CODE` ) REFERENCES `EXT_COUNTRY` ( `EXT_COUNTRY_CODE` );

ALTER TABLE `CDR`.`EXT_PANEL` ADD CONSTRAINT `EXT_PANEL_TO_EXT_CURRENCY_FK`
	FOREIGN KEY ( `EXT_CURRENCY_ID` ) REFERENCES `EXT_CURRENCY` ( `EXT_CURRENCY_ID` );

ALTER TABLE `CDR`.`EXT_PANEL` ADD CONSTRAINT `FK_EXT_PANEL_TO_EXT_PANEL_STATUS`
	FOREIGN KEY ( `EXT_PANEL_STATUS_CODE` ) REFERENCES `EXT_PANEL_STATUS` ( `EXT_PANEL_STATUS_CODE` );

-- Update foreign keys of EXT_PANEL_PRODUCT_PACK
ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_CORPORATION_MANUFACTURER_FK`
	FOREIGN KEY ( `EXT_CORPORATION_MANUFACTURER_ID` ) REFERENCES `EXT_CORPORATION_MANUFACTURER` ( `EXT_CORPORATION_MANUFACTURER_ID` );

ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_INTL_PRESCRIPTION_STATUS_FK`
	FOREIGN KEY ( `EXT_INTL_PRESCRIPTION_STATUS_ID` ) REFERENCES `EXT_INTL_PRESCRIPTION_STATUS` ( `EXT_INTL_PRESCRIPTION_STATUS_ID` );

ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_INTL_REIMBURSEMENT_FK`
	FOREIGN KEY ( `EXT_INTL_REIMBURSEMENT_ID` ) REFERENCES `EXT_INTL_REIMBURSEMENT` ( `EXT_INTL_REIMBURSEMENT_ID` );

ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_LOCAL_REIMBURSEMENT_FK`
	FOREIGN KEY ( `EXT_LOCAL_REIMBURSEMENT_ID` ) REFERENCES `EXT_LOCAL_REIMBURSEMENT` ( `EXT_LOCAL_REIMBURSEMENT_ID` );

ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_PACK_NFC_MOLECULE_LIST_FK`
	FOREIGN KEY ( `EXT_PACK_NFC_MOLECULE_LIST_ID` ) REFERENCES `EXT_PACK_NFC_MOLECULE_LIST` ( `EXT_PACK_NFC_MOLECULE_LIST_ID` );

ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_PANEL_FK`
	FOREIGN KEY ( `EXT_PANEL_CODE` ) REFERENCES `EXT_PANEL` ( `EXT_PANEL_CODE` );

ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_PRODUCT_INTL_FK`
	FOREIGN KEY ( `EXT_PRODUCT_INTL_ID` ) REFERENCES `EXT_PRODUCT_INTL` ( `EXT_PRODUCT_INTL_ID` );

ALTER TABLE `CDR`.`EXT_PANEL_PRODUCT_PACK` ADD CONSTRAINT `EXT_PANEL_PRODUCT_PACK_TO_EXT_PRODUCT_LOCAL_ATC_FK`
	FOREIGN KEY ( `EXT_PRODUCT_LOCAL_ATC_ID` ) REFERENCES `EXT_PRODUCT_LOCAL_ATC` ( `EXT_PRODUCT_LOCAL_ATC_ID` );

-- Update foreign keys of EXT_PRESCRIPTION
ALTER TABLE `CDR`.`EXT_PRESCRIPTION` ADD CONSTRAINT `EXT_PRESCRIPTION_TO_COUNTRY_FK`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_PRESCRIPTION` ADD CONSTRAINT `EXT_PRESCRIPTION_TO_EXT_PERIOD_TYPE_FK`
	FOREIGN KEY ( `EXT_PERIOD_TYPE_CODE` ) REFERENCES `EXT_PERIOD_TYPE` ( `EXT_PERIOD_TYPE_CODE` );

ALTER TABLE `CDR`.`EXT_PRESCRIPTION` ADD CONSTRAINT `EXT_PRESCRIPTION_TO_EXT_PRESCRIPTION_MARKET_DEFINITION_FK`
	FOREIGN KEY ( `EXT_PRESCRIPTION_MARKET_DEFINITION_ID` ) REFERENCES `EXT_PRESCRIPTION_MARKET_DEFINITION` ( `EXT_PRESCRIPTION_MARKET_DEFINITION_ID` );

ALTER TABLE `CDR`.`EXT_PRESCRIPTION` ADD CONSTRAINT `EXT_PRESCRIPTION_TO_EXT_PRESCRIPTION_MOLECULE_LIST_FK`
	FOREIGN KEY ( `EXT_PRESCRIPTION_MOLECULE_LIST_ID` ) REFERENCES `EXT_PRESCRIPTION_MOLECULE_LIST` ( `EXT_PRESCRIPTION_MOLECULE_LIST_ID` );

ALTER TABLE `CDR`.`EXT_PRESCRIPTION` ADD CONSTRAINT `EXT_PRESCRIPTION_TO_EXT_PRESCRIPTION_PRODUCT_INTL_FK`
	FOREIGN KEY ( `EXT_PRESCRIPTION_PRODUCT_INTL_ID` ) REFERENCES `EXT_PRESCRIPTION_PRODUCT_INTL` ( `EXT_PRESCRIPTION_PRODUCT_INTL_ID` );

-- Update foreign keys of EXT_PRESCRIPTION_MOLECULE_LIST
ALTER TABLE `CDR`.`EXT_PRESCRIPTION_MOLECULE_LIST` ADD CONSTRAINT `EXT_PRESCRIPTION_MOLECULE_LIST_TO_EXT_MOLECULE_TYPE_FK`
	FOREIGN KEY ( `EXT_MOLECULE_TYPE_ID` ) REFERENCES `EXT_MOLECULE_TYPE` ( `EXT_MOLECULE_TYPE_ID` );

-- Update foreign keys of EXT_PRESCRIPTION_MOLECULE_LIST__EXT_MOLECULE_AE
ALTER TABLE `CDR`.`EXT_PRESCRIPTION_MOLECULE_LIST__EXT_MOLECULE_AE` ADD CONSTRAINT `EXT_PRESC_MOL_LIST__EXT_MOL_AE_TO_EXT_PRESC_MOL_LIST_FK`
	FOREIGN KEY ( `EXT_PRESCRIPTION_MOLECULE_LIST_ID` ) REFERENCES `EXT_PRESCRIPTION_MOLECULE_LIST` ( `EXT_PRESCRIPTION_MOLECULE_LIST_ID` );

ALTER TABLE `CDR`.`EXT_PRESCRIPTION_MOLECULE_LIST__EXT_MOLECULE_AE` ADD CONSTRAINT `EXT_PRESCRIPTION_MOLECULE_LIST_EXT_MOLECUL_AE_TO_EXT_MOLECULE_FK`
	FOREIGN KEY ( `EXT_MOLECULE_ID` ) REFERENCES `EXT_MOLECULE` ( `EXT_MOLECULE_ID` );

-- Update foreign keys of EXT_PRODUCT_LOCAL
ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_TO_EXT_GENERIC_PRODUCT_CLASS_FK`
	FOREIGN KEY ( `EXT_GENERIC_PRODUCT_CLASS_ID` ) REFERENCES `EXT_GENERIC_PRODUCT_CLASS` ( `EXT_GENERIC_PRODUCT_CLASS_ID` );

ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_TO_EXT_LAUNCH_STATUS_FK`
	FOREIGN KEY ( `EXT_LAUNCH_STATUS_ID` ) REFERENCES `EXT_LAUNCH_STATUS` ( `EXT_LAUNCH_STATUS_ID` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_TO_EXT_MARKET_TYPE_FK`
	FOREIGN KEY ( `EXT_MARKET_TYPE_ID` ) REFERENCES `EXT_MARKET_TYPE` ( `EXT_MARKET_TYPE_ID` );

ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_TO_EXT_NAME_TYPE_FK`
	FOREIGN KEY ( `EXT_NAME_TYPE_ID` ) REFERENCES `EXT_NAME_TYPE` ( `EXT_NAME_TYPE_ID` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_TO_EXT_PRE_POST_PROTECTION_EXPIRY_FK`
	FOREIGN KEY ( `EXT_PRE_POST_PROTECTION_EXPIRY_ID` ) REFERENCES `EXT_PRE_POST_PROTECTION_EXPIRY` ( `EXT_PRE_POST_PROTECTION_EXPIRY_ID` );

ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_TO_EXT_PRESCRIPTION_BOUND_FK`
	FOREIGN KEY ( `EXT_PRESCRIPTION_BOUND_ID` ) REFERENCES `EXT_PRESCRIPTION_BOUND` ( `EXT_PRESCRIPTION_BOUND_ID` );

ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_TO_EXT_PROTECTION_STATUS_FK`
	FOREIGN KEY ( `EXT_PROTECTION_STATUS_ID` ) REFERENCES `EXT_PROTECTION_STATUS` ( `EXT_PROTECTION_STATUS_ID` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of EXT_PRODUCT_LOCAL__EXT_ATC_AE
ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL__EXT_ATC_AE` ADD CONSTRAINT `EXT_PRODUCT_LOCAL__EXT_ATC_AE_TO_EXT_ATC_FK`
	FOREIGN KEY ( `EXT_ATC_CODE` ) REFERENCES `EXT_ATC` ( `EXT_ATC_CODE` );

-- Update foreign keys of EXT_PRODUCT_LOCAL_ATC
ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL_ATC` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_ATC_TO_ATC_FK`
	FOREIGN KEY ( `ATC_CODE` ) REFERENCES `ATC` ( `ATC_CODE` );

ALTER TABLE `CDR`.`EXT_PRODUCT_LOCAL_ATC` ADD CONSTRAINT `EXT_PRODUCT_LOCAL_ATC_TO_EXT_PRODUCT_LOCAL_FK`
	FOREIGN KEY ( `EXT_PRODUCT_LOCAL_ID` ) REFERENCES `EXT_PRODUCT_LOCAL` ( `EXT_PRODUCT_LOCAL_ID` );

-- Update foreign keys of EXT_REGION
ALTER TABLE `CDR`.`EXT_REGION` ADD CONSTRAINT `EXT_REGION_TO_EXT_REGION_FK`
	FOREIGN KEY ( `PARENT_EXT_REGION_NAME`, `PARENT_EXT_PERIOD_TYPE_CODE` ) REFERENCES `EXT_REGION` ( `REGION_NAME`, `EXT_PERIOD_TYPE_CODE` );

-- Update foreign keys of EXT_SALES
ALTER TABLE `CDR`.`EXT_SALES` ADD CONSTRAINT `EXT_SALES_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`EXT_SALES` ADD CONSTRAINT `EXT_SALES_TO_EXT_PANEL_PRODUCT_PACK_FK`
	FOREIGN KEY ( `EXT_PANEL_PRODUCT_PACK_ID` ) REFERENCES `EXT_PANEL_PRODUCT_PACK` ( `EXT_PANEL_PRODUCT_PACK_ID` );

ALTER TABLE `CDR`.`EXT_SALES` ADD CONSTRAINT `EXT_SALES_TO_EXT_PERIOD_TYPE_FK`
	FOREIGN KEY ( `EXT_PERIOD_TYPE_CODE` ) REFERENCES `EXT_PERIOD_TYPE` ( `EXT_PERIOD_TYPE_CODE` );

-- Update foreign keys of FINANCIAL_CUSTOMER
ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER` ADD CONSTRAINT `FINANCIAL_CUSTOMER_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of FINANCIAL_CUSTOMER_GROUP
ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP` ADD CONSTRAINT `FINANCIAL_CUSTOMER_GROUP_TO_FINANCIAL_CUSTOMER_TYPE_FK`
	FOREIGN KEY ( `FINANCIAL_CUSTOMER_TYPE_CODE` ) REFERENCES `FINANCIAL_CUSTOMER_TYPE` ( `FINANCIAL_CUSTOMER_TYPE_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP` ADD CONSTRAINT `FINANCIAL_CUSTOMER_GROUP_TO_SALES_CHANNEL_FK`
	FOREIGN KEY ( `SALES_CHANNEL_CODE` ) REFERENCES `SALES_CHANNEL` ( `SALES_CHANNEL_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP` ADD CONSTRAINT `FINANCIAL_CUSTOMER_GROUP_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of FINANCIAL_CUSTOMER_GROUP__FINANCIAL_CUSTOMER_GROUP_REPORTING_AE
ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP__FINANCIAL_CUSTOMER_GROUP_REPORTING_AE` ADD CONSTRAINT `FIN_CUST_GROUP__FIN_CUST_GROUP_REP_AE_TO_FIN_CUST_GROUP_REP_FK`
	FOREIGN KEY ( `FINANCIAL_CUSTOMER_GROUP_REPORTING_CODE` ) REFERENCES `FINANCIAL_CUSTOMER_GROUP_REPORTING` ( `FINANCIAL_CUSTOMER_GROUP_REPORTING_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_GROUP__FINANCIAL_CUSTOMER_GROUP_REPORTING_AE` ADD CONSTRAINT `FIN_CUST_GROUP__FIN_CUST_GROUP_REP_AE_TO_FINANCIAL_CUST_GROUP_FK`
	FOREIGN KEY ( `FINANCIAL_CUSTOMER_GROUP_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `FINANCIAL_CUSTOMER_GROUP` ( `FINANCIAL_CUSTOMER_GROUP_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of FINANCIAL_CUSTOMER_MASTER
ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER` ADD CONSTRAINT `FINANCIAL_CUSTOMER_MASTER_TO_DISTRIBUTION_CHANNEL_FK`
	FOREIGN KEY ( `DISTRIBUTION_CHANNEL_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `DISTRIBUTION_CHANNEL` ( `DISTRIBUTION_CHANNEL_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER` ADD CONSTRAINT `FINANCIAL_CUSTOMER_MASTER_TO_DIVISION_FK`
	FOREIGN KEY ( `DIVISION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `DIVISION` ( `DIVISION_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER` ADD CONSTRAINT `FINANCIAL_CUSTOMER_MASTER_TO_FINANCIAL_CUSTOMER_FK`
	FOREIGN KEY ( `FINANCIAL_CUSTOMER_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `FINANCIAL_CUSTOMER` ( `FINANCIAL_CUSTOMER_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER` ADD CONSTRAINT `FINANCIAL_CUSTOMER_MASTER_TO_FINANCIAL_CUSTOMER_GROUP_FK`
	FOREIGN KEY ( `FINANCIAL_CUSTOMER_GROUP_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `FINANCIAL_CUSTOMER_GROUP` ( `FINANCIAL_CUSTOMER_GROUP_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER` ADD CONSTRAINT `FINANCIAL_CUSTOMER_MASTER_TO_SALES_ORGANISATION_FK`
	FOREIGN KEY ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SALES_ORGANISATION` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER` ADD CONSTRAINT `FINANCIAL_CUSTOMER_MASTER_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE
ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE` ADD CONSTRAINT `FIN_CUST_MASTER__SALES_CHANNEL_AE_TO_FIN_CUST_MASTER_FK`
	FOREIGN KEY ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `FINANCIAL_CUSTOMER_CODE`, `DIVISION_CODE`, `DISTRIBUTION_CHANNEL_CODE`, `FINANCIAL_CUSTOMER_GROUP_CODE` ) REFERENCES `FINANCIAL_CUSTOMER_MASTER` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE`, `FINANCIAL_CUSTOMER_CODE`, `DIVISION_CODE`, `DISTRIBUTION_CHANNEL_CODE`, `FINANCIAL_CUSTOMER_GROUP_CODE` );

ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE` ADD CONSTRAINT `FINANCIAL_CUSTOMER_MASTER__SALES_CHANNEL_AE_TO_SALES_CHANNEL_FK`
	FOREIGN KEY ( `SALES_CHANNEL_CODE` ) REFERENCES `SALES_CHANNEL` ( `SALES_CHANNEL_CODE` );

-- Update foreign keys of FINANCIAL_CUSTOMER_TYPE
ALTER TABLE `CDR`.`FINANCIAL_CUSTOMER_TYPE` ADD CONSTRAINT `FINANCIAL_CUSTOMER_TYPE_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of FINANCIAL_SCENARIO
ALTER TABLE `CDR`.`FINANCIAL_SCENARIO` ADD CONSTRAINT `FINANCIAL_SCENARIO_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of FUNCTION
ALTER TABLE `CDR`.`FUNCTION` ADD CONSTRAINT `FUNCTION_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of GLOBAL_PACK
ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_MATERIAL_TYPE_FK`
	FOREIGN KEY ( `MATERIAL_TYPE_CODE` ) REFERENCES `MATERIAL_TYPE` ( `MATERIAL_TYPE_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_PACK_SIZE_FK_PRIMARY`
	FOREIGN KEY ( `PRIMARY_PACK_SIZE_CODE` ) REFERENCES `PACK_SIZE` ( `PACK_SIZE_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_PACK_SIZE_FK_SECONDARY`
	FOREIGN KEY ( `SECONDARY_PACK_SIZE_CODE` ) REFERENCES `PACK_SIZE` ( `PACK_SIZE_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_PACK_STATUS_FK`
	FOREIGN KEY ( `PACK_STATUS_CODE` ) REFERENCES `PACK_STATUS` ( `PACK_STATUS_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_PACK_TYPE_FK`
	FOREIGN KEY ( `PACK_TYPE_CODE` ) REFERENCES `PACK_TYPE` ( `PACK_TYPE_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_PHARMACEUTICAL_PRODUCT_FK`
	FOREIGN KEY ( `PHARMACEUTICAL_PRODUCT_CODE` ) REFERENCES `PHARMACEUTICAL_PRODUCT` ( `PHARMACEUTICAL_PRODUCT_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_STRENGTH_FK`
	FOREIGN KEY ( `STRENGTH_CODE` ) REFERENCES `STRENGTH` ( `STRENGTH_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK` ADD CONSTRAINT `GLOBAL_PACK_TO_UNIT_OF_MEASURE_FK_BASE`
	FOREIGN KEY ( `BASE_UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of GLOBAL_PACK__COUNTRY_AE
ALTER TABLE `CDR`.`GLOBAL_PACK__COUNTRY_AE` ADD CONSTRAINT `RefCOUNTRY1209`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` );

-- Update foreign keys of GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE
ALTER TABLE `CDR`.`GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE` ADD CONSTRAINT `GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_TO_GLOBAL_PACK_FK`
	FOREIGN KEY ( `GLOBAL_PACK_CODE` ) REFERENCES `GLOBAL_PACK` ( `GLOBAL_PACK_CODE` );

ALTER TABLE `CDR`.`GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE` ADD CONSTRAINT `GLOBAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_TO_UNIT_OF_MEASURE_FK`
	FOREIGN KEY ( `UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of INDICATION
ALTER TABLE `CDR`.`INDICATION` ADD CONSTRAINT `INDICATION_TO_DISEASE_FK`
	FOREIGN KEY ( `DISEASE_CODE` ) REFERENCES `DISEASE` ( `DISEASE_CODE` );

-- Update foreign keys of INTERNAL_ORDER
ALTER TABLE `CDR`.`INTERNAL_ORDER` ADD CONSTRAINT `INTERNAL_ORDER_TO_ACTIVITY_TYPE_FK`
	FOREIGN KEY ( `ACTIVITY_TYPE_CODE` ) REFERENCES `ACTIVITY_TYPE` ( `ACTIVITY_TYPE_CODE` );

ALTER TABLE `CDR`.`INTERNAL_ORDER` ADD CONSTRAINT `INTERNAL_ORDER_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`INTERNAL_ORDER` ADD CONSTRAINT `INTERNAL_ORDER_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of JOB_FAMILY
ALTER TABLE `CDR`.`JOB_FAMILY` ADD CONSTRAINT `JOB_FAMILY_TO_JOB_FAMILY_GROUP_FK`
	FOREIGN KEY ( `JOB_FAMILY_GROUP_ID` ) REFERENCES `JOB_FAMILY_GROUP` ( `JOB_FAMILY_GROUP_ID` );

-- Update foreign keys of JOB_ROLE
ALTER TABLE `CDR`.`JOB_ROLE` ADD CONSTRAINT `JOB_ROLE_TO_JOB_FAMILY_FK`
	FOREIGN KEY ( `JOB_FAMILY_ID` ) REFERENCES `JOB_FAMILY` ( `JOB_FAMILY_ID` );

-- Update foreign keys of LANGUAGE
ALTER TABLE `CDR`.`LANGUAGE` ADD CONSTRAINT `LANGUAGE_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of LEGAL_ENTITY
ALTER TABLE `CDR`.`LEGAL_ENTITY` ADD CONSTRAINT `LEGAL_ENTITY_TO_AZ_GROUP_FK`
	FOREIGN KEY ( `AZ_GROUP_CODE` ) REFERENCES `AZ_GROUP` ( `AZ_GROUP_CODE` );

ALTER TABLE `CDR`.`LEGAL_ENTITY` ADD CONSTRAINT `LEGAL_ENTITY_TO_COUNTRY_FK`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` );

ALTER TABLE `CDR`.`LEGAL_ENTITY` ADD CONSTRAINT `LEGAL_ENTITY_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`LEGAL_ENTITY` ADD CONSTRAINT `LEGAL_ENTITY_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of LOCAL_PACK
ALTER TABLE `CDR`.`LOCAL_PACK` ADD CONSTRAINT `LOCAL_PACK_TO_GLOBAL_PACK_FK`
	FOREIGN KEY ( `GLOBAL_PACK_CODE` ) REFERENCES `GLOBAL_PACK` ( `GLOBAL_PACK_CODE` );

ALTER TABLE `CDR`.`LOCAL_PACK` ADD CONSTRAINT `LOCAL_PACK_TO_MATERIAL_TYPE_FK`
	FOREIGN KEY ( `MATERIAL_TYPE_CODE` ) REFERENCES `MATERIAL_TYPE` ( `MATERIAL_TYPE_CODE` );

ALTER TABLE `CDR`.`LOCAL_PACK` ADD CONSTRAINT `LOCAL_PACK_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`LOCAL_PACK` ADD CONSTRAINT `LOCAL_PACK_TO_UNIT_OF_MEASURE_FK_BASE`
	FOREIGN KEY ( `BASE_UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of LOCAL_PACK__SALES_ORGANISATION_AE
ALTER TABLE `CDR`.`LOCAL_PACK__SALES_ORGANISATION_AE` ADD CONSTRAINT `LOCAL_PACK__SALES_ORGANISATION_AE_TO_LOCAL_PACK_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ) REFERENCES `LOCAL_PACK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` );

ALTER TABLE `CDR`.`LOCAL_PACK__SALES_ORGANISATION_AE` ADD CONSTRAINT `LOCAL_PACK__SALES_ORGANISATION_AE_TO_SALES_ORGANISATION_FK`
	FOREIGN KEY ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SALES_ORGANISATION` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE
ALTER TABLE `CDR`.`LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE` ADD CONSTRAINT `LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_TO_LOCAL_PACK_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ) REFERENCES `LOCAL_PACK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` );

ALTER TABLE `CDR`.`LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE` ADD CONSTRAINT `LOCAL_PACK_ALTERNATIVE_UNIT_OF_MEASURE_TO_UNIT_OF_MEASURE_FK`
	FOREIGN KEY ( `UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of LOCAL_PACK_APO_LOCATION
ALTER TABLE `CDR`.`LOCAL_PACK_APO_LOCATION` ADD CONSTRAINT `LOCAL_PACK_APO_LOCATION_TO_APO_LOCATION_FK`
	FOREIGN KEY ( `APO_LOCATION_CODE` ) REFERENCES `APO_LOCATION` ( `APO_LOCATION_CODE` );

ALTER TABLE `CDR`.`LOCAL_PACK_APO_LOCATION` ADD CONSTRAINT `LOCAL_PACK_APO_LOCATION_TO_LOCAL_PACK_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ) REFERENCES `LOCAL_PACK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` );

ALTER TABLE `CDR`.`LOCAL_PACK_APO_LOCATION` ADD CONSTRAINT `LOCAL_PACK_APO_LOCATION_TO_PACK_STATUS_FK`
	FOREIGN KEY ( `PACK_STATUS_CODE` ) REFERENCES `PACK_STATUS` ( `PACK_STATUS_CODE` );

-- Update foreign keys of MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING
ALTER TABLE `CDR`.`MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING` ADD CONSTRAINT `MAIN_LOCAL_CODE_LOCAL_PACK_MAPPING_TO_LOCAL_PACK_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ) REFERENCES `LOCAL_PACK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` );

-- Update foreign keys of MANAGEMENT_UNIT
ALTER TABLE `CDR`.`MANAGEMENT_UNIT` ADD CONSTRAINT `MANAGEMENT_UNIT_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`MANAGEMENT_UNIT` ADD CONSTRAINT `MANAGEMENT_UNIT_TO_MANAGEMENT_UNIT_FK_PARENT`
	FOREIGN KEY ( `PARENT_MANAGEMENT_UNIT_CODE` ) REFERENCES `MANAGEMENT_UNIT` ( `MANAGEMENT_UNIT_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`MANAGEMENT_UNIT` ADD CONSTRAINT `MANAGEMENT_UNIT_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE
ALTER TABLE `CDR`.`MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE` ADD CONSTRAINT `MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE_TO_ALT_MANAGEMENT_HI_FK`
	FOREIGN KEY ( `ALT_MANAGEMENT_UNIT_CODE`, `ALT_HIER_CODE` ) REFERENCES `ALT_MANAGEMENT_HIER` ( `ALT_MANAGEMENT_UNIT_CODE`, `ALT_HIER_CODE` );

ALTER TABLE `CDR`.`MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE` ADD CONSTRAINT `MANAGEMENT_UNIT__ALT_MANAGEMENT_HIER_AE_TO_MANAGEMENT_UNIT_FK`
	FOREIGN KEY ( `MANAGEMENT_UNIT_CODE` ) REFERENCES `MANAGEMENT_UNIT` ( `MANAGEMENT_UNIT_CODE` );

-- Update foreign keys of MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE
ALTER TABLE `CDR`.`MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE` ADD CONSTRAINT `MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE_TO_MANAGEMENT_UNIT_FK`
	FOREIGN KEY ( `MANAGEMENT_UNIT_CODE` ) REFERENCES `MANAGEMENT_UNIT` ( `MANAGEMENT_UNIT_CODE` );

ALTER TABLE `CDR`.`MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE` ADD CONSTRAINT `MANAGEMENT_UNIT__MANAGEMENT_UNIT_TYPE_AE_TO_MANAGEMENT_UNIT_T_FK`
	FOREIGN KEY ( `MANAGEMENT_UNIT_TYPE_CODE` ) REFERENCES `MANAGEMENT_UNIT_TYPE` ( `MANAGEMENT_UNIT_TYPE_CODE` );

-- Update foreign keys of MANAGEMENT_UNIT_CALENDAR
ALTER TABLE `CDR`.`MANAGEMENT_UNIT_CALENDAR` ADD CONSTRAINT `MANAGEMENT_UNIT_CALENDAR_TO_YEAR_DAY_FK`
	FOREIGN KEY ( `YEAR_DAY_ID` ) REFERENCES `YEAR_DAY` ( `YEAR_DAY_ID` );

-- Update foreign keys of MANAGEMENT_UNIT_TYPE
ALTER TABLE `CDR`.`MANAGEMENT_UNIT_TYPE` ADD CONSTRAINT `MANAGEMENT_UNIT_TYPE_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of MARKET
ALTER TABLE `CDR`.`MARKET` ADD CONSTRAINT `MARKET_TO_COUNTRY_FK`
	FOREIGN KEY ( `COUNTRY_CODE` ) REFERENCES `COUNTRY` ( `COUNTRY_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`MARKET` ADD CONSTRAINT `MARKET_TO_DISEASE_AREA_FK`
	FOREIGN KEY ( `DISEASE_AREA_CODE` ) REFERENCES `DISEASE_AREA` ( `DISEASE_AREA_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

-- Update foreign keys of MOVEMENT_OVER_TIME
ALTER TABLE `CDR`.`MOVEMENT_OVER_TIME` ADD CONSTRAINT `MOVEMENT_OVER_TIME_TO_MOVEMENT_OVER_TIME_FK_PARENT`
	FOREIGN KEY ( `PARENT_MOT_CODE` ) REFERENCES `MOVEMENT_OVER_TIME` ( `MOT_CODE` );

-- Update foreign keys of NFC
ALTER TABLE `CDR`.`NFC` ADD CONSTRAINT `NFC_TO_EXT_FORM_DELIVERY_FK`
	FOREIGN KEY ( `EXT_FORM_DELIVERY_ID` ) REFERENCES `EXT_FORM_DELIVERY` ( `EXT_FORM_DELIVERY_ID` );

ALTER TABLE `CDR`.`NFC` ADD CONSTRAINT `NFC_TO_NFC1_FK`
	FOREIGN KEY ( `NFC1_CODE` ) REFERENCES `NFC1` ( `NFC1_CODE` );

ALTER TABLE `CDR`.`NFC` ADD CONSTRAINT `NFC_TO_NFC12_FK`
	FOREIGN KEY ( `NFC12_CODE` ) REFERENCES `NFC12` ( `NFC12_CODE` );

ALTER TABLE `CDR`.`NFC` ADD CONSTRAINT `NFC_TO_NFC2_FK`
	FOREIGN KEY ( `NFC2_CODE` ) REFERENCES `NFC2` ( `NFC2_CODE` );

ALTER TABLE `CDR`.`NFC` ADD CONSTRAINT `NFC_TO_NFC23_FK`
	FOREIGN KEY ( `NFC23_CODE` ) REFERENCES `NFC23` ( `NFC23_CODE` );

-- Update foreign keys of OPERATING_COSTS
ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_ACTIVITY_TYPE_FK`
	FOREIGN KEY ( `ACTIVITY_TYPE_CODE` ) REFERENCES `ACTIVITY_TYPE` ( `ACTIVITY_TYPE_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_FINANCIAL_SCENARIO_FK`
	FOREIGN KEY ( `FINANCIAL_SCENARIO_CODE` ) REFERENCES `FINANCIAL_SCENARIO` ( `FINANCIAL_SCENARIO_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_FUNCTION_FK`
	FOREIGN KEY ( `FUNCTION_CODE` ) REFERENCES `FUNCTION` ( `FUNCTION_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_INTERNAL_ORDER_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` ) REFERENCES `INTERNAL_ORDER` ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_POSTING_ACCOUNT_FK`
	FOREIGN KEY ( `POSTING_ACCOUNT_CODE` ) REFERENCES `POSTING_ACCOUNT` ( `POSTING_ACCOUNT_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_PROFIT_CENTRE_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PROFIT_CENTRE` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_PROJECT_ACTIVITY_FK`
	FOREIGN KEY ( `PROJECT_ACTIVITY_CODE` ) REFERENCES `PROJECT_ACTIVITY` ( `PROJECT_ACTIVITY_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_PURCHASE_ORDER_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `PURCHASE_ORDER_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PURCHASE_ORDER` ( `SAP_SOURCE_SYSTEM_CODE`, `PURCHASE_ORDER_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`OPERATING_COSTS` ADD CONSTRAINT `OPERATING_COSTS_TO_VENDOR_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` ) REFERENCES `VENDOR` ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` );

-- Update foreign keys of ORG_UNIT_MANAGEMENT_UNIT_MAPPING
ALTER TABLE `CDR`.`ORG_UNIT_MANAGEMENT_UNIT_MAPPING` ADD CONSTRAINT `ORG_UNIT_MANAGEMENT_UNIT_MAPPING_TO_MANAGEMENT_UNIT_FK`
	FOREIGN KEY ( `MANAGEMENT_UNIT_CODE` ) REFERENCES `MANAGEMENT_UNIT` ( `MANAGEMENT_UNIT_CODE` );

-- Update foreign keys of OTHER_P_AND_L
ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_FINANCIAL_SCENARIO_FK`
	FOREIGN KEY ( `FINANCIAL_SCENARIO_CODE` ) REFERENCES `FINANCIAL_SCENARIO` ( `FINANCIAL_SCENARIO_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_FUNCTION_FK`
	FOREIGN KEY ( `FUNCTION_CODE` ) REFERENCES `FUNCTION` ( `FUNCTION_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_INTERNAL_ORDER_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` ) REFERENCES `INTERNAL_ORDER` ( `SAP_SOURCE_SYSTEM_CODE`, `INTERNAL_ORDER_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_POSTING_ACCOUNT_FK`
	FOREIGN KEY ( `POSTING_ACCOUNT_CODE` ) REFERENCES `POSTING_ACCOUNT` ( `POSTING_ACCOUNT_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_PROFIT_CENTRE_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PROFIT_CENTRE` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_PURCHASE_ORDER_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `PURCHASE_ORDER_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PURCHASE_ORDER` ( `SAP_SOURCE_SYSTEM_CODE`, `PURCHASE_ORDER_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_UNIT_OF_MEASURE_FK`
	FOREIGN KEY ( `UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

ALTER TABLE `CDR`.`OTHER_P_AND_L` ADD CONSTRAINT `OTHER_P_AND_L_TO_UNIT_OF_MEASURE_FK_ALTERNATIVE`
	FOREIGN KEY ( `ALTERNATIVE_UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of PACK__EXT_PACK_LOCAL_AE
ALTER TABLE `CDR`.`PACK__EXT_PACK_LOCAL_AE` ADD CONSTRAINT `PACK__EXT_PACK_LOCAL_AE_TO_EXT_PACK_LOCAL_FK`
	FOREIGN KEY ( `EXT_PACK_LOCAL_ID` ) REFERENCES `EXT_PACK_LOCAL` ( `EXT_PACK_LOCAL_ID` );

ALTER TABLE `CDR`.`PACK__EXT_PACK_LOCAL_AE` ADD CONSTRAINT `PACK__EXT_PACK_LOCAL_AE_TO_GLOBAL_PACK_FK`
	FOREIGN KEY ( `GLOBAL_PACK_CODE` ) REFERENCES `GLOBAL_PACK` ( `GLOBAL_PACK_CODE` );

-- Update foreign keys of PERIOD__YEAR_MONTH_AE
ALTER TABLE `CDR`.`PERIOD__YEAR_MONTH_AE` ADD CONSTRAINT `RefYEAR_MNTH1078`
	FOREIGN KEY ( `YEAR_MONTH_ID` ) REFERENCES `YEAR_MNTH` ( `YEAR_MONTH_ID` );

-- Update foreign keys of PHARMACEUTICAL_PRODUCT
ALTER TABLE `CDR`.`PHARMACEUTICAL_PRODUCT` ADD CONSTRAINT `PHARMACEUTICAL_PRODUCT_TO_SUB_BRAND_FK`
	FOREIGN KEY ( `SUB_BRAND_CODE` ) REFERENCES `SUB_BRAND` ( `SUB_BRAND_CODE` );

-- Update foreign keys of PHASE
ALTER TABLE `CDR`.`PHASE` ADD CONSTRAINT `PHASE_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of POSTING_ACCOUNT
ALTER TABLE `CDR`.`POSTING_ACCOUNT` ADD CONSTRAINT `POSTING_ACCOUNT_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of POSTING_ACCOUNT__WRAP_ACCOUNT_AE
ALTER TABLE `CDR`.`POSTING_ACCOUNT__WRAP_ACCOUNT_AE` ADD CONSTRAINT `POSTING_ACCOUNT__WRAP_ACCOUNT_AE_TO_POSTING_ACCOUNT_FK`
	FOREIGN KEY ( `POSTING_ACCOUNT_CODE` ) REFERENCES `POSTING_ACCOUNT` ( `POSTING_ACCOUNT_CODE` );

ALTER TABLE `CDR`.`POSTING_ACCOUNT__WRAP_ACCOUNT_AE` ADD CONSTRAINT `POSTING_ACCOUNT__WRAP_ACCOUNT_AE_TO_WRAP_ACCOUNT_FK`
	FOREIGN KEY ( `WRAP_LEVEL_CODE` ) REFERENCES `WRAP_ACCOUNT` ( `WRAP_LEVEL_CODE` );

-- Update foreign keys of POSTING_ACCOUNT_LANGUAGE
ALTER TABLE `CDR`.`POSTING_ACCOUNT_LANGUAGE` ADD CONSTRAINT `POSTING_ACCOUNT_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

ALTER TABLE `CDR`.`POSTING_ACCOUNT_LANGUAGE` ADD CONSTRAINT `POSTING_ACCOUNT_LANGUAGE_TO_POSTING_ACCOUNT_FK`
	FOREIGN KEY ( `POSTING_ACCOUNT_CODE` ) REFERENCES `POSTING_ACCOUNT` ( `POSTING_ACCOUNT_CODE` );

-- Update foreign keys of PROFIT_CENTRE
ALTER TABLE `CDR`.`PROFIT_CENTRE` ADD CONSTRAINT `PROFIT_CENTRE_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`PROFIT_CENTRE` ADD CONSTRAINT `PROFIT_CENTRE_TO_MANAGEMENT_UNIT_FK`
	FOREIGN KEY ( `MANAGEMENT_UNIT_CODE` ) REFERENCES `MANAGEMENT_UNIT` ( `MANAGEMENT_UNIT_CODE` );

-- Update foreign keys of PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE
ALTER TABLE `CDR`.`PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE` ADD CONSTRAINT `PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE_TO_PROFIT_CENTRE_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PROFIT_CENTRE` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE` ADD CONSTRAINT `PROFIT_CENTRE__PROFIT_CENTRE_GROUP_AE_TO_PROFIT_CENTRE_GROUP_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ) REFERENCES `PROFIT_CENTRE_GROUP` ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` );

-- Update foreign keys of PROFIT_CENTRE_GROUP
ALTER TABLE `CDR`.`PROFIT_CENTRE_GROUP` ADD CONSTRAINT `PROFIT_CENTRE_GROUP_TO_PROFIT_CENTRE_GROUP_FK`
	FOREIGN KEY ( `PARENT_PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ) REFERENCES `PROFIT_CENTRE_GROUP` ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` );

ALTER TABLE `CDR`.`PROFIT_CENTRE_GROUP` ADD CONSTRAINT `PROFIT_CENTRE_GROUP_TO_PROFIT_CENTRE_HIERARCHY_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ) REFERENCES `PROFIT_CENTRE_HIERARCHY` ( `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` );

-- Update foreign keys of PROFIT_CENTRE_GROUP_LANGUAGE
ALTER TABLE `CDR`.`PROFIT_CENTRE_GROUP_LANGUAGE` ADD CONSTRAINT `PROFIT_CENTRE_GROUP_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

ALTER TABLE `CDR`.`PROFIT_CENTRE_GROUP_LANGUAGE` ADD CONSTRAINT `PROFIT_CENTRE_GROUP_LANGUAGE_TO_PROFIT_CENTRE_GROUP_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ) REFERENCES `PROFIT_CENTRE_GROUP` ( `PROFIT_CENTRE_GROUP_CODE`, `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` );

-- Update foreign keys of PROFIT_CENTRE_HIERARCHY_LANGUAGE
ALTER TABLE `CDR`.`PROFIT_CENTRE_HIERARCHY_LANGUAGE` ADD CONSTRAINT `PROFIT_CENTRE_HIERARCHY_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

ALTER TABLE `CDR`.`PROFIT_CENTRE_HIERARCHY_LANGUAGE` ADD CONSTRAINT `PROFIT_CENTRE_HIERARCHY_LANGUAGE_TO_PROFIT_CENTRE_HIERARCHY_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` ) REFERENCES `PROFIT_CENTRE_HIERARCHY` ( `PROFIT_CENTRE_HIERARCHY_CODE`, `CONTROLLING_AREA_CODE` );

-- Update foreign keys of PROFIT_CENTRE_LANGUAGE
ALTER TABLE `CDR`.`PROFIT_CENTRE_LANGUAGE` ADD CONSTRAINT `PROFIT_CENTRE_LANGUAGE_TO_LANGUAGE_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` ) REFERENCES `LANGUAGE` ( `SAP_SOURCE_SYSTEM_CODE`, `LANGUAGE_CODE` );

ALTER TABLE `CDR`.`PROFIT_CENTRE_LANGUAGE` ADD CONSTRAINT `PROFIT_CENTRE_LANGUAGE_TO_PROFIT_CENTRE_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PROFIT_CENTRE` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

-- Update foreign keys of PROJECT
ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_DISEASE_AREA_FK`
	FOREIGN KEY ( `DISEASE_AREA_CODE` ) REFERENCES `DISEASE_AREA` ( `DISEASE_AREA_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_DISEASE_FK`
	FOREIGN KEY ( `DISEASE_CODE` ) REFERENCES `DISEASE` ( `DISEASE_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_EXT_DISEASE_AREA_FK`
	FOREIGN KEY ( `EXT_DISEASE_AREA_CODE` ) REFERENCES `EXT_DISEASE_AREA` ( `EXT_DISEASE_AREA_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_EXT_DISEASE_FK`
	FOREIGN KEY ( `EXT_DISEASE_CODE` ) REFERENCES `EXT_DISEASE` ( `EXT_DISEASE_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_EXT_INDICATION_FK_EXTPRIMARYINDICATIONCODE`
	FOREIGN KEY ( `EXT_PRIMARY_INDICATION_CODE` ) REFERENCES `EXT_INDICATION` ( `EXT_INDICATION_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_IMED_FK`
	FOREIGN KEY ( `IMED_CODE` ) REFERENCES `IMED` ( `IMED_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_INDICATION_FK_PRIMARY`
	FOREIGN KEY ( `PRIMARY_INDICATION_CODE` ) REFERENCES `INDICATION` ( `INDICATION_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_OPAL_PROJECT_TYPE_FK`
	FOREIGN KEY ( `OPAL_PROJECT_TYPE_CODE` ) REFERENCES `OPAL_PROJECT_TYPE` ( `OPAL_PROJECT_TYPE_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_PHASE_FK_CURRENT`
	FOREIGN KEY ( `CURRENT_PHASE_CODE` ) REFERENCES `PHASE` ( `PHASE_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_PROJECT_PLANNING_STATUS_FK`
	FOREIGN KEY ( `PROJECT_PLANNING_STATUS_CODE` ) REFERENCES `PROJECT_PLANNING_STATUS` ( `PROJECT_PLANNING_STATUS_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_PROJECT_PRIORITY_FK`
	FOREIGN KEY ( `PROJECT_PRIORITY_CODE` ) REFERENCES `PROJECT_PRIORITY` ( `PROJECT_PRIORITY_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_PROJECT_SOURCE_FK`
	FOREIGN KEY ( `PROJECT_SOURCE_CODE` ) REFERENCES `PROJECT_SOURCE` ( `PROJECT_SOURCE_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_PROJECT_TYPE_FK`
	FOREIGN KEY ( `PROJECT_TYPE_CODE` ) REFERENCES `PROJECT_TYPE` ( `PROJECT_TYPE_CODE` );

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_R_AND_D_FUNDING_OWNER_FK`
	FOREIGN KEY ( `R_AND_D_FUNDING_OWNER_CODE` ) REFERENCES `R_AND_D_FUNDING_OWNER` ( `R_AND_D_FUNDING_OWNER_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`PROJECT` ADD CONSTRAINT `PROJECT_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of PROJECT__EXT_INDICATION_AE
ALTER TABLE `CDR`.`PROJECT__EXT_INDICATION_AE` ADD CONSTRAINT `PROJECT__EXT_INDICATION_AE_TO_EXT_INDICATION_FK`
	FOREIGN KEY ( `EXT_INDICATION_CODE` ) REFERENCES `EXT_INDICATION` ( `EXT_INDICATION_CODE` );

ALTER TABLE `CDR`.`PROJECT__EXT_INDICATION_AE` ADD CONSTRAINT `PROJECT__EXT_INDICATION_AE_TO_PROJECT_FK`
	FOREIGN KEY ( `PROJECT_CODE` ) REFERENCES `PROJECT` ( `PROJECT_CODE` );

-- Update foreign keys of PROJECT__INDICATION_AE
ALTER TABLE `CDR`.`PROJECT__INDICATION_AE` ADD CONSTRAINT `PROJECT__INDICATION_AE_TO_INDICATION_FK`
	FOREIGN KEY ( `INDICATION_CODE` ) REFERENCES `INDICATION` ( `INDICATION_CODE` );

ALTER TABLE `CDR`.`PROJECT__INDICATION_AE` ADD CONSTRAINT `PROJECT__INDICATION_AE_TO_PROJECT_FK`
	FOREIGN KEY ( `PROJECT_CODE` ) REFERENCES `PROJECT` ( `PROJECT_CODE` );

-- Update foreign keys of PROJECT__PROJECT_GROUP_AE
ALTER TABLE `CDR`.`PROJECT__PROJECT_GROUP_AE` ADD CONSTRAINT `PROJECT__PROJECT_GROUP_AE_TO_PROJECT_FK`
	FOREIGN KEY ( `PROJECT_CODE` ) REFERENCES `PROJECT` ( `PROJECT_CODE` );

-- Update foreign keys of PROJECT_ACTIVITY
ALTER TABLE `CDR`.`PROJECT_ACTIVITY` ADD CONSTRAINT `PROJECT_ACTIVITY_TO_COST_CENTRE_FK`
	FOREIGN KEY ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `COST_CENTRE` ( `COST_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`PROJECT_ACTIVITY` ADD CONSTRAINT `PROJECT_ACTIVITY_TO_PROJECT_ACTIVITY_FK_PARENT`
	FOREIGN KEY ( `PARENT_PROJECT_ACTIVITY_CODE` ) REFERENCES `PROJECT_ACTIVITY` ( `PROJECT_ACTIVITY_CODE` );

ALTER TABLE `CDR`.`PROJECT_ACTIVITY` ADD CONSTRAINT `PROJECT_ACTIVITY_TO_PROJECT_FK`
	FOREIGN KEY ( `PROJECT_CODE` ) REFERENCES `PROJECT` ( `PROJECT_CODE` );

ALTER TABLE `CDR`.`PROJECT_ACTIVITY` ADD CONSTRAINT `PROJECT_ACTIVITY_TO_PROJECT_PLANNING_STATUS_FK`
	FOREIGN KEY ( `PROJECT_PLANNING_STATUS_CODE` ) REFERENCES `PROJECT_PLANNING_STATUS` ( `PROJECT_PLANNING_STATUS_CODE` );

ALTER TABLE `CDR`.`PROJECT_ACTIVITY` ADD CONSTRAINT `PROJECT_ACTIVITY_TO_PROJECT_TYPE_FK`
	FOREIGN KEY ( `PROJECT_TYPE_CODE` ) REFERENCES `PROJECT_TYPE` ( `PROJECT_TYPE_CODE` );

-- Update foreign keys of PROJECT_TYPE
ALTER TABLE `CDR`.`PROJECT_TYPE` ADD CONSTRAINT `PROJECT_TYPE_TO_PROJECT_TYPE_GROUP_FK`
	FOREIGN KEY ( `PROJECT_TYPE_GROUP_CODE` ) REFERENCES `PROJECT_TYPE_GROUP` ( `PROJECT_TYPE_GROUP_CODE` );

ALTER TABLE `CDR`.`PROJECT_TYPE` ADD CONSTRAINT `PROJECT_TYPE_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of PROJECT_TYPE_GROUP
ALTER TABLE `CDR`.`PROJECT_TYPE_GROUP` ADD CONSTRAINT `PROJECT_TYPE_GROUP_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of PURCHASE_ORDER
ALTER TABLE `CDR`.`PURCHASE_ORDER` ADD CONSTRAINT `PURCHASE_ORDER_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`PURCHASE_ORDER` ADD CONSTRAINT `PURCHASE_ORDER_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of R_AND_D_FUNDING_OWNER
ALTER TABLE `CDR`.`R_AND_D_FUNDING_OWNER` ADD CONSTRAINT `R_AND_D_FUNDING_OWNER_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of REGION
ALTER TABLE `CDR`.`REGION` ADD CONSTRAINT `REGION_TO_CONTINENT_FK`
	FOREIGN KEY ( `CONTINENT_CODE` ) REFERENCES `CONTINENT` ( `CONTINENT_CODE` );

ALTER TABLE `CDR`.`REGION` ADD CONSTRAINT `REGION_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`REGION` ADD CONSTRAINT `REGION_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of REPORTING_ACCOUNT
ALTER TABLE `CDR`.`REPORTING_ACCOUNT` ADD CONSTRAINT `REPORTING_ACCOUNT_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`REPORTING_ACCOUNT` ADD CONSTRAINT `REPORTING_ACCOUNT_TO_WRAP_ACCOUNT_FK`
	FOREIGN KEY ( `WRAP_LEVEL_CODE` ) REFERENCES `WRAP_ACCOUNT` ( `WRAP_LEVEL_CODE` );

-- Update foreign keys of SALES
ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_CURRENCY_FK`
	FOREIGN KEY ( `CURRENCY_CODE` ) REFERENCES `CURRENCY` ( `CURRENCY_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_FINANCIAL_CUSTOMER_FK`
	FOREIGN KEY ( `FINANCIAL_CUSTOMER_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `FINANCIAL_CUSTOMER` ( `FINANCIAL_CUSTOMER_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_FINANCIAL_SCENARIO_FK`
	FOREIGN KEY ( `FINANCIAL_SCENARIO_CODE` ) REFERENCES `FINANCIAL_SCENARIO` ( `FINANCIAL_SCENARIO_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_LOCAL_PACK_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` ) REFERENCES `LOCAL_PACK` ( `SAP_SOURCE_SYSTEM_CODE`, `LOCAL_PACK_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_POSTING_ACCOUNT_FK`
	FOREIGN KEY ( `POSTING_ACCOUNT_CODE` ) REFERENCES `POSTING_ACCOUNT` ( `POSTING_ACCOUNT_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_PROFIT_CENTRE_FK`
	FOREIGN KEY ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` ) REFERENCES `PROFIT_CENTRE` ( `PROFIT_CENTRE_CODE`, `LEGAL_ENTITY_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_SALES_ORGANISATION_FK`
	FOREIGN KEY ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SALES_ORGANISATION` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`SALES` ADD CONSTRAINT `SALES_TO_UNIT_OF_MEASURE_FK`
	FOREIGN KEY ( `UNIT_OF_MEASURE_CODE` ) REFERENCES `UNIT_OF_MEASURE` ( `UNIT_OF_MEASURE_CODE` );

-- Update foreign keys of SALES_CHANNEL
ALTER TABLE `CDR`.`SALES_CHANNEL` ADD CONSTRAINT `SALES_CHANNEL_GROUP_CODE_TO_SALES_CHANNEL_GROUP_FK`
	FOREIGN KEY ( `SALES_CHANNEL_GROUP_CODE` ) REFERENCES `SALES_CHANNEL_GROUP` ( `SALES_CHANNEL_GROUP_CODE` );

ALTER TABLE `CDR`.`SALES_CHANNEL` ADD CONSTRAINT `SALES_CHANNEL_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of SALES_CHANNEL_GROUP
ALTER TABLE `CDR`.`SALES_CHANNEL_GROUP` ADD CONSTRAINT `SALES_CHANNEL_GROUP_TO_SALES_CHANNEL_WRAP_LEVEL_FK`
	FOREIGN KEY ( `SALES_CHANNEL_WRAP_LEVEL_CODE` ) REFERENCES `SALES_CHANNEL_WRAP_LEVEL` ( `SALES_CHANNEL_WRAP_LEVEL_CODE` );

ALTER TABLE `CDR`.`SALES_CHANNEL_GROUP` ADD CONSTRAINT `SALES_CHANNEL_GROUP_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of SALES_CHANNEL_WRAP_LEVEL
ALTER TABLE `CDR`.`SALES_CHANNEL_WRAP_LEVEL` ADD CONSTRAINT `SALES_CHANNEL_WRAP_LEVEL_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of SALES_ORGANISATION
ALTER TABLE `CDR`.`SALES_ORGANISATION` ADD CONSTRAINT `SALES_ORGANISATION_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`SALES_ORGANISATION` ADD CONSTRAINT `SALES_ORGANISATION_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of SALES_ORGANISATION_LEGAL_ENTITY
ALTER TABLE `CDR`.`SALES_ORGANISATION_LEGAL_ENTITY` ADD CONSTRAINT `SALES_ORGANISATION_LEGAL_ENTITY_TO_SALES_ORGANISATION_FK`
	FOREIGN KEY ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SALES_ORGANISATION` ( `SALES_ORGANISATION_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of SAP_COMPANY
ALTER TABLE `CDR`.`SAP_COMPANY` ADD CONSTRAINT `SAP_COMPANY_TO_LEGAL_ENTITY_FK`
	FOREIGN KEY ( `LEGAL_ENTITY_CODE` ) REFERENCES `LEGAL_ENTITY` ( `LEGAL_ENTITY_CODE` );

-- Update foreign keys of SCORECARD_CATEGORY
ALTER TABLE `CDR`.`SCORECARD_CATEGORY` ADD CONSTRAINT `SCORECARD_CATEGORY_TO_SCORECARD_CATEGORY_FK_PARENT`
	FOREIGN KEY ( `PARENT_SCORECARD_CATEGORY_CODE` ) REFERENCES `SCORECARD_CATEGORY` ( `SCORECARD_CATEGORY_CODE` );

ALTER TABLE `CDR`.`SCORECARD_CATEGORY` ADD CONSTRAINT `SCORECARD_CATEGORY_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of SECTION
ALTER TABLE `CDR`.`SECTION` ADD CONSTRAINT `SECTION_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of SITE
ALTER TABLE `CDR`.`SITE` ADD CONSTRAINT `SITE_TO_COUNTRY_SUB_DIVISION_FK`
	FOREIGN KEY ( `COUNTRY_SUB_DIVISION_CODE` ) REFERENCES `COUNTRY_SUB_DIVISION` ( `COUNTRY_SUB_DIVISION_CODE` );

ALTER TABLE `CDR`.`SITE` ADD CONSTRAINT `SITE_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of SITE__SITE_TYPE_AE
ALTER TABLE `CDR`.`SITE__SITE_TYPE_AE` ADD CONSTRAINT `SITE__SITE_TYPE_AE_TO_SITE_FK`
	FOREIGN KEY ( `SITE_CODE` ) REFERENCES `SITE` ( `SITE_CODE` );

ALTER TABLE `CDR`.`SITE__SITE_TYPE_AE` ADD CONSTRAINT `SITE__SITE_TYPE_AE_TO_SITE_TYPE_FK`
	FOREIGN KEY ( `SITE_TYPE_CODE` ) REFERENCES `SITE_TYPE` ( `SITE_TYPE_CODE` );

-- Update foreign keys of SUB_ACTIVITY
ALTER TABLE `CDR`.`SUB_ACTIVITY` ADD CONSTRAINT `SUB_ACTIVITY_TO_ACTIVITY_TYPE_FK`
	FOREIGN KEY ( `ACTIVITY_TYPE_CODE` ) REFERENCES `ACTIVITY_TYPE` ( `ACTIVITY_TYPE_CODE` );

-- Update foreign keys of SUB_BRAND
ALTER TABLE `CDR`.`SUB_BRAND` ADD CONSTRAINT `SUB_BRAND_TO_BRAND_FK`
	FOREIGN KEY ( `BRAND_CODE` ) REFERENCES `BRAND` ( `BRAND_CODE` );

-- Update foreign keys of THERAPY_AREA
ALTER TABLE `CDR`.`THERAPY_AREA` ADD CONSTRAINT `THERAPY_AREA_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of VENDOR
ALTER TABLE `CDR`.`VENDOR` ADD CONSTRAINT `VENDOR_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`VENDOR` ADD CONSTRAINT `VENDOR_TO_VENDOR_FK_ALTERNATIVEPAYEECODE`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `ALTERNATIVE_PAYEE_CODE` ) REFERENCES `VENDOR` ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` );

ALTER TABLE `CDR`.`VENDOR` ADD CONSTRAINT `VENDOR_TO_VENDOR_FK_MASTER`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE`, `MASTER_VENDOR_CODE` ) REFERENCES `VENDOR` ( `SAP_SOURCE_SYSTEM_CODE`, `VENDOR_CODE` );

ALTER TABLE `CDR`.`VENDOR` ADD CONSTRAINT `VENDOR_TO_VENDOR_TYPE_FK`
	FOREIGN KEY ( `VENDOR_TYPE_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `VENDOR_TYPE` ( `VENDOR_TYPE_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

ALTER TABLE `CDR`.`VENDOR` ADD CONSTRAINT `VENDOR_TO_VENDOR_TYPE_FK_REFERENCE`
	FOREIGN KEY ( `REFERENCE_VENDOR_TYPE_CODE`, `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `VENDOR_TYPE` ( `VENDOR_TYPE_CODE`, `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of VENDOR_TYPE
ALTER TABLE `CDR`.`VENDOR_TYPE` ADD CONSTRAINT `VENDOR_TYPE_TO_SAP_SOURCE_SYSTEM_FK`
	FOREIGN KEY ( `SAP_SOURCE_SYSTEM_CODE` ) REFERENCES `SAP_SOURCE_SYSTEM` ( `SAP_SOURCE_SYSTEM_CODE` );

-- Update foreign keys of VERSION
ALTER TABLE `CDR`.`VERSION` ADD CONSTRAINT `VERSION_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

-- Update foreign keys of WORKFORCE_MEMBER
ALTER TABLE `CDR`.`WORKFORCE_MEMBER` ADD CONSTRAINT `WORKFORCE_MEMBER_TO_COMPENSATION_GRADE_FK`
	FOREIGN KEY ( `COMPENSATION_GRADE_CODE` ) REFERENCES `COMPENSATION_GRADE` ( `COMPENSATION_GRADE_CODE` ) ON DELETE SET NULL ON UPDATE SET NULL;

ALTER TABLE `CDR`.`WORKFORCE_MEMBER` ADD CONSTRAINT `WORKFORCE_MEMBER_TO_EMPLOYEE_TYPE_FK`
	FOREIGN KEY ( `EMPLOYEE_TYPE_CODE` ) REFERENCES `EMPLOYEE_TYPE` ( `EMPLOYEE_TYPE_CODE` );

ALTER TABLE `CDR`.`WORKFORCE_MEMBER` ADD CONSTRAINT `WORKFORCE_MEMBER_TO_JOB_ROLE_FK`
	FOREIGN KEY ( `JOB_ROLE_CODE` ) REFERENCES `JOB_ROLE` ( `JOB_ROLE_CODE` );

ALTER TABLE `CDR`.`WORKFORCE_MEMBER` ADD CONSTRAINT `WORKFORCE_MEMBER_TO_SITE_FK`
	FOREIGN KEY ( `SITE_CODE` ) REFERENCES `SITE` ( `SITE_CODE` );

-- Update foreign keys of WRAP_ACCOUNT
ALTER TABLE `CDR`.`WRAP_ACCOUNT` ADD CONSTRAINT `WRAP_ACCOUNT_TO_ACCOUNT_HIERARCHY_FK`
	FOREIGN KEY ( `ACCOUNT_HIERARCHY_CODE` ) REFERENCES `ACCOUNT_HIERARCHY` ( `ACCOUNT_HIERARCHY_CODE` );

ALTER TABLE `CDR`.`WRAP_ACCOUNT` ADD CONSTRAINT `WRAP_ACCOUNT_TO_STATUS_FK`
	FOREIGN KEY ( `STATUS_CODE` ) REFERENCES `STATUS` ( `STATUS_CODE` );

ALTER TABLE `CDR`.`WRAP_ACCOUNT` ADD CONSTRAINT `WRAP_ACCOUNT_TO_WRAP_ACCOUNT_FK_PARENT`
	FOREIGN KEY ( `PARENT_WRAP_LEVEL_CODE` ) REFERENCES `WRAP_ACCOUNT` ( `WRAP_LEVEL_CODE` );

-- Update foreign keys of WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE
ALTER TABLE `CDR`.`WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE` ADD CONSTRAINT `WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE_TO_MOVEMENT_OVER_TIME_FK`
	FOREIGN KEY ( `MOT_CODE` ) REFERENCES `MOVEMENT_OVER_TIME` ( `MOT_CODE` );

ALTER TABLE `CDR`.`WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE` ADD CONSTRAINT `WRAP_ACCOUNT__MOVEMENT_OVER_TIME_AE_TO_WRAP_ACCOUNT_FK`
	FOREIGN KEY ( `WRAP_LEVEL_CODE` ) REFERENCES `WRAP_ACCOUNT` ( `WRAP_LEVEL_CODE` );

-- Update foreign keys of YEAR_DAY
ALTER TABLE `CDR`.`YEAR_DAY` ADD CONSTRAINT `YEAR_DAY_TO_YEAR_MNTH_FK`
	FOREIGN KEY ( `YEAR_MONTH_ID` ) REFERENCES `YEAR_MNTH` ( `YEAR_MONTH_ID` );


-- Record Successful Completion and Schema checksum
-- -------------------------------------------------------------------------------------------------
CALL SERVER_ADMIN.release_log(@script_name); 

